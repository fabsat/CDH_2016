

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Mar 19 22:22:47 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     	;# 
    41  0001                     	;# 
    42  0002                     	;# 
    43  0003                     	;# 
    44  0004                     	;# 
    45  0005                     	;# 
    46  0006                     	;# 
    47  0007                     	;# 
    48  0008                     	;# 
    49  0009                     	;# 
    50  000A                     	;# 
    51  000B                     	;# 
    52  000C                     	;# 
    53  000D                     	;# 
    54  000E                     	;# 
    55  000E                     	;# 
    56  000F                     	;# 
    57  0010                     	;# 
    58  0011                     	;# 
    59  0012                     	;# 
    60  0013                     	;# 
    61  0014                     	;# 
    62  0015                     	;# 
    63  0015                     	;# 
    64  0016                     	;# 
    65  0017                     	;# 
    66  0018                     	;# 
    67  0019                     	;# 
    68  001A                     	;# 
    69  001B                     	;# 
    70  001B                     	;# 
    71  001C                     	;# 
    72  001D                     	;# 
    73  001E                     	;# 
    74  001F                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  0086                     	;# 
    78  0087                     	;# 
    79  0088                     	;# 
    80  0089                     	;# 
    81  008C                     	;# 
    82  008D                     	;# 
    83  008E                     	;# 
    84  0091                     	;# 
    85  0092                     	;# 
    86  0093                     	;# 
    87  0094                     	;# 
    88  0098                     	;# 
    89  0099                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009E                     	;# 
    93  009F                     	;# 
    94  010C                     	;# 
    95  010D                     	;# 
    96  010E                     	;# 
    97  010F                     	;# 
    98  018C                     	;# 
    99  018D                     	;# 
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  0007                     	;# 
   108  0008                     	;# 
   109  0009                     	;# 
   110  000A                     	;# 
   111  000B                     	;# 
   112  000C                     	;# 
   113  000D                     	;# 
   114  000E                     	;# 
   115  000E                     	;# 
   116  000F                     	;# 
   117  0010                     	;# 
   118  0011                     	;# 
   119  0012                     	;# 
   120  0013                     	;# 
   121  0014                     	;# 
   122  0015                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0017                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001B                     	;# 
   130  001B                     	;# 
   131  001C                     	;# 
   132  001D                     	;# 
   133  001E                     	;# 
   134  001F                     	;# 
   135  0081                     	;# 
   136  0085                     	;# 
   137  0086                     	;# 
   138  0087                     	;# 
   139  0088                     	;# 
   140  0089                     	;# 
   141  008C                     	;# 
   142  008D                     	;# 
   143  008E                     	;# 
   144  0091                     	;# 
   145  0092                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  0000                     	;# 
   161  0001                     	;# 
   162  0002                     	;# 
   163  0003                     	;# 
   164  0004                     	;# 
   165  0005                     	;# 
   166  0006                     	;# 
   167  0007                     	;# 
   168  0008                     	;# 
   169  0009                     	;# 
   170  000A                     	;# 
   171  000B                     	;# 
   172  000C                     	;# 
   173  000D                     	;# 
   174  000E                     	;# 
   175  000E                     	;# 
   176  000F                     	;# 
   177  0010                     	;# 
   178  0011                     	;# 
   179  0012                     	;# 
   180  0013                     	;# 
   181  0014                     	;# 
   182  0015                     	;# 
   183  0015                     	;# 
   184  0016                     	;# 
   185  0017                     	;# 
   186  0018                     	;# 
   187  0019                     	;# 
   188  001A                     	;# 
   189  001B                     	;# 
   190  001B                     	;# 
   191  001C                     	;# 
   192  001D                     	;# 
   193  001E                     	;# 
   194  001F                     	;# 
   195  0081                     	;# 
   196  0085                     	;# 
   197  0086                     	;# 
   198  0087                     	;# 
   199  0088                     	;# 
   200  0089                     	;# 
   201  008C                     	;# 
   202  008D                     	;# 
   203  008E                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  010C                     	;# 
   215  010D                     	;# 
   216  010E                     	;# 
   217  010F                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  018C                     	;# 
   279  018D                     	;# 
   280  0000                     	;# 
   281  0001                     	;# 
   282  0002                     	;# 
   283  0003                     	;# 
   284  0004                     	;# 
   285  0005                     	;# 
   286  0006                     	;# 
   287  0007                     	;# 
   288  0008                     	;# 
   289  0009                     	;# 
   290  000A                     	;# 
   291  000B                     	;# 
   292  000C                     	;# 
   293  000D                     	;# 
   294  000E                     	;# 
   295  000E                     	;# 
   296  000F                     	;# 
   297  0010                     	;# 
   298  0011                     	;# 
   299  0012                     	;# 
   300  0013                     	;# 
   301  0014                     	;# 
   302  0015                     	;# 
   303  0015                     	;# 
   304  0016                     	;# 
   305  0017                     	;# 
   306  0018                     	;# 
   307  0019                     	;# 
   308  001A                     	;# 
   309  001B                     	;# 
   310  001B                     	;# 
   311  001C                     	;# 
   312  001D                     	;# 
   313  001E                     	;# 
   314  001F                     	;# 
   315  0081                     	;# 
   316  0085                     	;# 
   317  0086                     	;# 
   318  0087                     	;# 
   319  0088                     	;# 
   320  0089                     	;# 
   321  008C                     	;# 
   322  008D                     	;# 
   323  008E                     	;# 
   324  0091                     	;# 
   325  0092                     	;# 
   326  0093                     	;# 
   327  0094                     	;# 
   328  0098                     	;# 
   329  0099                     	;# 
   330  009C                     	;# 
   331  009D                     	;# 
   332  009E                     	;# 
   333  009F                     	;# 
   334  010C                     	;# 
   335  010D                     	;# 
   336  010E                     	;# 
   337  010F                     	;# 
   338  018C                     	;# 
   339  018D                     	;# 
   340  0000                     	;# 
   341  0001                     	;# 
   342  0002                     	;# 
   343  0003                     	;# 
   344  0004                     	;# 
   345  0005                     	;# 
   346  0006                     	;# 
   347  0007                     	;# 
   348  0008                     	;# 
   349  0009                     	;# 
   350  000A                     	;# 
   351  000B                     	;# 
   352  000C                     	;# 
   353  000D                     	;# 
   354  000E                     	;# 
   355  000E                     	;# 
   356  000F                     	;# 
   357  0010                     	;# 
   358  0011                     	;# 
   359  0012                     	;# 
   360  0013                     	;# 
   361  0014                     	;# 
   362  0015                     	;# 
   363  0015                     	;# 
   364  0016                     	;# 
   365  0017                     	;# 
   366  0018                     	;# 
   367  0019                     	;# 
   368  001A                     	;# 
   369  001B                     	;# 
   370  001B                     	;# 
   371  001C                     	;# 
   372  001D                     	;# 
   373  001E                     	;# 
   374  001F                     	;# 
   375  0081                     	;# 
   376  0085                     	;# 
   377  0086                     	;# 
   378  0087                     	;# 
   379  0088                     	;# 
   380  0089                     	;# 
   381  008C                     	;# 
   382  008D                     	;# 
   383  008E                     	;# 
   384  0091                     	;# 
   385  0092                     	;# 
   386  0093                     	;# 
   387  0094                     	;# 
   388  0098                     	;# 
   389  0099                     	;# 
   390  009C                     	;# 
   391  009D                     	;# 
   392  009E                     	;# 
   393  009F                     	;# 
   394  010C                     	;# 
   395  010D                     	;# 
   396  010E                     	;# 
   397  010F                     	;# 
   398  018C                     	;# 
   399  018D                     	;# 
   400  0000                     	;# 
   401  0001                     	;# 
   402  0002                     	;# 
   403  0003                     	;# 
   404  0004                     	;# 
   405  0005                     	;# 
   406  0006                     	;# 
   407  0007                     	;# 
   408  0008                     	;# 
   409  0009                     	;# 
   410  000A                     	;# 
   411  000B                     	;# 
   412  000C                     	;# 
   413  000D                     	;# 
   414  000E                     	;# 
   415  000E                     	;# 
   416  000F                     	;# 
   417  0010                     	;# 
   418  0011                     	;# 
   419  0012                     	;# 
   420  0013                     	;# 
   421  0014                     	;# 
   422  0015                     	;# 
   423  0015                     	;# 
   424  0016                     	;# 
   425  0017                     	;# 
   426  0018                     	;# 
   427  0019                     	;# 
   428  001A                     	;# 
   429  001B                     	;# 
   430  001B                     	;# 
   431  001C                     	;# 
   432  001D                     	;# 
   433  001E                     	;# 
   434  001F                     	;# 
   435  0081                     	;# 
   436  0085                     	;# 
   437  0086                     	;# 
   438  0087                     	;# 
   439  0088                     	;# 
   440  0089                     	;# 
   441  008C                     	;# 
   442  008D                     	;# 
   443  008E                     	;# 
   444  0091                     	;# 
   445  0092                     	;# 
   446  0093                     	;# 
   447  0094                     	;# 
   448  0098                     	;# 
   449  0099                     	;# 
   450  009C                     	;# 
   451  009D                     	;# 
   452  009E                     	;# 
   453  009F                     	;# 
   454  010C                     	;# 
   455  010D                     	;# 
   456  010E                     	;# 
   457  010F                     	;# 
   458  018C                     	;# 
   459  018D                     	;# 
   460  0000                     	;# 
   461  0001                     	;# 
   462  0002                     	;# 
   463  0003                     	;# 
   464  0004                     	;# 
   465  0005                     	;# 
   466  0006                     	;# 
   467  0007                     	;# 
   468  0008                     	;# 
   469  0009                     	;# 
   470  000A                     	;# 
   471  000B                     	;# 
   472  000C                     	;# 
   473  000D                     	;# 
   474  000E                     	;# 
   475  000E                     	;# 
   476  000F                     	;# 
   477  0010                     	;# 
   478  0011                     	;# 
   479  0012                     	;# 
   480  0013                     	;# 
   481  0014                     	;# 
   482  0015                     	;# 
   483  0015                     	;# 
   484  0016                     	;# 
   485  0017                     	;# 
   486  0018                     	;# 
   487  0019                     	;# 
   488  001A                     	;# 
   489  001B                     	;# 
   490  001B                     	;# 
   491  001C                     	;# 
   492  001D                     	;# 
   493  001E                     	;# 
   494  001F                     	;# 
   495  0081                     	;# 
   496  0085                     	;# 
   497  0086                     	;# 
   498  0087                     	;# 
   499  0088                     	;# 
   500  0089                     	;# 
   501  008C                     	;# 
   502  008D                     	;# 
   503  008E                     	;# 
   504  0091                     	;# 
   505  0092                     	;# 
   506  0093                     	;# 
   507  0094                     	;# 
   508  0098                     	;# 
   509  0099                     	;# 
   510  009C                     	;# 
   511  009D                     	;# 
   512  009E                     	;# 
   513  009F                     	;# 
   514  010C                     	;# 
   515  010D                     	;# 
   516  010E                     	;# 
   517  010F                     	;# 
   518  018C                     	;# 
   519  018D                     	;# 
   520                           
   521                           	psect	strings
   522  0003                     __pstrings:	
   523  0003                     stringtab:	
   524  0003                     __stringtab:	
   525                           
   526                           ;	String table - string pointers are 1 byte each
   527  0003  1BFF               	btfsc	btemp+1,7
   528  0004  280D               	ljmp	stringcode
   529  0005  1383               	bcf	3,7
   530  0006  187F               	btfsc	btemp+1,0
   531  0007  1783               	bsf	3,7
   532  0008  0800               	movf	0,w
   533  0009  0A84               	incf	4,f
   534  000A  1903               	skipnz
   535  000B  0AFF               	incf	btemp+1,f
   536  000C  0008               	return
   537  000D                     stringcode:	
   538  000D                     stringdir:	
   539  000D  3000               	movlw	high stringdir
   540  000E  008A               	movwf	10
   541  000F  0804               	movf	4,w
   542  0010  0A84               	incf	4,f
   543  0011  0782               	addwf	2,f
   544  0012                     __stringbase:	
   545  0012  3400               	retlw	0
   546  0013                     __end_of__stringtab:	
   547  0013                     uint16_to_byte_array@bit_mask:	
   548  0013  34FF               	retlw	255
   549  0014  3400               	retlw	0
   550  0015                     __end_ofuint16_to_byte_array@bit_mask:	
   551  0015                     bit_shift@bit_mask_for_l:	
   552  0015  3403               	retlw	3
   553  0016                     __end_ofbit_shift@bit_mask_for_l:	
   554  0016                     main@data0:	
   555  0016  3400               	retlw	0
   556  0017  3480               	retlw	128
   557  0018  343F               	retlw	63
   558  0019                     __end_ofmain@data0:	
   559  0019                     main@data3:	
   560  0019  3400               	retlw	0
   561  001A  3480               	retlw	128
   562  001B  343F               	retlw	63
   563  001C                     __end_ofmain@data3:	
   564  001C                     main@data4:	
   565  001C  3400               	retlw	0
   566  001D  3480               	retlw	128
   567  001E  343F               	retlw	63
   568  001F                     __end_ofmain@data4:	
   569  001F                     main@data5:	
   570  001F  3400               	retlw	0
   571  0020  3480               	retlw	128
   572  0021  343F               	retlw	63
   573  0022                     __end_ofmain@data5:	
   574  0022                     main@data2:	
   575  0022  3402               	retlw	2
   576  0023  3400               	retlw	0
   577  0024                     __end_ofmain@data2:	
   578  0024                     main@data1:	
   579  0024  3401               	retlw	1
   580  0025                     __end_ofmain@data1:	
   581  001F                     _ADCON0	set	31
   582  001F                     _ADCON0bits	set	31
   583  001E                     _ADRESH	set	30
   584  0005                     _PORTAbits	set	5
   585  0007                     _PORTCbits	set	7
   586  0008                     _PORTDbits	set	8
   587  001A                     _RCREG	set	26
   588  0018                     _RCSTA	set	24
   589  0013                     _SSPBUF	set	19
   590  0014                     _SSPCONbits	set	20
   591  0019                     _TXREG	set	25
   592  0065                     _RCIF	set	101
   593  0047                     _RD7	set	71
   594  0064                     _TXIF	set	100
   595  009F                     _ADCON1	set	159
   596  009E                     _ADRESL	set	158
   597  0099                     _SPBRG	set	153
   598  0094                     _SSPSTATbits	set	148
   599  0085                     _TRISAbits	set	133
   600  0087                     _TRISCbits	set	135
   601  0088                     _TRISDbits	set	136
   602  0089                     _TRISEbits	set	137
   603  0098                     _TXSTA	set	152
   604  0447                     _TRISD7	set	1095
   605  0025                     STR_1:	
   606  0025  3450               	retlw	80	;'P'
   607  0026  3472               	retlw	114	;'r'
   608  0027  346F               	retlw	111	;'o'
   609  0028  3467               	retlw	103	;'g'
   610  0029  3472               	retlw	114	;'r'
   611  002A  3461               	retlw	97	;'a'
   612  002B  346D               	retlw	109	;'m'
   613  002C  3420               	retlw	32	;' '
   614  002D  3453               	retlw	83	;'S'
   615  002E  3474               	retlw	116	;'t'
   616  002F  3461               	retlw	97	;'a'
   617  0030  3472               	retlw	114	;'r'
   618  0031  3474               	retlw	116	;'t'
   619  0032  3421               	retlw	33	;'!'
   620  0033  340D               	retlw	13
   621  0034  340A               	retlw	10
   622  0035  3400               	retlw	0
   623  0033                     
   624                           ; #config settings
   625  0000                     
   626                           	psect	cinit
   627  07F5                     start_initialization:	
   628  07F5                     __initialization:	
   629                           
   630                           ; Clear objects allocated to BANK0
   631  07F5  1383               	bcf	3,7	;select IRP bank0
   632  07F6  3020               	movlw	low __pbssBANK0
   633  07F7  0084               	movwf	4
   634  07F8  304E               	movlw	low (__pbssBANK0+46)
   635  07F9  120A  118A  20CD   	fcall	clear_ram0
   636  07FC                     end_of_initialization:	
   637                           ;End of C runtime variable initialization code
   638                           
   639  07FC                     __end_of__initialization:	
   640  07FC  0183               	clrf	3
   641  07FD  120A  118A  2F1C   	ljmp	_main	;jump to C main() function
   642                           
   643                           	psect	bssBANK0
   644  0020                     __pbssBANK0:	
   645  0020                     _index_pos:	
   646  0020                     	ds	1
   647  0021                     _packet:	
   648  0021                     	ds	32
   649  0041                     _cw:	
   650  0041                     	ds	13
   651                           
   652                           	psect	clrtext
   653  00CD                     clear_ram0:	
   654                           ;	Called with FSR containing the base address, and
   655                           ;	W with the last address+1
   656                           
   657  00CD  0064               	clrwdt	;clear the watchdog before getting into this loop
   658  00CE                     clrloop0:	
   659  00CE  0180               	clrf	0	;clear RAM location pointed to by FSR
   660  00CF  0A84               	incf	4,f	;increment pointer
   661  00D0  0604               	xorwf	4,w	;XOR with final address
   662  00D1  1903               	btfsc	3,2	;have we reached the end yet?
   663  00D2  3400               	retlw	0	;all done for this memory range, return
   664  00D3  0604               	xorwf	4,w	;XOR again to restore value
   665  00D4  28CE               	goto	clrloop0	;do the next byte
   666                           
   667                           	psect	cstackCOMMON
   668  0070                     __pcstackCOMMON:	
   669  0070                     ?_sysprot_init:	
   670  0070                     ??_sysprot_init:	
   671                           ; 0 bytes @ 0x0
   672                           
   673  0070                     ?_uart_init:	
   674                           ; 0 bytes @ 0x0
   675                           
   676  0070                     ??_uart_init:	
   677                           ; 0 bytes @ 0x0
   678                           
   679  0070                     ?_show_packet:	
   680                           ; 0 bytes @ 0x0
   681                           
   682  0070                     ?_cw_data_set:	
   683                           ; 0 bytes @ 0x0
   684                           
   685  0070                     ?_uint8_data_set:	
   686                           ; 0 bytes @ 0x0
   687                           
   688  0070                     ?_uint16_to_byte_array:	
   689                           ; 0 bytes @ 0x0
   690                           
   691  0070                     ?_double_to_byte_array:	
   692                           ; 0 bytes @ 0x0
   693                           
   694  0070                     ?_bit_shift:	
   695                           ; 0 bytes @ 0x0
   696                           
   697  0070                     ?_spi_master_start:	
   698                           ; 0 bytes @ 0x0
   699                           
   700  0070                     ??_spi_master_start:	
   701                           ; 0 bytes @ 0x0
   702                           
   703  0070                     ??_spi_master_receive:	
   704                           ; 0 bytes @ 0x0
   705                           
   706  0070                     ?_spi_master_send:	
   707                           ; 0 bytes @ 0x0
   708                           
   709  0070                     ?_putch:	
   710                           ; 0 bytes @ 0x0
   711                           
   712  0070                     ??_putch:	
   713                           ; 0 bytes @ 0x0
   714                           
   715  0070                     ?_spi_master_receive:	
   716                           ; 0 bytes @ 0x0
   717                           
   718  0070                     ?_get_cw_data:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_main:	
   722                           ; 2 bytes @ 0x0
   723                           
   724  0070                     ?___wmul:	
   725                           ; 2 bytes @ 0x0
   726                           
   727  0070                     ?___awdiv:	
   728                           ; 2 bytes @ 0x0
   729                           
   730  0070                     ?___awmod:	
   731                           ; 2 bytes @ 0x0
   732                           
   733  0070                     bit_shift@p_adres:	
   734                           ; 2 bytes @ 0x0
   735                           
   736  0070                     spi_master_send@data:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     putch@byte:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     uint16_to_byte_array@p_data_array:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     double_to_byte_array@p_data_array:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     uint8_data_set@p_data:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ___wmul@multiplier:	
   752                           ; 2 bytes @ 0x0
   753                           
   754  0070                     ___awdiv@divisor:	
   755                           ; 2 bytes @ 0x0
   756                           
   757  0070                     ___awmod@divisor:	
   758                           ; 2 bytes @ 0x0
   759                           
   760                           
   761                           ; 2 bytes @ 0x0
   762  0070                     	ds	1
   763  0071                     ?_put_string:	
   764  0071                     ??_uint16_to_byte_array:	
   765                           ; 0 bytes @ 0x1
   766                           
   767  0071                     ??_double_to_byte_array:	
   768                           ; 0 bytes @ 0x1
   769                           
   770  0071                     ??_bit_shift:	
   771                           ; 0 bytes @ 0x1
   772                           
   773  0071                     ??_spi_master_send:	
   774                           ; 0 bytes @ 0x1
   775                           
   776  0071                     spi_master_receive@dummy:	
   777                           ; 0 bytes @ 0x1
   778                           
   779  0071                     put_string@str:	
   780                           ; 1 bytes @ 0x1
   781                           
   782                           
   783                           ; 2 bytes @ 0x1
   784  0071                     	ds	1
   785  0072                     spi_master_send@dummy:	
   786  0072                     uint8_data_set@data_len:	
   787                           ; 1 bytes @ 0x2
   788                           
   789  0072                     spi_master_receive@timeout_counter:	
   790                           ; 1 bytes @ 0x2
   791                           
   792  0072                     ___wmul@multiplicand:	
   793                           ; 2 bytes @ 0x2
   794                           
   795  0072                     ___awdiv@dividend:	
   796                           ; 2 bytes @ 0x2
   797                           
   798  0072                     ___awmod@dividend:	
   799                           ; 2 bytes @ 0x2
   800                           
   801                           
   802                           ; 2 bytes @ 0x2
   803  0072                     	ds	1
   804  0073                     ??_put_string:	
   805  0073                     ??_uint8_data_set:	
   806                           ; 0 bytes @ 0x3
   807                           
   808  0073                     spi_master_send@timeout_counter:	
   809                           ; 0 bytes @ 0x3
   810                           
   811  0073                     double_to_byte_array@converter:	
   812                           ; 2 bytes @ 0x3
   813                           
   814                           
   815                           ; 4 bytes @ 0x3
   816  0073                     	ds	1
   817  0074                     ??_cw_data_set:	
   818  0074                     ??___wmul:	
   819                           ; 0 bytes @ 0x4
   820                           
   821  0074                     ??___awdiv:	
   822                           ; 0 bytes @ 0x4
   823                           
   824  0074                     ??___awmod:	
   825                           ; 0 bytes @ 0x4
   826                           
   827  0074                     spi_master_receive@destination:	
   828                           ; 0 bytes @ 0x4
   829                           
   830  0074                     uint16_to_byte_array@p_data:	
   831                           ; 1 bytes @ 0x4
   832                           
   833  0074                     ___wmul@product:	
   834                           ; 1 bytes @ 0x4
   835                           
   836                           
   837                           ; 2 bytes @ 0x4
   838  0074                     	ds	1
   839  0075                     ?_uint16_data_set:	
   840  0075                     bit_shift@p_ad_value:	
   841                           ; 0 bytes @ 0x5
   842                           
   843  0075                     spi_master_send@destination:	
   844                           ; 1 bytes @ 0x5
   845                           
   846  0075                     cw_data_set@p_cw_data:	
   847                           ; 1 bytes @ 0x5
   848                           
   849  0075                     uint16_data_set@data_len:	
   850                           ; 1 bytes @ 0x5
   851                           
   852  0075                     ___awdiv@counter:	
   853                           ; 1 bytes @ 0x5
   854                           
   855  0075                     ___awmod@counter:	
   856                           ; 1 bytes @ 0x5
   857                           
   858                           
   859                           ; 1 bytes @ 0x5
   860  0075                     	ds	1
   861  0076                     ??_uint16_data_set:	
   862  0076                     ?_send_payload:	
   863                           ; 0 bytes @ 0x6
   864                           
   865  0076                     ?_get_adcon:	
   866                           ; 1 bytes @ 0x6
   867                           
   868  0076                     send_payload@p_payload:	
   869                           ; 2 bytes @ 0x6
   870                           
   871  0076                     ___awdiv@sign:	
   872                           ; 1 bytes @ 0x6
   873                           
   874  0076                     ___awmod@sign:	
   875                           ; 1 bytes @ 0x6
   876                           
   877                           
   878                           ; 1 bytes @ 0x6
   879  0076                     	ds	1
   880  0077                     ?_process_1:	
   881  0077                     ??_send_payload:	
   882                           ; 0 bytes @ 0x7
   883                           
   884  0077                     double_to_byte_array@p_data:	
   885                           ; 0 bytes @ 0x7
   886                           
   887  0077                     process_1@p_str_buf:	
   888                           ; 1 bytes @ 0x7
   889                           
   890  0077                     ___awdiv@quotient:	
   891                           ; 1 bytes @ 0x7
   892                           
   893  0077                     uint16_data_set@buf:	
   894                           ; 2 bytes @ 0x7
   895                           
   896                           
   897                           ; 3 bytes @ 0x7
   898  0077                     	ds	1
   899  0078                     ??_get_adcon:	
   900  0078                     double_to_byte_array@i:	
   901                           ; 0 bytes @ 0x8
   902                           
   903  0078                     send_payload@data_len:	
   904                           ; 1 bytes @ 0x8
   905                           
   906  0078                     process_1@p_flag:	
   907                           ; 1 bytes @ 0x8
   908                           
   909                           
   910                           ; 1 bytes @ 0x8
   911  0078                     	ds	1
   912  0079                     ?_double_data_set:	
   913  0079                     ??_process_1:	
   914                           ; 0 bytes @ 0x9
   915                           
   916  0079                     double_data_set@data_len:	
   917                           ; 0 bytes @ 0x9
   918                           
   919  0079                     send_payload@i:	
   920                           ; 1 bytes @ 0x9
   921                           
   922  0079                     get_adcon@my_adres:	
   923                           ; 1 bytes @ 0x9
   924                           
   925                           
   926                           ; 2 bytes @ 0x9
   927  0079                     	ds	1
   928  007A                     ??_double_data_set:	
   929  007A                     uint16_data_set@p_data:	
   930                           ; 0 bytes @ 0xA
   931                           
   932  007A                     send_payload@index_pos:	
   933                           ; 1 bytes @ 0xA
   934                           
   935                           
   936                           ; 1 bytes @ 0xA
   937  007A                     	ds	1
   938  007B                     uint16_data_set@i:	
   939  007B                     send_payload@destination:	
   940                           ; 1 bytes @ 0xB
   941                           
   942  007B                     process_1@num:	
   943                           ; 1 bytes @ 0xB
   944                           
   945  007B                     get_adcon@ad_value:	
   946                           ; 1 bytes @ 0xB
   947                           
   948                           
   949                           ; 2 bytes @ 0xB
   950  007B                     	ds	1
   951  007C                     ?_packet_send_master:	
   952  007C                     ?_sent_data_set:	
   953                           ; 0 bytes @ 0xC
   954                           
   955  007C                     sent_data_set@data_len:	
   956                           ; 1 bytes @ 0xC
   957                           
   958  007C                     packet_send_master@p_packet:	
   959                           ; 1 bytes @ 0xC
   960                           
   961  007C                     process_1@i:	
   962                           ; 1 bytes @ 0xC
   963                           
   964                           
   965                           ; 1 bytes @ 0xC
   966  007C                     	ds	1
   967  007D                     ??_get_cw_data:	
   968  007D                     ??_packet_send_master:	
   969                           ; 0 bytes @ 0xD
   970                           
   971  007D                     sent_data_set@byte_of_data:	
   972                           ; 0 bytes @ 0xD
   973                           
   974  007D                     process_1@val:	
   975                           ; 1 bytes @ 0xD
   976                           
   977                           
   978                           ; 1 bytes @ 0xD
   979  007D                     	ds	1
   980                           
   981                           	psect	cstackBANK0
   982  004E                     __pcstackBANK0:	
   983  004E                     ?_process_10:	
   984  004E                     packet_send_master@destination:	
   985                           ; 0 bytes @ 0x0
   986                           
   987  004E                     process_10@p_str_buf:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  004E                     get_cw_data@buf:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  004E                     double_data_set@buf:	
   994                           ; 2 bytes @ 0x0
   995                           
   996                           
   997                           ; 5 bytes @ 0x0
   998  004E                     	ds	1
   999  004F                     ?_send_data_master:	
  1000  004F                     send_data_master@data_type:	
  1001                           ; 0 bytes @ 0x1
  1002                           
  1003  004F                     process_10@p_flag:	
  1004                           ; 1 bytes @ 0x1
  1005                           
  1006                           
  1007                           ; 1 bytes @ 0x1
  1008  004F                     	ds	1
  1009  0050                     ??_process_10:	
  1010  0050                     send_data_master@data_end_command:	
  1011                           ; 0 bytes @ 0x2
  1012                           
  1013                           
  1014                           ; 1 bytes @ 0x2
  1015  0050                     	ds	1
  1016  0051                     ??_send_data_master:	
  1017                           
  1018                           ; 0 bytes @ 0x3
  1019  0051                     	ds	1
  1020  0052                     send_data_master@destination:	
  1021                           
  1022                           ; 1 bytes @ 0x4
  1023  0052                     	ds	1
  1024  0053                     double_data_set@p_data:	
  1025                           
  1026                           ; 1 bytes @ 0x5
  1027  0053                     	ds	1
  1028  0054                     double_data_set@i:	
  1029  0054                     process_10@divide:	
  1030                           ; 1 bytes @ 0x6
  1031                           
  1032                           
  1033                           ; 1 bytes @ 0x6
  1034  0054                     	ds	1
  1035  0055                     ??_sent_data_set:	
  1036  0055                     process_10@val:	
  1037                           ; 0 bytes @ 0x7
  1038                           
  1039                           
  1040                           ; 1 bytes @ 0x7
  1041  0055                     	ds	1
  1042  0056                     process_10@i:	
  1043                           
  1044                           ; 1 bytes @ 0x8
  1045  0056                     	ds	1
  1046  0057                     process_10@num:	
  1047                           
  1048                           ; 1 bytes @ 0x9
  1049  0057                     	ds	1
  1050  0058                     ?_process_100:	
  1051  0058                     process_100@p_str_buf:	
  1052                           ; 0 bytes @ 0xA
  1053                           
  1054                           
  1055                           ; 1 bytes @ 0xA
  1056  0058                     	ds	1
  1057  0059                     process_100@p_flag:	
  1058                           
  1059                           ; 1 bytes @ 0xB
  1060  0059                     	ds	1
  1061  005A                     ??_process_100:	
  1062  005A                     sent_data_set@p_data:	
  1063                           ; 0 bytes @ 0xC
  1064                           
  1065                           
  1066                           ; 1 bytes @ 0xC
  1067  005A                     	ds	3
  1068  005D                     _process_100$1205:	
  1069                           
  1070                           ; 1 bytes @ 0xF
  1071  005D                     	ds	1
  1072  005E                     process_100@num:	
  1073                           
  1074                           ; 1 bytes @ 0x10
  1075  005E                     	ds	1
  1076  005F                     ?_uint8_to_string:	
  1077  005F                     uint8_to_string@p_str_buf:	
  1078                           ; 0 bytes @ 0x11
  1079                           
  1080                           
  1081                           ; 1 bytes @ 0x11
  1082  005F                     	ds	1
  1083  0060                     uint8_to_string@buf_size:	
  1084                           
  1085                           ; 1 bytes @ 0x12
  1086  0060                     	ds	1
  1087  0061                     ??_uint8_to_string:	
  1088                           
  1089                           ; 0 bytes @ 0x13
  1090  0061                     	ds	2
  1091  0063                     uint8_to_string@flag:	
  1092                           
  1093                           ; 1 bytes @ 0x15
  1094  0063                     	ds	1
  1095  0064                     uint8_to_string@num:	
  1096                           
  1097                           ; 1 bytes @ 0x16
  1098  0064                     	ds	1
  1099  0065                     ??_show_packet:	
  1100                           
  1101                           ; 0 bytes @ 0x17
  1102  0065                     	ds	2
  1103  0067                     show_packet@buf:	
  1104                           
  1105                           ; 4 bytes @ 0x19
  1106  0067                     	ds	4
  1107  006B                     show_packet@i:	
  1108                           
  1109                           ; 1 bytes @ 0x1D
  1110  006B                     	ds	1
  1111  006C                     ??_main:	
  1112                           
  1113                           ; 0 bytes @ 0x1E
  1114  006C                     	ds	3
  1115                           
  1116                           	psect	maintext
  1117  071C                     __pmaintext:	
  1118 ;;
  1119 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1120 ;;
  1121 ;; *************** function _main *****************
  1122 ;; Defined at:
  1123 ;;		line 31 in file "OBC1_main.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  2   28[None  ] int 
  1130 ;; Registers used:
  1131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : B00/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1137 ;;      Params:         0       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0
  1139 ;;      Temps:          0       3       0       0       0
  1140 ;;      Totals:         0       3       0       0       0
  1141 ;;Total ram usage:        3 bytes
  1142 ;; Hardware stack levels required when called:    5
  1143 ;; This function calls:
  1144 ;;		_cw_data_set
  1145 ;;		_get_cw_data
  1146 ;;		_put_string
  1147 ;;		_send_data_master
  1148 ;;		_sent_data_set
  1149 ;;		_show_packet
  1150 ;;		_sysprot_init
  1151 ;;		_uart_init
  1152 ;; This function is called by:
  1153 ;;		Startup code after reset
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           
  1158                           ;psect for function _main
  1159  071C                     _main:	
  1160                           
  1161                           ;OBC1_main.c: 33: TRISD7 = 0;
  1162                           
  1163                           ;incstack = 0
  1164                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1165  071C  1683               	bsf	3,5	;RP0=1, select bank1
  1166  071D  1303               	bcf	3,6	;RP1=0, select bank1
  1167  071E  1388               	bcf	8,7	;volatile
  1168                           
  1169                           ;OBC1_main.c: 34: PORTDbits.RD7 = 0;
  1170  071F  1283               	bcf	3,5	;RP0=0, select bank0
  1171  0720  1303               	bcf	3,6	;RP1=0, select bank0
  1172  0721  1388               	bcf	8,7	;volatile
  1173                           
  1174                           ;OBC1_main.c: 37: sysprot_init();
  1175  0722  120A  118A  20C0  120A  118A  	fcall	_sysprot_init
  1176                           
  1177                           ;OBC1_main.c: 38: uart_init();
  1178  0727  120A  118A  20D5  120A  118A  	fcall	_uart_init
  1179                           
  1180                           ;OBC1_main.c: 48: put_string("Program Start!\r\n");
  1181  072C  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1182  072D  00F1               	movwf	put_string@str
  1183  072E  3080               	movlw	128
  1184  072F  00F2               	movwf	put_string@str+1
  1185  0730  120A  118A  2155  120A  118A  	fcall	_put_string
  1186                           
  1187                           ;OBC1_main.c: 50: const double data0 = 1.0;
  1188                           ;OBC1_main.c: 51: const double data4 = 1.0;
  1189                           ;OBC1_main.c: 52: const uint8_t data1 = 0x01;
  1190                           ;OBC1_main.c: 53: const double data5 = 1.0;
  1191                           ;OBC1_main.c: 54: const uint16_t data2 = 0x02;
  1192                           ;OBC1_main.c: 55: const double data3 = 1.0;
  1193                           ;OBC1_main.c: 57: sent_data_set(&data0, 1, 4);
  1194  0735  01FC               	clrf	sent_data_set@data_len
  1195  0736  0AFC               	incf	sent_data_set@data_len,f
  1196  0737  3004               	movlw	4
  1197  0738  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0739  1303               	bcf	3,6	;RP1=0, select bank0
  1199  073A  00EC               	movwf	??_main
  1200  073B  086C               	movf	??_main,w
  1201  073C  00FD               	movwf	sent_data_set@byte_of_data
  1202  073D  3004               	movlw	(low ((main@data0-__stringbase)| (0+32768)))& (0+255)
  1203  073E  120A  118A  25B5  120A  118A  	fcall	_sent_data_set
  1204                           
  1205                           ;OBC1_main.c: 58: sent_data_set(&data4, 1, 4);
  1206  0743  01FC               	clrf	sent_data_set@data_len
  1207  0744  0AFC               	incf	sent_data_set@data_len,f
  1208  0745  3004               	movlw	4
  1209  0746  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0747  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0748  00EC               	movwf	??_main
  1212  0749  086C               	movf	??_main,w
  1213  074A  00FD               	movwf	sent_data_set@byte_of_data
  1214  074B  300A               	movlw	(low ((main@data4-__stringbase)| (0+32768)))& (0+255)
  1215  074C  120A  118A  25B5  120A  118A  	fcall	_sent_data_set
  1216                           
  1217                           ;OBC1_main.c: 60: sent_data_set(&data2, 1, 2);
  1218  0751  01FC               	clrf	sent_data_set@data_len
  1219  0752  0AFC               	incf	sent_data_set@data_len,f
  1220  0753  3002               	movlw	2
  1221  0754  1283               	bcf	3,5	;RP0=0, select bank0
  1222  0755  1303               	bcf	3,6	;RP1=0, select bank0
  1223  0756  00EC               	movwf	??_main
  1224  0757  086C               	movf	??_main,w
  1225  0758  00FD               	movwf	sent_data_set@byte_of_data
  1226  0759  3010               	movlw	(low ((main@data2-__stringbase)| (0+32768)))& (0+255)
  1227  075A  120A  118A  25B5  120A  118A  	fcall	_sent_data_set
  1228                           
  1229                           ;OBC1_main.c: 61: sent_data_set(&data5, 1, 4);
  1230  075F  01FC               	clrf	sent_data_set@data_len
  1231  0760  0AFC               	incf	sent_data_set@data_len,f
  1232  0761  3004               	movlw	4
  1233  0762  1283               	bcf	3,5	;RP0=0, select bank0
  1234  0763  1303               	bcf	3,6	;RP1=0, select bank0
  1235  0764  00EC               	movwf	??_main
  1236  0765  086C               	movf	??_main,w
  1237  0766  00FD               	movwf	sent_data_set@byte_of_data
  1238  0767  300D               	movlw	(low ((main@data5-__stringbase)| (0+32768)))& (0+255)
  1239  0768  120A  118A  25B5  120A  118A  	fcall	_sent_data_set
  1240                           
  1241                           ;OBC1_main.c: 62: sent_data_set(&data1, 1, 1);
  1242  076D  01FC               	clrf	sent_data_set@data_len
  1243  076E  0AFC               	incf	sent_data_set@data_len,f
  1244  076F  01FD               	clrf	sent_data_set@byte_of_data
  1245  0770  0AFD               	incf	sent_data_set@byte_of_data,f
  1246  0771  3012               	movlw	(low ((main@data1-__stringbase)| (0+32768)))& (0+255)
  1247  0772  120A  118A  25B5  120A  118A  	fcall	_sent_data_set
  1248                           
  1249                           ;OBC1_main.c: 63: sent_data_set(&data3, 1, 4);
  1250  0777  01FC               	clrf	sent_data_set@data_len
  1251  0778  0AFC               	incf	sent_data_set@data_len,f
  1252  0779  3004               	movlw	4
  1253  077A  1283               	bcf	3,5	;RP0=0, select bank0
  1254  077B  1303               	bcf	3,6	;RP1=0, select bank0
  1255  077C  00EC               	movwf	??_main
  1256  077D  086C               	movf	??_main,w
  1257  077E  00FD               	movwf	sent_data_set@byte_of_data
  1258  077F  3007               	movlw	(low ((main@data3-__stringbase)| (0+32768)))& (0+255)
  1259  0780  120A  118A  25B5  120A  118A  	fcall	_sent_data_set
  1260                           
  1261                           ;OBC1_main.c: 65: show_packet();
  1262  0785  120A  118A  2266  120A  118A  	fcall	_show_packet
  1263  078A                     l1920:	
  1264                           ;OBC1_main.c: 68: while(1){
  1265                           
  1266                           
  1267                           ;OBC1_main.c: 69: RD7 = 1;
  1268  078A  1283               	bcf	3,5	;RP0=0, select bank0
  1269  078B  1303               	bcf	3,6	;RP1=0, select bank0
  1270  078C  1788               	bsf	8,7	;volatile
  1271                           
  1272                           ;OBC1_main.c: 71: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1273  078D  301A               	movlw	26
  1274  078E  00EE               	movwf	??_main+2
  1275  078F  305E               	movlw	94
  1276  0790  00ED               	movwf	??_main+1
  1277  0791  3086               	movlw	134
  1278  0792  00EC               	movwf	??_main
  1279  0793                     u1387:	
  1280  0793  0BEC               	decfsz	??_main,f
  1281  0794  2F93               	goto	u1387
  1282  0795  0BED               	decfsz	??_main+1,f
  1283  0796  2F93               	goto	u1387
  1284  0797  0BEE               	decfsz	??_main+2,f
  1285  0798  2F93               	goto	u1387
  1286  0799  0000               	nop
  1287                           
  1288                           ;OBC1_main.c: 73: RD7 = 0;
  1289  079A  1283               	bcf	3,5	;RP0=0, select bank0
  1290  079B  1303               	bcf	3,6	;RP1=0, select bank0
  1291  079C  1388               	bcf	8,7	;volatile
  1292                           
  1293                           ;OBC1_main.c: 74: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1294  079D  301A               	movlw	26
  1295  079E  00EE               	movwf	??_main+2
  1296  079F  305E               	movlw	94
  1297  07A0  00ED               	movwf	??_main+1
  1298  07A1  3086               	movlw	134
  1299  07A2  00EC               	movwf	??_main
  1300  07A3                     u1397:	
  1301  07A3  0BEC               	decfsz	??_main,f
  1302  07A4  2FA3               	goto	u1397
  1303  07A5  0BED               	decfsz	??_main+1,f
  1304  07A6  2FA3               	goto	u1397
  1305  07A7  0BEE               	decfsz	??_main+2,f
  1306  07A8  2FA3               	goto	u1397
  1307  07A9  0000               	nop
  1308  07AA  2F8A               	goto	l1920
  1309  07AB                     l44:	
  1310                           ;OBC1_main.c: 75: }
  1311                           ;OBC1_main.c: 77: while(1)
  1312                           
  1313                           
  1314                           ;OBC1_main.c: 78: {
  1315                           ;OBC1_main.c: 79: PORTDbits.RD7 = 1;
  1316  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  1317  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  1318  07AD  1788               	bsf	8,7	;volatile
  1319                           
  1320                           ;OBC1_main.c: 80: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1321  07AE  301A               	movlw	26
  1322  07AF  00EE               	movwf	??_main+2
  1323  07B0  305E               	movlw	94
  1324  07B1  00ED               	movwf	??_main+1
  1325  07B2  3086               	movlw	134
  1326  07B3  00EC               	movwf	??_main
  1327  07B4                     u1407:	
  1328  07B4  0BEC               	decfsz	??_main,f
  1329  07B5  2FB4               	goto	u1407
  1330  07B6  0BED               	decfsz	??_main+1,f
  1331  07B7  2FB4               	goto	u1407
  1332  07B8  0BEE               	decfsz	??_main+2,f
  1333  07B9  2FB4               	goto	u1407
  1334  07BA  0000               	nop
  1335                           
  1336                           ;OBC1_main.c: 81: get_cw_data();
  1337  07BB  120A  118A  2695  120A  118A  	fcall	_get_cw_data
  1338                           
  1339                           ;OBC1_main.c: 82: cw_data_set(&cw);
  1340  07C0  3041               	movlw	(low (_cw| 0))& (0+255)
  1341  07C1  120A  118A  2615  120A  118A  	fcall	_cw_data_set
  1342                           
  1343                           ;OBC1_main.c: 83: send_data_master(COM, 0x01, DATA_END);
  1344  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1345  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1346  07C8  01CF               	clrf	send_data_master@data_type
  1347  07C9  0ACF               	incf	send_data_master@data_type,f
  1348  07CA  3010               	movlw	16
  1349  07CB  00EC               	movwf	??_main
  1350  07CC  086C               	movf	??_main,w
  1351  07CD  00D0               	movwf	send_data_master@data_end_command
  1352  07CE  3003               	movlw	3
  1353  07CF  120A  118A  20E1  120A  118A  	fcall	_send_data_master
  1354                           
  1355                           ;OBC1_main.c: 84: PORTDbits.RD7 = 0;
  1356  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  1357  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  1358  07D6  1388               	bcf	8,7	;volatile
  1359                           
  1360                           ;OBC1_main.c: 85: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1361  07D7  301A               	movlw	26
  1362  07D8  00EE               	movwf	??_main+2
  1363  07D9  305E               	movlw	94
  1364  07DA  00ED               	movwf	??_main+1
  1365  07DB  3086               	movlw	134
  1366  07DC  00EC               	movwf	??_main
  1367  07DD                     u1417:	
  1368  07DD  0BEC               	decfsz	??_main,f
  1369  07DE  2FDD               	goto	u1417
  1370  07DF  0BED               	decfsz	??_main+1,f
  1371  07E0  2FDD               	goto	u1417
  1372  07E1  0BEE               	decfsz	??_main+2,f
  1373  07E2  2FDD               	goto	u1417
  1374  07E3  0000               	nop
  1375                           
  1376                           ;OBC1_main.c: 88: if(PORTDbits.RD0==0)
  1377  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  1378  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  1379  07E6  1808               	btfsc	8,0	;volatile
  1380  07E7  2FAB               	goto	l44
  1381                           
  1382                           ;OBC1_main.c: 90: _delay((unsigned long)((10000)*(20000000/4000.0)));
  1383  07E8  30FE               	movlw	254
  1384  07E9  00EE               	movwf	??_main+2
  1385  07EA  30A8               	movlw	168
  1386  07EB  00ED               	movwf	??_main+1
  1387  07EC  3061               	movlw	97
  1388  07ED  00EC               	movwf	??_main
  1389  07EE                     u1427:	
  1390  07EE  0BEC               	decfsz	??_main,f
  1391  07EF  2FEE               	goto	u1427
  1392  07F0  0BED               	decfsz	??_main+1,f
  1393  07F1  2FEE               	goto	u1427
  1394  07F2  0BEE               	decfsz	??_main+2,f
  1395  07F3  2FEE               	goto	u1427
  1396  07F4  2FAB               	goto	l44
  1397  07F5                     __end_of_main:	
  1398                           ;OBC1_main.c: 91: }
  1399                           ;OBC1_main.c: 94: return 0;
  1400                           ;	Return value of _main is never used
  1401                           
  1402                           
  1403                           	psect	text1
  1404  00D5                     __ptext1:	
  1405 ;; *************** function _uart_init *****************
  1406 ;; Defined at:
  1407 ;;		line 33 in file "uart_serial.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;		None
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;		None               void
  1414 ;; Registers used:
  1415 ;;		wreg
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1421 ;;      Params:         0       0       0       0       0
  1422 ;;      Locals:         0       0       0       0       0
  1423 ;;      Temps:          0       0       0       0       0
  1424 ;;      Totals:         0       0       0       0       0
  1425 ;;Total ram usage:        0 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		_main
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           
  1435                           ;psect for function _uart_init
  1436  00D5                     _uart_init:	
  1437                           
  1438                           ;uart_serial.c: 35: TRISCbits.TRISC7 = 1;
  1439                           
  1440                           ;incstack = 0
  1441                           ; Regs used in _uart_init: [wreg]
  1442  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  1443  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  1444  00D7  1787               	bsf	7,7	;volatile
  1445                           
  1446                           ;uart_serial.c: 36: SPBRG = ((unsigned char)(((20000000 / 16) / (9600)) - 1));
  1447  00D8  3081               	movlw	129
  1448  00D9  0099               	movwf	25	;volatile
  1449                           
  1450                           ;uart_serial.c: 37: TXSTA = (0x00 | 0x04 | 0x20);
  1451  00DA  3024               	movlw	36
  1452  00DB  0098               	movwf	24	;volatile
  1453                           
  1454                           ;uart_serial.c: 38: RCSTA = (0x00 | 0x90);
  1455  00DC  3090               	movlw	144
  1456  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1457  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1458  00DF  0098               	movwf	24	;volatile
  1459  00E0  0008               	return
  1460  00E1                     __end_of_uart_init:	
  1461                           
  1462                           	psect	text2
  1463  00C0                     __ptext2:	
  1464 ;; *************** function _sysprot_init *****************
  1465 ;; Defined at:
  1466 ;;		line 90 in file "system_protocol.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;		None               void
  1473 ;; Registers used:
  1474 ;;		None
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1480 ;;      Params:         0       0       0       0       0
  1481 ;;      Locals:         0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0
  1483 ;;      Totals:         0       0       0       0       0
  1484 ;;Total ram usage:        0 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_main
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           
  1494                           ;psect for function _sysprot_init
  1495  00C0                     _sysprot_init:	
  1496                           
  1497                           ;system_protocol.c: 92: TRISDbits.TRISD0 = 1;
  1498                           
  1499                           ;incstack = 0
  1500                           ; Regs used in _sysprot_init: []
  1501  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  1502  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  1503  00C2  1408               	bsf	8,0	;volatile
  1504                           
  1505                           ;system_protocol.c: 93: TRISDbits.TRISD1 = 1;
  1506  00C3  1488               	bsf	8,1	;volatile
  1507  00C4  0008               	return
  1508  00C5                     __end_of_sysprot_init:	
  1509                           
  1510                           	psect	text3
  1511  0266                     __ptext3:	
  1512 ;; *************** function _show_packet *****************
  1513 ;; Defined at:
  1514 ;;		line 519 in file "system_protocol.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;		None
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  buf             4   25[BANK0 ] unsigned char [4]
  1519 ;;  i               1   29[BANK0 ] unsigned char 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;		None               void
  1522 ;; Registers used:
  1523 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1529 ;;      Params:         0       0       0       0       0
  1530 ;;      Locals:         0       5       0       0       0
  1531 ;;      Temps:          0       2       0       0       0
  1532 ;;      Totals:         0       7       0       0       0
  1533 ;;Total ram usage:        7 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    4
  1536 ;; This function calls:
  1537 ;;		_put_string
  1538 ;;		_uint8_to_string
  1539 ;; This function is called by:
  1540 ;;		_main
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           
  1545                           ;psect for function _show_packet
  1546  0266                     _show_packet:	
  1547                           
  1548                           ;system_protocol.c: 521: uint8_t buf[4];
  1549                           ;system_protocol.c: 522: uint8_t i;
  1550                           ;system_protocol.c: 524: for(i = 0; i < 30; i++)
  1551                           
  1552                           ;incstack = 0
  1553                           ; Regs used in _show_packet: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1554  0266  1283               	bcf	3,5	;RP0=0, select bank0
  1555  0267  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0268  01EB               	clrf	show_packet@i
  1557  0269                     L1:	
  1558  0269  301E               	movlw	30
  1559  026A  026B               	subwf	show_packet@i,w
  1560  026B  1803               	btfsc	3,0
  1561  026C  0008               	return
  1562                           
  1563                           ;system_protocol.c: 525: {
  1564                           ;system_protocol.c: 526: uint8_to_string(packet.payload[i], buf, 4);
  1565  026D  3067               	movlw	(low (show_packet@buf| 0))& (0+255)
  1566  026E  00E5               	movwf	??_show_packet
  1567  026F  0865               	movf	??_show_packet,w
  1568  0270  00DF               	movwf	uint8_to_string@p_str_buf
  1569  0271  3004               	movlw	4
  1570  0272  00E6               	movwf	??_show_packet+1
  1571  0273  0866               	movf	??_show_packet+1,w
  1572  0274  00E0               	movwf	uint8_to_string@buf_size
  1573  0275  086B               	movf	show_packet@i,w
  1574  0276  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  1575  0277  0084               	movwf	4
  1576  0278  1383               	bcf	3,7	;select IRP bank0
  1577  0279  0800               	movf	0,w
  1578  027A  120A  118A  23B8  120A  118A  	fcall	_uint8_to_string
  1579                           
  1580                           ;system_protocol.c: 527: put_string(buf);
  1581  027F  3067               	movlw	(low (show_packet@buf| 0))& (0+255)
  1582  0280  00F1               	movwf	put_string@str
  1583  0281  3000               	movlw	0
  1584  0282  00F2               	movwf	put_string@str+1
  1585  0283  120A  118A  2155  120A  118A  	fcall	_put_string
  1586                           
  1587                           ;system_protocol.c: 528: put_string("\r\n");
  1588  0288  3021               	movlw	(low (((STR_1+14)-__stringbase)| (0+32768)))& (0+255)
  1589  0289  00F1               	movwf	put_string@str
  1590  028A  3080               	movlw	128
  1591  028B  00F2               	movwf	put_string@str+1
  1592  028C  120A  118A  2155  120A  118A  	fcall	_put_string
  1593  0291  3001               	movlw	1
  1594  0292  1283               	bcf	3,5	;RP0=0, select bank0
  1595  0293  1303               	bcf	3,6	;RP1=0, select bank0
  1596  0294  00E5               	movwf	??_show_packet
  1597  0295  0865               	movf	??_show_packet,w
  1598  0296  07EB               	addwf	show_packet@i,f
  1599  0297  2A69               	goto	L1
  1600  0298                     __end_of_show_packet:	
  1601                           
  1602                           	psect	text4
  1603  03B8                     __ptext4:	
  1604 ;; *************** function _uint8_to_string *****************
  1605 ;; Defined at:
  1606 ;;		line 35 in file "uint8_to_string.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  num             1    wreg     unsigned char 
  1609 ;;  p_str_buf       1   17[BANK0 ] PTR unsigned char 
  1610 ;;		 -> show_packet@buf(4), 
  1611 ;;  buf_size        1   18[BANK0 ] unsigned char 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  num             1   22[BANK0 ] unsigned char 
  1614 ;;  flag            1   21[BANK0 ] unsigned char 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;		None               void
  1617 ;; Registers used:
  1618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1624 ;;      Params:         0       2       0       0       0
  1625 ;;      Locals:         0       2       0       0       0
  1626 ;;      Temps:          0       2       0       0       0
  1627 ;;      Totals:         0       6       0       0       0
  1628 ;;Total ram usage:        6 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; Hardware stack levels required when called:    3
  1631 ;; This function calls:
  1632 ;;		_process_1
  1633 ;;		_process_10
  1634 ;;		_process_100
  1635 ;; This function is called by:
  1636 ;;		_show_packet
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           
  1641                           ;psect for function _uint8_to_string
  1642  03B8                     _uint8_to_string:	
  1643                           
  1644                           ;incstack = 0
  1645                           ; Regs used in _uint8_to_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1646                           ;uint8_to_string@num stored from wreg
  1647  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  1648  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  1649  03BA  00E4               	movwf	uint8_to_string@num
  1650                           
  1651                           ;uint8_to_string.c: 37: uint8_t flag = 0;
  1652  03BB  01E3               	clrf	uint8_to_string@flag
  1653                           
  1654                           ;uint8_to_string.c: 40: if(buf_size < 4)
  1655  03BC  3004               	movlw	4
  1656  03BD  0260               	subwf	uint8_to_string@buf_size,w
  1657  03BE  1C03               	btfss	3,0
  1658  03BF  0008               	return
  1659                           
  1660                           ;uint8_to_string.c: 43: }
  1661                           ;uint8_to_string.c: 46: if(100 <= num && num <= 255)
  1662                           
  1663                           ;uint8_to_string.c: 41: {
  1664                           ;uint8_to_string.c: 42: return;
  1665  03C0  3064               	movlw	100
  1666  03C1  0264               	subwf	uint8_to_string@num,w
  1667  03C2  1C03               	skipc
  1668  03C3  2BD1               	goto	l1740
  1669                           
  1670                           ;uint8_to_string.c: 47: {
  1671                           ;uint8_to_string.c: 48: process_100(num, p_str_buf, &flag);
  1672  03C4  085F               	movf	uint8_to_string@p_str_buf,w
  1673  03C5  00E1               	movwf	??_uint8_to_string
  1674  03C6  0861               	movf	??_uint8_to_string,w
  1675  03C7  00D8               	movwf	process_100@p_str_buf
  1676  03C8  3063               	movlw	(low (uint8_to_string@flag| 0))& (0+255)
  1677  03C9  00E2               	movwf	??_uint8_to_string+1
  1678  03CA  0862               	movf	??_uint8_to_string+1,w
  1679  03CB  00D9               	movwf	process_100@p_flag
  1680  03CC  0864               	movf	uint8_to_string@num,w
  1681  03CD  120A  118A  2376   	fcall	_process_100
  1682                           
  1683                           ;uint8_to_string.c: 49: }
  1684  03D0  0008               	return
  1685  03D1                     l1740:	
  1686                           
  1687                           ;uint8_to_string.c: 50: else if(10 <= num && num <= 99)
  1688  03D1  300A               	movlw	10
  1689  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  1690  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  1691  03D4  0264               	subwf	uint8_to_string@num,w
  1692  03D5  1C03               	skipc
  1693  03D6  2BE8               	goto	l1746
  1694  03D7  3064               	movlw	100
  1695  03D8  0264               	subwf	uint8_to_string@num,w
  1696  03D9  1803               	skipnc
  1697  03DA  2BE8               	goto	l1746
  1698                           
  1699                           ;uint8_to_string.c: 51: {
  1700                           ;uint8_to_string.c: 52: process_10(num, p_str_buf, &flag);
  1701  03DB  085F               	movf	uint8_to_string@p_str_buf,w
  1702  03DC  00E1               	movwf	??_uint8_to_string
  1703  03DD  0861               	movf	??_uint8_to_string,w
  1704  03DE  00CE               	movwf	process_10@p_str_buf
  1705  03DF  3063               	movlw	(low (uint8_to_string@flag| 0))& (0+255)
  1706  03E0  00E2               	movwf	??_uint8_to_string+1
  1707  03E1  0862               	movf	??_uint8_to_string+1,w
  1708  03E2  00CF               	movwf	process_10@p_flag
  1709  03E3  0864               	movf	uint8_to_string@num,w
  1710  03E4  120A  118A  249F   	fcall	_process_10
  1711                           
  1712                           ;uint8_to_string.c: 53: }
  1713  03E7  0008               	return
  1714  03E8                     l1746:	
  1715                           ;uint8_to_string.c: 54: else if(0 <= num && num <= 9)
  1716                           
  1717  03E8  300A               	movlw	10
  1718  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  1719  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  1720  03EB  0264               	subwf	uint8_to_string@num,w
  1721  03EC  1803               	skipnc
  1722  03ED  0008               	return
  1723                           
  1724                           ;uint8_to_string.c: 55: {
  1725                           ;uint8_to_string.c: 56: process_1(num, p_str_buf, &flag);
  1726  03EE  085F               	movf	uint8_to_string@p_str_buf,w
  1727  03EF  00E1               	movwf	??_uint8_to_string
  1728  03F0  0861               	movf	??_uint8_to_string,w
  1729  03F1  00F7               	movwf	process_1@p_str_buf
  1730  03F2  3063               	movlw	(low (uint8_to_string@flag| 0))& (0+255)
  1731  03F3  00E2               	movwf	??_uint8_to_string+1
  1732  03F4  0862               	movf	??_uint8_to_string+1,w
  1733  03F5  00F8               	movwf	process_1@p_flag
  1734  03F6  0864               	movf	uint8_to_string@num,w
  1735  03F7  120A  118A  21A7   	fcall	_process_1
  1736  03FA  0008               	return
  1737  03FB                     __end_of_uint8_to_string:	
  1738                           
  1739                           	psect	text5
  1740  0376                     __ptext5:	
  1741 ;; *************** function _process_100 *****************
  1742 ;; Defined at:
  1743 ;;		line 64 in file "uint8_to_string.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  num             1    wreg     unsigned char 
  1746 ;;  p_str_buf       1   10[BANK0 ] PTR unsigned char 
  1747 ;;		 -> show_packet@buf(4), 
  1748 ;;  p_flag          1   11[BANK0 ] PTR unsigned char 
  1749 ;;		 -> uint8_to_string@flag(1), 
  1750 ;; Auto vars:     Size  Location     Type
  1751 ;;  num             1   16[BANK0 ] unsigned char 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;		None               void
  1754 ;; Registers used:
  1755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1761 ;;      Params:         0       2       0       0       0
  1762 ;;      Locals:         0       2       0       0       0
  1763 ;;      Temps:          0       3       0       0       0
  1764 ;;      Totals:         0       7       0       0       0
  1765 ;;Total ram usage:        7 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    2
  1768 ;; This function calls:
  1769 ;;		___awmod
  1770 ;;		_process_10
  1771 ;; This function is called by:
  1772 ;;		_uint8_to_string
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           
  1777                           ;psect for function _process_100
  1778  0376                     _process_100:	
  1779                           
  1780                           ;incstack = 0
  1781                           ; Regs used in _process_100: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1782                           ;process_100@num stored from wreg
  1783  0376  1283               	bcf	3,5	;RP0=0, select bank0
  1784  0377  1303               	bcf	3,6	;RP1=0, select bank0
  1785  0378  00DE               	movwf	process_100@num
  1786  0379  30C8               	movlw	200
  1787  037A  025E               	subwf	process_100@num,w
  1788  037B  1803               	skipnc
  1789  037C  2B7F               	goto	l1606
  1790                           
  1791                           ;uint8_to_string.c: 68: {
  1792                           ;uint8_to_string.c: 69: p_str_buf[*p_flag] = 0x30 + 1;
  1793  037D  3031               	movlw	49
  1794  037E  2B84               	goto	L2
  1795  037F                     l1606:	
  1796                           ;uint8_to_string.c: 71: }
  1797                           
  1798                           ;uint8_to_string.c: 70: (*p_flag)++;
  1799                           
  1800                           
  1801                           ;uint8_to_string.c: 72: else if(200 <= num && num <= 255)
  1802  037F  30C8               	movlw	200
  1803  0380  025E               	subwf	process_100@num,w
  1804  0381  1C03               	skipc
  1805  0382  2B95               	goto	l1610
  1806                           
  1807                           ;uint8_to_string.c: 73: {
  1808                           ;uint8_to_string.c: 74: p_str_buf[*p_flag] = 0x30 + 2;
  1809  0383  3032               	movlw	50
  1810  0384                     L2:	
  1811  0384  00DA               	movwf	??_process_100
  1812  0385  0859               	movf	process_100@p_flag,w
  1813  0386  0084               	movwf	4
  1814  0387  1383               	bcf	3,7	;select IRP bank0
  1815  0388  0800               	movf	0,w
  1816  0389  0758               	addwf	process_100@p_str_buf,w
  1817  038A  00DB               	movwf	??_process_100+1
  1818  038B  085B               	movf	??_process_100+1,w
  1819  038C  0084               	movwf	4
  1820  038D  085A               	movf	??_process_100,w
  1821  038E  0080               	movwf	0
  1822                           
  1823                           ;uint8_to_string.c: 75: (*p_flag)++;
  1824  038F  3001               	movlw	1
  1825  0390  00DA               	movwf	??_process_100
  1826  0391  0859               	movf	process_100@p_flag,w
  1827  0392  0084               	movwf	4
  1828  0393  085A               	movf	??_process_100,w
  1829  0394  0780               	addwf	0,f
  1830  0395                     l1610:	
  1831                           
  1832                           ;uint8_to_string.c: 76: }
  1833                           ;uint8_to_string.c: 79: process_10((num % 100), p_str_buf, p_flag);
  1834  0395  3064               	movlw	100
  1835  0396  00F0               	movwf	___awmod@divisor
  1836  0397  3000               	movlw	0
  1837  0398  00F1               	movwf	___awmod@divisor+1
  1838  0399  085E               	movf	process_100@num,w
  1839  039A  00DA               	movwf	??_process_100
  1840  039B  01DB               	clrf	??_process_100+1
  1841  039C  085A               	movf	??_process_100,w
  1842  039D  00F2               	movwf	___awmod@dividend
  1843  039E  085B               	movf	??_process_100+1,w
  1844  039F  00F3               	movwf	___awmod@dividend+1
  1845  03A0  120A  118A  23FB  120A  118A  	fcall	___awmod
  1846  03A5  0870               	movf	?___awmod,w
  1847  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  1848  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  1849  03A8  00DC               	movwf	??_process_100+2
  1850  03A9  085C               	movf	??_process_100+2,w
  1851  03AA  00DD               	movwf	_process_100$1205
  1852                           
  1853                           ;uint8_to_string.c: 76: }
  1854                           ;uint8_to_string.c: 79: process_10((num % 100), p_str_buf, p_flag);
  1855  03AB  0858               	movf	process_100@p_str_buf,w
  1856  03AC  00DA               	movwf	??_process_100
  1857  03AD  085A               	movf	??_process_100,w
  1858  03AE  00CE               	movwf	process_10@p_str_buf
  1859  03AF  0859               	movf	process_100@p_flag,w
  1860  03B0  00DB               	movwf	??_process_100+1
  1861  03B1  085B               	movf	??_process_100+1,w
  1862  03B2  00CF               	movwf	process_10@p_flag
  1863  03B3  085D               	movf	_process_100$1205,w
  1864  03B4  120A  118A  249F   	fcall	_process_10
  1865  03B7  0008               	return
  1866  03B8                     __end_of_process_100:	
  1867                           
  1868                           	psect	text6
  1869  049F                     __ptext6:	
  1870 ;; *************** function _process_10 *****************
  1871 ;; Defined at:
  1872 ;;		line 86 in file "uint8_to_string.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  num             1    wreg     unsigned char 
  1875 ;;  p_str_buf       1    0[BANK0 ] PTR unsigned char 
  1876 ;;		 -> show_packet@buf(4), 
  1877 ;;  p_flag          1    1[BANK0 ] PTR unsigned char 
  1878 ;;		 -> uint8_to_string@flag(1), 
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;  num             1    9[BANK0 ] unsigned char 
  1881 ;;  i               1    8[BANK0 ] unsigned char 
  1882 ;;  val             1    7[BANK0 ] unsigned char 
  1883 ;;  divide          1    6[BANK0 ] unsigned char 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;		None               void
  1886 ;; Registers used:
  1887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1893 ;;      Params:         0       2       0       0       0
  1894 ;;      Locals:         0       4       0       0       0
  1895 ;;      Temps:          0       4       0       0       0
  1896 ;;      Totals:         0      10       0       0       0
  1897 ;;Total ram usage:       10 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:    1
  1900 ;; This function calls:
  1901 ;;		___awdiv
  1902 ;;		___awmod
  1903 ;;		_process_1
  1904 ;; This function is called by:
  1905 ;;		_uint8_to_string
  1906 ;;		_process_100
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           
  1911                           ;psect for function _process_10
  1912  049F                     _process_10:	
  1913                           
  1914                           ;incstack = 0
  1915                           ; Regs used in _process_10: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1916                           ;process_10@num stored from wreg
  1917  049F  1283               	bcf	3,5	;RP0=0, select bank0
  1918  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  1919  04A1  00D7               	movwf	process_10@num
  1920                           
  1921                           ;uint8_to_string.c: 88: uint8_t divide = num / 10;
  1922  04A2  300A               	movlw	10
  1923  04A3  00F0               	movwf	___awdiv@divisor
  1924  04A4  3000               	movlw	0
  1925  04A5  00F1               	movwf	___awdiv@divisor+1
  1926  04A6  0857               	movf	process_10@num,w
  1927  04A7  00D0               	movwf	??_process_10
  1928  04A8  01D1               	clrf	??_process_10+1
  1929  04A9  0850               	movf	??_process_10,w
  1930  04AA  00F2               	movwf	___awdiv@dividend
  1931  04AB  0851               	movf	??_process_10+1,w
  1932  04AC  00F3               	movwf	___awdiv@dividend+1
  1933  04AD  120A  118A  2446  120A  118A  	fcall	___awdiv
  1934  04B2  0870               	movf	?___awdiv,w
  1935  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  1936  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  1937  04B5  00D2               	movwf	??_process_10+2
  1938  04B6  0852               	movf	??_process_10+2,w
  1939  04B7  00D4               	movwf	process_10@divide
  1940                           
  1941                           ;uint8_to_string.c: 89: uint8_t val = 0x30;
  1942  04B8  3030               	movlw	48
  1943  04B9  00D0               	movwf	??_process_10
  1944  04BA  0850               	movf	??_process_10,w
  1945  04BB  00D5               	movwf	process_10@val
  1946                           
  1947                           ;uint8_to_string.c: 90: uint8_t i;
  1948                           ;uint8_to_string.c: 93: for(i = 0; i < divide; i++)
  1949  04BC  01D6               	clrf	process_10@i
  1950  04BD                     l1540:	
  1951  04BD  0854               	movf	process_10@divide,w
  1952  04BE  0256               	subwf	process_10@i,w
  1953  04BF  1803               	btfsc	3,0
  1954  04C0  2CCA               	goto	l1542
  1955                           
  1956                           ;uint8_to_string.c: 94: {
  1957                           ;uint8_to_string.c: 95: val++;
  1958  04C1  3001               	movlw	1
  1959  04C2  00D0               	movwf	??_process_10
  1960  04C3  0850               	movf	??_process_10,w
  1961  04C4  07D5               	addwf	process_10@val,f
  1962  04C5  3001               	movlw	1
  1963  04C6  00D0               	movwf	??_process_10
  1964  04C7  0850               	movf	??_process_10,w
  1965  04C8  07D6               	addwf	process_10@i,f
  1966  04C9  2CBD               	goto	l1540
  1967  04CA                     l1542:	
  1968                           
  1969                           ;uint8_to_string.c: 96: }
  1970                           ;uint8_to_string.c: 98: p_str_buf[*p_flag] = val;
  1971  04CA  0855               	movf	process_10@val,w
  1972  04CB  00D0               	movwf	??_process_10
  1973  04CC  084F               	movf	process_10@p_flag,w
  1974  04CD  0084               	movwf	4
  1975  04CE  1383               	bcf	3,7	;select IRP bank0
  1976  04CF  0800               	movf	0,w
  1977  04D0  074E               	addwf	process_10@p_str_buf,w
  1978  04D1  00D1               	movwf	??_process_10+1
  1979  04D2  0851               	movf	??_process_10+1,w
  1980  04D3  0084               	movwf	4
  1981  04D4  0850               	movf	??_process_10,w
  1982  04D5  0080               	movwf	0
  1983                           
  1984                           ;uint8_to_string.c: 99: (*p_flag)++;
  1985  04D6  3001               	movlw	1
  1986  04D7  00D0               	movwf	??_process_10
  1987  04D8  084F               	movf	process_10@p_flag,w
  1988  04D9  0084               	movwf	4
  1989  04DA  0850               	movf	??_process_10,w
  1990  04DB  0780               	addwf	0,f
  1991                           
  1992                           ;uint8_to_string.c: 101: process_1((num % 10), p_str_buf, p_flag);
  1993  04DC  084E               	movf	process_10@p_str_buf,w
  1994  04DD  00D0               	movwf	??_process_10
  1995  04DE  0850               	movf	??_process_10,w
  1996  04DF  00F7               	movwf	process_1@p_str_buf
  1997  04E0  084F               	movf	process_10@p_flag,w
  1998  04E1  00D1               	movwf	??_process_10+1
  1999  04E2  0851               	movf	??_process_10+1,w
  2000  04E3  00F8               	movwf	process_1@p_flag
  2001  04E4  300A               	movlw	10
  2002  04E5  00F0               	movwf	___awmod@divisor
  2003  04E6  3000               	movlw	0
  2004  04E7  00F1               	movwf	___awmod@divisor+1
  2005  04E8  0857               	movf	process_10@num,w
  2006  04E9  00D2               	movwf	??_process_10+2
  2007  04EA  01D3               	clrf	??_process_10+3
  2008  04EB  0852               	movf	??_process_10+2,w
  2009  04EC  00F2               	movwf	___awmod@dividend
  2010  04ED  0853               	movf	??_process_10+3,w
  2011  04EE  00F3               	movwf	___awmod@dividend+1
  2012  04EF  120A  118A  23FB  120A  118A  	fcall	___awmod
  2013  04F4  0870               	movf	?___awmod,w
  2014  04F5  120A  118A  21A7   	fcall	_process_1
  2015  04F8  0008               	return
  2016  04F9                     __end_of_process_10:	
  2017                           
  2018                           	psect	text7
  2019  01A7                     __ptext7:	
  2020 ;; *************** function _process_1 *****************
  2021 ;; Defined at:
  2022 ;;		line 108 in file "uint8_to_string.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  num             1    wreg     unsigned char 
  2025 ;;  p_str_buf       1    7[COMMON] PTR unsigned char 
  2026 ;;		 -> show_packet@buf(4), 
  2027 ;;  p_flag          1    8[COMMON] PTR unsigned char 
  2028 ;;		 -> uint8_to_string@flag(1), 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  num             1   11[COMMON] unsigned char 
  2031 ;;  val             1   13[COMMON] unsigned char 
  2032 ;;  i               1   12[COMMON] unsigned char 
  2033 ;; Return value:  Size  Location     Type
  2034 ;;		None               void
  2035 ;; Registers used:
  2036 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2042 ;;      Params:         2       0       0       0       0
  2043 ;;      Locals:         3       0       0       0       0
  2044 ;;      Temps:          2       0       0       0       0
  2045 ;;      Totals:         7       0       0       0       0
  2046 ;;Total ram usage:        7 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_uint8_to_string
  2052 ;;		_process_10
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           
  2057                           ;psect for function _process_1
  2058  01A7                     _process_1:	
  2059                           
  2060                           ;incstack = 0
  2061                           ; Regs used in _process_1: [wreg-fsr0h+status,2+status,0]
  2062                           ;process_1@num stored from wreg
  2063  01A7  00FB               	movwf	process_1@num
  2064                           
  2065                           ;uint8_to_string.c: 110: uint8_t i;
  2066                           ;uint8_to_string.c: 111: uint8_t val = 0x30;
  2067  01A8  3030               	movlw	48
  2068  01A9  00F9               	movwf	??_process_1
  2069  01AA  0879               	movf	??_process_1,w
  2070  01AB  00FD               	movwf	process_1@val
  2071                           
  2072                           ;uint8_to_string.c: 113: for(i = 0; i < num; i++)
  2073  01AC  01FC               	clrf	process_1@i
  2074  01AD                     l1418:	
  2075  01AD  087B               	movf	process_1@num,w
  2076  01AE  027C               	subwf	process_1@i,w
  2077  01AF  1803               	btfsc	3,0
  2078  01B0  29BA               	goto	l1420
  2079                           
  2080                           ;uint8_to_string.c: 114: {
  2081                           ;uint8_to_string.c: 115: val++;
  2082  01B1  3001               	movlw	1
  2083  01B2  00F9               	movwf	??_process_1
  2084  01B3  0879               	movf	??_process_1,w
  2085  01B4  07FD               	addwf	process_1@val,f
  2086  01B5  3001               	movlw	1
  2087  01B6  00F9               	movwf	??_process_1
  2088  01B7  0879               	movf	??_process_1,w
  2089  01B8  07FC               	addwf	process_1@i,f
  2090  01B9  29AD               	goto	l1418
  2091  01BA                     l1420:	
  2092                           
  2093                           ;uint8_to_string.c: 116: }
  2094                           ;uint8_to_string.c: 118: p_str_buf[*p_flag] = val;
  2095  01BA  087D               	movf	process_1@val,w
  2096  01BB  00F9               	movwf	??_process_1
  2097  01BC  0878               	movf	process_1@p_flag,w
  2098  01BD  0084               	movwf	4
  2099  01BE  1383               	bcf	3,7	;select IRP bank0
  2100  01BF  0800               	movf	0,w
  2101  01C0  0777               	addwf	process_1@p_str_buf,w
  2102  01C1  00FA               	movwf	??_process_1+1
  2103  01C2  087A               	movf	??_process_1+1,w
  2104  01C3  0084               	movwf	4
  2105  01C4  0879               	movf	??_process_1,w
  2106  01C5  0080               	movwf	0
  2107                           
  2108                           ;uint8_to_string.c: 119: (*p_flag)++;
  2109  01C6  3001               	movlw	1
  2110  01C7  00F9               	movwf	??_process_1
  2111  01C8  0878               	movf	process_1@p_flag,w
  2112  01C9  0084               	movwf	4
  2113  01CA  0879               	movf	??_process_1,w
  2114  01CB  0780               	addwf	0,f
  2115                           
  2116                           ;uint8_to_string.c: 121: p_str_buf[*p_flag] = '\0';
  2117  01CC  0878               	movf	process_1@p_flag,w
  2118  01CD  0084               	movwf	4
  2119  01CE  0800               	movf	0,w
  2120  01CF  0777               	addwf	process_1@p_str_buf,w
  2121  01D0  00F9               	movwf	??_process_1
  2122  01D1  0879               	movf	??_process_1,w
  2123  01D2  0084               	movwf	4
  2124  01D3  0180               	clrf	0
  2125  01D4  0008               	return
  2126  01D5                     __end_of_process_1:	
  2127                           
  2128                           	psect	text8
  2129  03FB                     __ptext8:	
  2130 ;; *************** function ___awmod *****************
  2131 ;; Defined at:
  2132 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/awmod.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  divisor         2    0[COMMON] int 
  2135 ;;  dividend        2    2[COMMON] int 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  sign            1    6[COMMON] unsigned char 
  2138 ;;  counter         1    5[COMMON] unsigned char 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  2    0[COMMON] int 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2, status,0
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2148 ;;      Params:         4       0       0       0       0
  2149 ;;      Locals:         2       0       0       0       0
  2150 ;;      Temps:          1       0       0       0       0
  2151 ;;      Totals:         7       0       0       0       0
  2152 ;;Total ram usage:        7 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		_process_100
  2158 ;;		_process_10
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           
  2163                           ;psect for function ___awmod
  2164  03FB                     ___awmod:	
  2165                           
  2166                           ;incstack = 0
  2167                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2168  03FB  01F6               	clrf	___awmod@sign
  2169  03FC  1FF3               	btfss	___awmod@dividend+1,7
  2170  03FD  2C05               	goto	l1474
  2171  03FE  09F2               	comf	___awmod@dividend,f
  2172  03FF  09F3               	comf	___awmod@dividend+1,f
  2173  0400  0AF2               	incf	___awmod@dividend,f
  2174  0401  1903               	skipnz
  2175  0402  0AF3               	incf	___awmod@dividend+1,f
  2176  0403  01F6               	clrf	___awmod@sign
  2177  0404  0AF6               	incf	___awmod@sign,f
  2178  0405                     l1474:	
  2179  0405  1FF1               	btfss	___awmod@divisor+1,7
  2180  0406  2C0C               	goto	l1478
  2181  0407  09F0               	comf	___awmod@divisor,f
  2182  0408  09F1               	comf	___awmod@divisor+1,f
  2183  0409  0AF0               	incf	___awmod@divisor,f
  2184  040A  1903               	skipnz
  2185  040B  0AF1               	incf	___awmod@divisor+1,f
  2186  040C                     l1478:	
  2187  040C  0870               	movf	___awmod@divisor,w
  2188  040D  0471               	iorwf	___awmod@divisor+1,w
  2189  040E  1903               	btfsc	3,2
  2190  040F  2C39               	goto	l1496
  2191  0410  01F5               	clrf	___awmod@counter
  2192  0411  0AF5               	incf	___awmod@counter,f
  2193  0412                     l1486:	
  2194  0412  1BF1               	btfsc	___awmod@divisor+1,7
  2195  0413  2C20               	goto	l1488
  2196  0414  3001               	movlw	1
  2197  0415                     u845:	
  2198  0415  1003               	clrc
  2199  0416  0DF0               	rlf	___awmod@divisor,f
  2200  0417  0DF1               	rlf	___awmod@divisor+1,f
  2201  0418  3EFF               	addlw	-1
  2202  0419  1D03               	skipz
  2203  041A  2C15               	goto	u845
  2204  041B  3001               	movlw	1
  2205  041C  00F4               	movwf	??___awmod
  2206  041D  0874               	movf	??___awmod,w
  2207  041E  07F5               	addwf	___awmod@counter,f
  2208  041F  2C12               	goto	l1486
  2209  0420                     l1488:	
  2210  0420  0871               	movf	___awmod@divisor+1,w
  2211  0421  0273               	subwf	___awmod@dividend+1,w
  2212  0422  1D03               	skipz
  2213  0423  2C26               	goto	u865
  2214  0424  0870               	movf	___awmod@divisor,w
  2215  0425  0272               	subwf	___awmod@dividend,w
  2216  0426                     u865:	
  2217  0426  1C03               	skipc
  2218  0427  2C2E               	goto	l1492
  2219  0428  0870               	movf	___awmod@divisor,w
  2220  0429  02F2               	subwf	___awmod@dividend,f
  2221  042A  0871               	movf	___awmod@divisor+1,w
  2222  042B  1C03               	skipc
  2223  042C  03F3               	decf	___awmod@dividend+1,f
  2224  042D  02F3               	subwf	___awmod@dividend+1,f
  2225  042E                     l1492:	
  2226  042E  3001               	movlw	1
  2227  042F                     u875:	
  2228  042F  1003               	clrc
  2229  0430  0CF1               	rrf	___awmod@divisor+1,f
  2230  0431  0CF0               	rrf	___awmod@divisor,f
  2231  0432  3EFF               	addlw	-1
  2232  0433  1D03               	skipz
  2233  0434  2C2F               	goto	u875
  2234  0435  3001               	movlw	1
  2235  0436  02F5               	subwf	___awmod@counter,f
  2236  0437  1D03               	btfss	3,2
  2237  0438  2C20               	goto	l1488
  2238  0439                     l1496:	
  2239  0439  0876               	movf	___awmod@sign,w
  2240  043A  1903               	btfsc	3,2
  2241  043B  2C41               	goto	l1500
  2242  043C  09F2               	comf	___awmod@dividend,f
  2243  043D  09F3               	comf	___awmod@dividend+1,f
  2244  043E  0AF2               	incf	___awmod@dividend,f
  2245  043F  1903               	skipnz
  2246  0440  0AF3               	incf	___awmod@dividend+1,f
  2247  0441                     l1500:	
  2248  0441  0873               	movf	___awmod@dividend+1,w
  2249  0442  00F1               	movwf	?___awmod+1
  2250  0443  0872               	movf	___awmod@dividend,w
  2251  0444  00F0               	movwf	?___awmod
  2252  0445  0008               	return
  2253  0446                     __end_of___awmod:	
  2254                           
  2255                           	psect	text9
  2256  0446                     __ptext9:	
  2257 ;; *************** function ___awdiv *****************
  2258 ;; Defined at:
  2259 ;;		line 6 in file "/Applications/microchip/xc8/v1.35/sources/common/awdiv.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  divisor         2    0[COMMON] int 
  2262 ;;  dividend        2    2[COMMON] int 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  quotient        2    7[COMMON] int 
  2265 ;;  sign            1    6[COMMON] unsigned char 
  2266 ;;  counter         1    5[COMMON] unsigned char 
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  2    0[COMMON] int 
  2269 ;; Registers used:
  2270 ;;		wreg, status,2, status,0
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2276 ;;      Params:         4       0       0       0       0
  2277 ;;      Locals:         4       0       0       0       0
  2278 ;;      Temps:          1       0       0       0       0
  2279 ;;      Totals:         9       0       0       0       0
  2280 ;;Total ram usage:        9 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_process_10
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           
  2290                           ;psect for function ___awdiv
  2291  0446                     ___awdiv:	
  2292                           
  2293                           ;incstack = 0
  2294                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2295  0446  01F6               	clrf	___awdiv@sign
  2296  0447  1FF1               	btfss	___awdiv@divisor+1,7
  2297  0448  2C50               	goto	l1430
  2298  0449  09F0               	comf	___awdiv@divisor,f
  2299  044A  09F1               	comf	___awdiv@divisor+1,f
  2300  044B  0AF0               	incf	___awdiv@divisor,f
  2301  044C  1903               	skipnz
  2302  044D  0AF1               	incf	___awdiv@divisor+1,f
  2303  044E  01F6               	clrf	___awdiv@sign
  2304  044F  0AF6               	incf	___awdiv@sign,f
  2305  0450                     l1430:	
  2306  0450  1FF3               	btfss	___awdiv@dividend+1,7
  2307  0451  2C5B               	goto	l1436
  2308  0452  09F2               	comf	___awdiv@dividend,f
  2309  0453  09F3               	comf	___awdiv@dividend+1,f
  2310  0454  0AF2               	incf	___awdiv@dividend,f
  2311  0455  1903               	skipnz
  2312  0456  0AF3               	incf	___awdiv@dividend+1,f
  2313  0457  3001               	movlw	1
  2314  0458  00F4               	movwf	??___awdiv
  2315  0459  0874               	movf	??___awdiv,w
  2316  045A  06F6               	xorwf	___awdiv@sign,f
  2317  045B                     l1436:	
  2318  045B  01F7               	clrf	___awdiv@quotient
  2319  045C  01F8               	clrf	___awdiv@quotient+1
  2320  045D  0870               	movf	___awdiv@divisor,w
  2321  045E  0471               	iorwf	___awdiv@divisor+1,w
  2322  045F  1903               	btfsc	3,2
  2323  0460  2C92               	goto	l1458
  2324  0461  01F5               	clrf	___awdiv@counter
  2325  0462  0AF5               	incf	___awdiv@counter,f
  2326  0463                     l1446:	
  2327  0463  1BF1               	btfsc	___awdiv@divisor+1,7
  2328  0464  2C71               	goto	l1448
  2329  0465  3001               	movlw	1
  2330  0466                     u745:	
  2331  0466  1003               	clrc
  2332  0467  0DF0               	rlf	___awdiv@divisor,f
  2333  0468  0DF1               	rlf	___awdiv@divisor+1,f
  2334  0469  3EFF               	addlw	-1
  2335  046A  1D03               	skipz
  2336  046B  2C66               	goto	u745
  2337  046C  3001               	movlw	1
  2338  046D  00F4               	movwf	??___awdiv
  2339  046E  0874               	movf	??___awdiv,w
  2340  046F  07F5               	addwf	___awdiv@counter,f
  2341  0470  2C63               	goto	l1446
  2342  0471                     l1448:	
  2343  0471  3001               	movlw	1
  2344  0472                     u765:	
  2345  0472  1003               	clrc
  2346  0473  0DF7               	rlf	___awdiv@quotient,f
  2347  0474  0DF8               	rlf	___awdiv@quotient+1,f
  2348  0475  3EFF               	addlw	-1
  2349  0476  1D03               	skipz
  2350  0477  2C72               	goto	u765
  2351  0478  0871               	movf	___awdiv@divisor+1,w
  2352  0479  0273               	subwf	___awdiv@dividend+1,w
  2353  047A  1D03               	skipz
  2354  047B  2C7E               	goto	u775
  2355  047C  0870               	movf	___awdiv@divisor,w
  2356  047D  0272               	subwf	___awdiv@dividend,w
  2357  047E                     u775:	
  2358  047E  1C03               	skipc
  2359  047F  2C87               	goto	l1454
  2360  0480  0870               	movf	___awdiv@divisor,w
  2361  0481  02F2               	subwf	___awdiv@dividend,f
  2362  0482  0871               	movf	___awdiv@divisor+1,w
  2363  0483  1C03               	skipc
  2364  0484  03F3               	decf	___awdiv@dividend+1,f
  2365  0485  02F3               	subwf	___awdiv@dividend+1,f
  2366  0486  1477               	bsf	___awdiv@quotient,0
  2367  0487                     l1454:	
  2368  0487  3001               	movlw	1
  2369  0488                     u785:	
  2370  0488  1003               	clrc
  2371  0489  0CF1               	rrf	___awdiv@divisor+1,f
  2372  048A  0CF0               	rrf	___awdiv@divisor,f
  2373  048B  3EFF               	addlw	-1
  2374  048C  1D03               	skipz
  2375  048D  2C88               	goto	u785
  2376  048E  3001               	movlw	1
  2377  048F  02F5               	subwf	___awdiv@counter,f
  2378  0490  1D03               	btfss	3,2
  2379  0491  2C71               	goto	l1448
  2380  0492                     l1458:	
  2381  0492  0876               	movf	___awdiv@sign,w
  2382  0493  1903               	btfsc	3,2
  2383  0494  2C9A               	goto	l1462
  2384  0495  09F7               	comf	___awdiv@quotient,f
  2385  0496  09F8               	comf	___awdiv@quotient+1,f
  2386  0497  0AF7               	incf	___awdiv@quotient,f
  2387  0498  1903               	skipnz
  2388  0499  0AF8               	incf	___awdiv@quotient+1,f
  2389  049A                     l1462:	
  2390  049A  0878               	movf	___awdiv@quotient+1,w
  2391  049B  00F1               	movwf	?___awdiv+1
  2392  049C  0877               	movf	___awdiv@quotient,w
  2393  049D  00F0               	movwf	?___awdiv
  2394  049E  0008               	return
  2395  049F                     __end_of___awdiv:	
  2396                           
  2397                           	psect	text10
  2398  0155                     __ptext10:	
  2399 ;; *************** function _put_string *****************
  2400 ;; Defined at:
  2401 ;;		line 72 in file "uart_serial.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  str             2    1[COMMON] PTR unsigned char 
  2404 ;;		 -> STR_2(3), show_packet@buf(4), STR_1(17), 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;		None               void
  2409 ;; Registers used:
  2410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2416 ;;      Params:         2       0       0       0       0
  2417 ;;      Locals:         0       0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0
  2419 ;;      Totals:         2       0       0       0       0
  2420 ;;Total ram usage:        2 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:    1
  2423 ;; This function calls:
  2424 ;;		_putch
  2425 ;; This function is called by:
  2426 ;;		_main
  2427 ;;		_show_packet
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           
  2432                           ;psect for function _put_string
  2433  0155                     _put_string:	
  2434  0155                     l1620:	
  2435                           ;uart_serial.c: 74: while(*str != '\0')
  2436                           
  2437                           ;incstack = 0
  2438                           ; Regs used in _put_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2439                           
  2440  0155  0872               	movf	put_string@str+1,w
  2441  0156  1283               	bcf	3,5	;RP0=0, select bank0
  2442  0157  1303               	bcf	3,6	;RP1=0, select bank0
  2443  0158  00FF               	movwf	127
  2444  0159  0871               	movf	put_string@str,w
  2445  015A  0084               	movwf	4
  2446  015B  120A  118A  2003  120A  118A  	fcall	stringtab
  2447  0160  3A00               	xorlw	0
  2448  0161  1903               	btfsc	3,2
  2449  0162  2978               	goto	l1622
  2450                           
  2451                           ;uart_serial.c: 75: {
  2452                           ;uart_serial.c: 76: putch(*str++);
  2453  0163  0872               	movf	put_string@str+1,w
  2454  0164  1283               	bcf	3,5	;RP0=0, select bank0
  2455  0165  1303               	bcf	3,6	;RP1=0, select bank0
  2456  0166  00FF               	movwf	127
  2457  0167  0871               	movf	put_string@str,w
  2458  0168  0084               	movwf	4
  2459  0169  120A  118A  2003  120A  118A  	fcall	stringtab
  2460  016E  120A  118A  20C5  120A  118A  	fcall	_putch
  2461  0173  3001               	movlw	1
  2462  0174  07F1               	addwf	put_string@str,f
  2463  0175  1803               	skipnc
  2464  0176  0AF2               	incf	put_string@str+1,f
  2465  0177  2955               	goto	l1620
  2466  0178                     l1622:	
  2467                           
  2468                           ;uart_serial.c: 77: }
  2469                           ;uart_serial.c: 78: putch('\0');
  2470  0178  3000               	movlw	0
  2471  0179  120A  118A  20C5   	fcall	_putch
  2472  017C  0008               	return
  2473  017D                     __end_of_put_string:	
  2474                           
  2475                           	psect	text11
  2476  00C5                     __ptext11:	
  2477 ;; *************** function _putch *****************
  2478 ;; Defined at:
  2479 ;;		line 52 in file "uart_serial.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  byte            1    wreg     unsigned char 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  byte            1    0[COMMON] unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;		None               void
  2486 ;; Registers used:
  2487 ;;		wreg
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2493 ;;      Params:         0       0       0       0       0
  2494 ;;      Locals:         1       0       0       0       0
  2495 ;;      Temps:          0       0       0       0       0
  2496 ;;      Totals:         1       0       0       0       0
  2497 ;;Total ram usage:        1 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_put_string
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           
  2507                           ;psect for function _putch
  2508  00C5                     _putch:	
  2509                           
  2510                           ;incstack = 0
  2511                           ; Regs used in _putch: [wreg]
  2512                           ;putch@byte stored from wreg
  2513  00C5  00F0               	movwf	putch@byte
  2514  00C6                     l200:	
  2515                           ;uart_serial.c: 55: {
  2516                           ;uart_serial.c: 56: ;
  2517                           
  2518                           ;uart_serial.c: 54: while(!TXIF)
  2519                           
  2520  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  2521  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  2522  00C8  1E0C               	btfss	12,4	;volatile
  2523  00C9  28C6               	goto	l200
  2524                           
  2525                           ;uart_serial.c: 57: }
  2526                           ;uart_serial.c: 58: TXREG = byte;
  2527  00CA  0870               	movf	putch@byte,w
  2528  00CB  0099               	movwf	25	;volatile
  2529  00CC  0008               	return
  2530  00CD                     __end_of_putch:	
  2531                           
  2532                           	psect	text12
  2533  05B5                     __ptext12:	
  2534 ;; *************** function _sent_data_set *****************
  2535 ;; Defined at:
  2536 ;;		line 147 in file "system_protocol.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  p_data          1    wreg     PTR void 
  2539 ;;		 -> main@data3(3), main@data1(1), main@data5(3), main@data2(2), 
  2540 ;;		 -> main@data4(3), main@data0(3), 
  2541 ;;  data_len        1   12[COMMON] unsigned char 
  2542 ;;  byte_of_data    1   13[COMMON] unsigned char 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  p_data          1   12[BANK0 ] PTR void 
  2545 ;;		 -> main@data3(3), main@data1(1), main@data5(3), main@data2(2), 
  2546 ;;		 -> main@data4(3), main@data0(3), 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      unsigned char 
  2549 ;; Registers used:
  2550 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2556 ;;      Params:         2       0       0       0       0
  2557 ;;      Locals:         0       1       0       0       0
  2558 ;;      Temps:          0       5       0       0       0
  2559 ;;      Totals:         2       6       0       0       0
  2560 ;;Total ram usage:        8 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    3
  2563 ;; This function calls:
  2564 ;;		___wmul
  2565 ;;		_double_data_set
  2566 ;;		_uint16_data_set
  2567 ;;		_uint8_data_set
  2568 ;; This function is called by:
  2569 ;;		_main
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           
  2574                           ;psect for function _sent_data_set
  2575  05B5                     _sent_data_set:	
  2576                           
  2577                           ;incstack = 0
  2578                           ; Regs used in _sent_data_set: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2579                           ;sent_data_set@p_data stored from wreg
  2580  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  2581  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  2582  05B7  00DA               	movwf	sent_data_set@p_data
  2583                           
  2584                           ;system_protocol.c: 150: if((30 - index_pos) - (data_len * (byte_of_data + 1)) < 0)
  2585  05B8  087D               	movf	sent_data_set@byte_of_data,w
  2586  05B9  3E01               	addlw	1
  2587  05BA  00F0               	movwf	___wmul@multiplier
  2588  05BB  3000               	movlw	0
  2589  05BC  1803               	skipnc
  2590  05BD  3001               	movlw	1
  2591  05BE  00F1               	movwf	___wmul@multiplier+1
  2592  05BF  087C               	movf	sent_data_set@data_len,w
  2593  05C0  00D5               	movwf	??_sent_data_set
  2594  05C1  01D6               	clrf	??_sent_data_set+1
  2595  05C2  0855               	movf	??_sent_data_set,w
  2596  05C3  00F2               	movwf	___wmul@multiplicand
  2597  05C4  0856               	movf	??_sent_data_set+1,w
  2598  05C5  00F3               	movwf	___wmul@multiplicand+1
  2599  05C6  120A  118A  2134  120A  118A  	fcall	___wmul
  2600  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  2601  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  2602  05CD  0820               	movf	_index_pos,w
  2603  05CE  0770               	addwf	?___wmul,w
  2604  05CF  00D7               	movwf	??_sent_data_set+2
  2605  05D0  0871               	movf	?___wmul+1,w
  2606  05D1  1803               	skipnc
  2607  05D2  0A71               	incf	?___wmul+1,w
  2608  05D3  00D8               	movwf	??_sent_data_set+3
  2609  05D4  09D7               	comf	??_sent_data_set+2,f
  2610  05D5  09D8               	comf	??_sent_data_set+3,f
  2611  05D6  0AD7               	incf	??_sent_data_set+2,f
  2612  05D7  1903               	skipnz
  2613  05D8  0AD8               	incf	??_sent_data_set+3,f
  2614  05D9  301E               	movlw	30
  2615  05DA  0757               	addwf	??_sent_data_set+2,w
  2616  05DB  0858               	movf	??_sent_data_set+3,w
  2617  05DC  1803               	skipnc
  2618  05DD  0A58               	incf	??_sent_data_set+3,w
  2619  05DE  3E00               	addlw	0
  2620  05DF  00D9               	movwf	??_sent_data_set+4
  2621  05E0  1BD9               	btfsc	??_sent_data_set+4,7
  2622  05E1  0008               	return
  2623  05E2  2E09               	goto	l1782
  2624  05E3                     l1774:	
  2625                           ;system_protocol.c: 157: {
  2626                           ;system_protocol.c: 158: case 1:
  2627                           
  2628                           ;system_protocol.c: 153: }
  2629                           ;system_protocol.c: 156: switch(byte_of_data)
  2630                           
  2631                           ;system_protocol.c: 151: {
  2632                           ;system_protocol.c: 152: return 0xff;
  2633                           ;	Return value of _sent_data_set is never used
  2634                           
  2635                           
  2636                           ;system_protocol.c: 159: uint8_data_set((uint8_t *)p_data, data_len);
  2637  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  2638  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  2639  05E5  085A               	movf	sent_data_set@p_data,w
  2640  05E6  00F0               	movwf	uint8_data_set@p_data
  2641  05E7  3000               	movlw	0
  2642  05E8  1D03               	btfss	3,2
  2643  05E9  3080               	movlw	128
  2644  05EA  00F1               	movwf	uint8_data_set@p_data+1
  2645  05EB  087C               	movf	sent_data_set@data_len,w
  2646  05EC  00D5               	movwf	??_sent_data_set
  2647  05ED  0855               	movf	??_sent_data_set,w
  2648  05EE  00F2               	movwf	uint8_data_set@data_len
  2649  05EF  120A  118A  217D   	fcall	_uint8_data_set
  2650                           
  2651                           ;system_protocol.c: 160: break;
  2652  05F2  0008               	return
  2653  05F3                     l1776:	
  2654                           ;system_protocol.c: 161: case 2:
  2655                           
  2656                           
  2657                           ;system_protocol.c: 162: uint16_data_set((uint16_t *)p_data, data_len);
  2658  05F3  087C               	movf	sent_data_set@data_len,w
  2659  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  2660  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  2661  05F6  00D5               	movwf	??_sent_data_set
  2662  05F7  0855               	movf	??_sent_data_set,w
  2663  05F8  00F5               	movwf	uint16_data_set@data_len
  2664  05F9  085A               	movf	sent_data_set@p_data,w
  2665  05FA  120A  118A  22CB   	fcall	_uint16_data_set
  2666                           
  2667                           ;system_protocol.c: 163: break;
  2668  05FD  0008               	return
  2669  05FE                     l1778:	
  2670                           ;system_protocol.c: 164: case 4:
  2671                           
  2672                           
  2673                           ;system_protocol.c: 165: double_data_set((double *)p_data, data_len);
  2674  05FE  087C               	movf	sent_data_set@data_len,w
  2675  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0600  1303               	bcf	3,6	;RP1=0, select bank0
  2677  0601  00D5               	movwf	??_sent_data_set
  2678  0602  0855               	movf	??_sent_data_set,w
  2679  0603  00F9               	movwf	double_data_set@data_len
  2680  0604  085A               	movf	sent_data_set@p_data,w
  2681  0605  120A  118A  2235   	fcall	_double_data_set
  2682                           
  2683                           ;system_protocol.c: 169: }
  2684                           
  2685                           ;system_protocol.c: 168: return 0xff;
  2686                           ;	Return value of _sent_data_set is never used
  2687                           
  2688                           ;system_protocol.c: 167: default:
  2689                           
  2690                           ;system_protocol.c: 166: break;
  2691  0608  0008               	return
  2692  0609                     l1782:	
  2693  0609  087D               	movf	sent_data_set@byte_of_data,w
  2694                           
  2695                           ; Switch size 1, requested type "space"
  2696                           ; Number of cases is 3, Range of values is 1 to 4
  2697                           ; switch strategies available:
  2698                           ; Name         Instructions Cycles
  2699                           ; simple_byte           10     6 (average)
  2700                           ; direct_byte           23    11 (fixed)
  2701                           ; jumptable            263     9 (fixed)
  2702                           ;	Chosen strategy is simple_byte
  2703  060A  3A01               	xorlw	1	; case 1
  2704  060B  1903               	skipnz
  2705  060C  2DE3               	goto	l1774
  2706  060D  3A03               	xorlw	3	; case 2
  2707  060E  1903               	skipnz
  2708  060F  2DF3               	goto	l1776
  2709  0610  3A06               	xorlw	6	; case 4
  2710  0611  1903               	skipnz
  2711  0612  2DFE               	goto	l1778
  2712  0613  2E14               	goto	l259
  2713  0614                     l259:	
  2714                           ;system_protocol.c: 172: return (uint8_t)(30 - index_pos);
  2715                           ;	Return value of _sent_data_set is never used
  2716                           
  2717  0614  0008               	return
  2718  0615                     __end_of_sent_data_set:	
  2719                           
  2720                           	psect	text13
  2721  02CB                     __ptext13:	
  2722 ;; *************** function _uint16_data_set *****************
  2723 ;; Defined at:
  2724 ;;		line 288 in file "system_protocol.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  p_data          1    wreg     PTR unsigned int 
  2727 ;;		 -> main@data3(3), main@data1(1), main@data5(3), main@data2(2), 
  2728 ;;		 -> main@data4(3), main@data0(3), 
  2729 ;;  data_len        1    5[COMMON] unsigned char 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  p_data          1   10[COMMON] PTR unsigned int 
  2732 ;;		 -> main@data3(3), main@data1(1), main@data5(3), main@data2(2), 
  2733 ;;		 -> main@data4(3), main@data0(3), 
  2734 ;;  buf             3    7[COMMON] unsigned char [3]
  2735 ;;  i               1   11[COMMON] unsigned char 
  2736 ;; Return value:  Size  Location     Type
  2737 ;;		None               void
  2738 ;; Registers used:
  2739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2745 ;;      Params:         1       0       0       0       0
  2746 ;;      Locals:         5       0       0       0       0
  2747 ;;      Temps:          1       0       0       0       0
  2748 ;;      Totals:         7       0       0       0       0
  2749 ;;Total ram usage:        7 bytes
  2750 ;; Hardware stack levels used:    1
  2751 ;; Hardware stack levels required when called:    2
  2752 ;; This function calls:
  2753 ;;		_uint16_to_byte_array
  2754 ;; This function is called by:
  2755 ;;		_sent_data_set
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           
  2760                           ;psect for function _uint16_data_set
  2761  02CB                     _uint16_data_set:	
  2762                           
  2763                           ;incstack = 0
  2764                           ; Regs used in _uint16_data_set: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2765                           ;uint16_data_set@p_data stored from wreg
  2766  02CB  00FA               	movwf	uint16_data_set@p_data
  2767  02CC                     l283:	
  2768                           ;system_protocol.c: 290: uint8_t buf[3];
  2769                           ;system_protocol.c: 291: uint8_t i;
  2770                           ;system_protocol.c: 293: while(data_len)
  2771                           
  2772  02CC  0875               	movf	uint16_data_set@data_len,w
  2773  02CD  1903               	btfsc	3,2
  2774  02CE  0008               	return
  2775                           
  2776                           ;system_protocol.c: 294: {
  2777                           ;system_protocol.c: 295: uint16_to_byte_array(p_data++, buf);
  2778  02CF  3077               	movlw	(low (uint16_data_set@buf| 0))& (0+255)
  2779  02D0  00F6               	movwf	??_uint16_data_set
  2780  02D1  0876               	movf	??_uint16_data_set,w
  2781  02D2  00F0               	movwf	uint16_to_byte_array@p_data_array
  2782  02D3  087A               	movf	uint16_data_set@p_data,w
  2783  02D4  120A  118A  2205  120A  118A  	fcall	_uint16_to_byte_array
  2784  02D9  3002               	movlw	2
  2785  02DA  00F6               	movwf	??_uint16_data_set
  2786  02DB  0876               	movf	??_uint16_data_set,w
  2787  02DC  07FA               	addwf	uint16_data_set@p_data,f
  2788                           
  2789                           ;system_protocol.c: 297: for(i = 0; i < 3; i++)
  2790  02DD  01FB               	clrf	uint16_data_set@i
  2791  02DE  3003               	movlw	3
  2792  02DF  027B               	subwf	uint16_data_set@i,w
  2793  02E0  1803               	btfsc	3,0
  2794  02E1  2AFB               	goto	l1706
  2795  02E2                     l1698:	
  2796                           
  2797                           ;system_protocol.c: 298: {
  2798                           ;system_protocol.c: 299: packet.payload[index_pos++] = buf[i];
  2799  02E2  087B               	movf	uint16_data_set@i,w
  2800  02E3  3E77               	addlw	(low (uint16_data_set@buf| 0))& (0+255)
  2801  02E4  0084               	movwf	4
  2802  02E5  0800               	movf	0,w
  2803  02E6  00F6               	movwf	??_uint16_data_set
  2804  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2805  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2806  02E9  0820               	movf	_index_pos,w
  2807  02EA  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  2808  02EB  0084               	movwf	4
  2809  02EC  0876               	movf	??_uint16_data_set,w
  2810  02ED  1383               	bcf	3,7	;select IRP bank0
  2811  02EE  0080               	movwf	0
  2812  02EF  3001               	movlw	1
  2813  02F0  00F6               	movwf	??_uint16_data_set
  2814  02F1  0876               	movf	??_uint16_data_set,w
  2815  02F2  07A0               	addwf	_index_pos,f
  2816  02F3  3001               	movlw	1
  2817  02F4  00F6               	movwf	??_uint16_data_set
  2818  02F5  0876               	movf	??_uint16_data_set,w
  2819  02F6  07FB               	addwf	uint16_data_set@i,f
  2820  02F7  3003               	movlw	3
  2821  02F8  027B               	subwf	uint16_data_set@i,w
  2822  02F9  1C03               	skipc
  2823  02FA  2AE2               	goto	l1698
  2824  02FB                     l1706:	
  2825                           
  2826                           ;system_protocol.c: 300: }
  2827                           ;system_protocol.c: 301: data_len--;
  2828  02FB  3001               	movlw	1
  2829  02FC  02F5               	subwf	uint16_data_set@data_len,f
  2830  02FD  2ACC               	goto	l283
  2831  02FE                     __end_of_uint16_data_set:	
  2832                           
  2833                           	psect	text14
  2834  0205                     __ptext14:	
  2835 ;; *************** function _uint16_to_byte_array *****************
  2836 ;; Defined at:
  2837 ;;		line 347 in file "system_protocol.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  p_data          1    wreg     PTR unsigned int 
  2840 ;;		 -> main@data3(3), main@data1(1), main@data5(3), main@data2(2), 
  2841 ;;		 -> main@data4(3), main@data0(3), 
  2842 ;;  p_data_array    1    0[COMMON] PTR unsigned char 
  2843 ;;		 -> uint16_data_set@buf(3), 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  p_data          1    4[COMMON] PTR unsigned int 
  2846 ;;		 -> main@data3(3), main@data1(1), main@data5(3), main@data2(2), 
  2847 ;;		 -> main@data4(3), main@data0(3), 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;		None               void
  2850 ;; Registers used:
  2851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2857 ;;      Params:         1       0       0       0       0
  2858 ;;      Locals:         1       0       0       0       0
  2859 ;;      Temps:          3       0       0       0       0
  2860 ;;      Totals:         5       0       0       0       0
  2861 ;;Total ram usage:        5 bytes
  2862 ;; Hardware stack levels used:    2
  2863 ;; This function calls:
  2864 ;;		Nothing
  2865 ;; This function is called by:
  2866 ;;		_uint16_data_set
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           
  2871                           ;psect for function _uint16_to_byte_array
  2872  0205                     _uint16_to_byte_array:	
  2873                           
  2874                           ;incstack = 0
  2875                           ; Regs used in _uint16_to_byte_array: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2876                           ;uint16_to_byte_array@p_data stored from wreg
  2877  0205  00F4               	movwf	uint16_to_byte_array@p_data
  2878                           
  2879                           ;system_protocol.c: 349: const uint16_t bit_mask = 0b0000000011111111;
  2880                           ;system_protocol.c: 352: p_data_array[0] = 2;
  2881  0206  3002               	movlw	2
  2882  0207  00F1               	movwf	??_uint16_to_byte_array
  2883  0208  0870               	movf	uint16_to_byte_array@p_data_array,w
  2884  0209  0084               	movwf	4
  2885  020A  0871               	movf	??_uint16_to_byte_array,w
  2886  020B  0080               	movwf	0
  2887                           
  2888                           ;system_protocol.c: 353: p_data_array[1] = (uint8_t)(*p_data >> 8);
  2889  020C  0874               	movf	uint16_to_byte_array@p_data,w
  2890  020D  0084               	movwf	4
  2891  020E  120A  118A  200D  120A  118A  	fcall	stringdir
  2892  0213  00F1               	movwf	??_uint16_to_byte_array
  2893  0214  120A  118A  200D  120A  118A  	fcall	stringdir
  2894  0219  00F2               	movwf	??_uint16_to_byte_array+1
  2895  021A  0872               	movf	??_uint16_to_byte_array+1,w
  2896  021B  00F3               	movwf	??_uint16_to_byte_array+2
  2897  021C  0A70               	incf	uint16_to_byte_array@p_data_array,w
  2898  021D  0084               	movwf	4
  2899  021E  0873               	movf	??_uint16_to_byte_array+2,w
  2900  021F  0080               	movwf	0
  2901                           
  2902                           ;system_protocol.c: 354: p_data_array[2] = (uint8_t)(*p_data & bit_mask);
  2903  0220  3001               	movlw	low (uint16_to_byte_array@bit_mask-__stringbase)
  2904  0221  0084               	movwf	4
  2905  0222  120A  118A  200D  120A  118A  	fcall	stringdir
  2906  0227  00F1               	movwf	??_uint16_to_byte_array
  2907  0228  0874               	movf	uint16_to_byte_array@p_data,w
  2908  0229  0084               	movwf	4
  2909  022A  120A  118A  200D   	fcall	stringdir
  2910  022D  0571               	andwf	??_uint16_to_byte_array,w
  2911  022E  00F2               	movwf	??_uint16_to_byte_array+1
  2912  022F  0870               	movf	uint16_to_byte_array@p_data_array,w
  2913  0230  3E02               	addlw	2
  2914  0231  0084               	movwf	4
  2915  0232  0872               	movf	??_uint16_to_byte_array+1,w
  2916  0233  0080               	movwf	0
  2917  0234  0008               	return
  2918  0235                     __end_of_uint16_to_byte_array:	
  2919                           
  2920                           	psect	text15
  2921  0235                     __ptext15:	
  2922 ;; *************** function _double_data_set *****************
  2923 ;; Defined at:
  2924 ;;		line 317 in file "system_protocol.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  p_data          1    wreg     PTR 
  2927 ;;		 -> main@data3(3), main@data1(1), main@data5(3), main@data2(2), 
  2928 ;;		 -> main@data4(3), main@data0(3), 
  2929 ;;  data_len        1    9[COMMON] unsigned char 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  p_data          1    5[BANK0 ] PTR 
  2932 ;;		 -> main@data3(3), main@data1(1), main@data5(3), main@data2(2), 
  2933 ;;		 -> main@data4(3), main@data0(3), 
  2934 ;;  buf             5    0[BANK0 ] unsigned char [5]
  2935 ;;  i               1    6[BANK0 ] unsigned char 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;		None               void
  2938 ;; Registers used:
  2939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2945 ;;      Params:         1       0       0       0       0
  2946 ;;      Locals:         0       7       0       0       0
  2947 ;;      Temps:          1       0       0       0       0
  2948 ;;      Totals:         2       7       0       0       0
  2949 ;;Total ram usage:        9 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    2
  2952 ;; This function calls:
  2953 ;;		_double_to_byte_array
  2954 ;; This function is called by:
  2955 ;;		_sent_data_set
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           
  2960                           ;psect for function _double_data_set
  2961  0235                     _double_data_set:	
  2962                           
  2963                           ;incstack = 0
  2964                           ; Regs used in _double_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2965                           ;double_data_set@p_data stored from wreg
  2966  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2967  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2968  0237  00D3               	movwf	double_data_set@p_data
  2969  0238                     l291:	
  2970                           ;system_protocol.c: 319: uint8_t buf[5];
  2971                           ;system_protocol.c: 320: uint8_t i;
  2972                           ;system_protocol.c: 322: while(data_len)
  2973                           
  2974  0238  0879               	movf	double_data_set@data_len,w
  2975  0239  1903               	btfsc	3,2
  2976  023A  0008               	return
  2977                           
  2978                           ;system_protocol.c: 323: {
  2979                           ;system_protocol.c: 325: double_to_byte_array(p_data, buf);
  2980  023B  304E               	movlw	(low (double_data_set@buf| 0))& (0+255)
  2981  023C  00FA               	movwf	??_double_data_set
  2982  023D  087A               	movf	??_double_data_set,w
  2983  023E  00F0               	movwf	double_to_byte_array@p_data_array
  2984  023F  0853               	movf	double_data_set@p_data,w
  2985  0240  120A  118A  2298  120A  118A  	fcall	_double_to_byte_array
  2986                           
  2987                           ;system_protocol.c: 327: for(i = 0; i < 5; i++)
  2988  0245  1283               	bcf	3,5	;RP0=0, select bank0
  2989  0246  1303               	bcf	3,6	;RP1=0, select bank0
  2990  0247  01D4               	clrf	double_data_set@i
  2991  0248  3005               	movlw	5
  2992  0249  0254               	subwf	double_data_set@i,w
  2993  024A  1803               	btfsc	3,0
  2994  024B  2A63               	goto	l1726
  2995  024C                     l1718:	
  2996                           
  2997                           ;system_protocol.c: 328: {
  2998                           ;system_protocol.c: 329: packet.payload[index_pos++] = buf[i];
  2999  024C  0854               	movf	double_data_set@i,w
  3000  024D  3E4E               	addlw	(low (double_data_set@buf| 0))& (0+255)
  3001  024E  0084               	movwf	4
  3002  024F  1383               	bcf	3,7	;select IRP bank0
  3003  0250  0800               	movf	0,w
  3004  0251  00FA               	movwf	??_double_data_set
  3005  0252  0820               	movf	_index_pos,w
  3006  0253  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  3007  0254  0084               	movwf	4
  3008  0255  087A               	movf	??_double_data_set,w
  3009  0256  0080               	movwf	0
  3010  0257  3001               	movlw	1
  3011  0258  00FA               	movwf	??_double_data_set
  3012  0259  087A               	movf	??_double_data_set,w
  3013  025A  07A0               	addwf	_index_pos,f
  3014  025B  3001               	movlw	1
  3015  025C  00FA               	movwf	??_double_data_set
  3016  025D  087A               	movf	??_double_data_set,w
  3017  025E  07D4               	addwf	double_data_set@i,f
  3018  025F  3005               	movlw	5
  3019  0260  0254               	subwf	double_data_set@i,w
  3020  0261  1C03               	skipc
  3021  0262  2A4C               	goto	l1718
  3022  0263                     l1726:	
  3023                           
  3024                           ;system_protocol.c: 330: }
  3025                           ;system_protocol.c: 331: data_len--;
  3026  0263  3001               	movlw	1
  3027  0264  02F9               	subwf	double_data_set@data_len,f
  3028  0265  2A38               	goto	l291
  3029  0266                     __end_of_double_data_set:	
  3030                           
  3031                           	psect	text16
  3032  0298                     __ptext16:	
  3033 ;; *************** function _double_to_byte_array *****************
  3034 ;; Defined at:
  3035 ;;		line 369 in file "system_protocol.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;  p_data          1    wreg     PTR 
  3038 ;;		 -> main@data3(3), main@data1(1), main@data5(3), main@data2(2), 
  3039 ;;		 -> main@data4(3), main@data0(3), 
  3040 ;;  p_data_array    1    0[COMMON] PTR unsigned char 
  3041 ;;		 -> double_data_set@buf(5), 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;  p_data          1    7[COMMON] PTR 
  3044 ;;		 -> main@data3(3), main@data1(1), main@data5(3), main@data2(2), 
  3045 ;;		 -> main@data4(3), main@data0(3), 
  3046 ;;  converter       4    3[COMMON] struct .
  3047 ;;  i               1    8[COMMON] unsigned char 
  3048 ;; Return value:  Size  Location     Type
  3049 ;;		None               void
  3050 ;; Registers used:
  3051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3057 ;;      Params:         1       0       0       0       0
  3058 ;;      Locals:         6       0       0       0       0
  3059 ;;      Temps:          2       0       0       0       0
  3060 ;;      Totals:         9       0       0       0       0
  3061 ;;Total ram usage:        9 bytes
  3062 ;; Hardware stack levels used:    2
  3063 ;; This function calls:
  3064 ;;		Nothing
  3065 ;; This function is called by:
  3066 ;;		_double_data_set
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           
  3071                           ;psect for function _double_to_byte_array
  3072  0298                     _double_to_byte_array:	
  3073                           
  3074                           ;incstack = 0
  3075                           ; Regs used in _double_to_byte_array: [wreg-fsr0h+status,2+status,0+pclath]
  3076                           ;double_to_byte_array@p_data stored from wreg
  3077  0298  00F7               	movwf	double_to_byte_array@p_data
  3078                           
  3079                           ;system_protocol.c: 371: uint8_t i;
  3080                           ;system_protocol.c: 372: union
  3081                           ;system_protocol.c: 373: {
  3082                           ;system_protocol.c: 374: double data;
  3083                           ;system_protocol.c: 375: uint8_t array[4];
  3084                           ;system_protocol.c: 376: } converter;
  3085                           ;system_protocol.c: 379: converter.data = *p_data;
  3086  0299  0877               	movf	double_to_byte_array@p_data,w
  3087  029A  0084               	movwf	4
  3088  029B  120A  118A  200D  120A  118A  	fcall	stringdir
  3089  02A0  00F3               	movwf	double_to_byte_array@converter
  3090  02A1  120A  118A  200D  120A  118A  	fcall	stringdir
  3091  02A6  00F4               	movwf	double_to_byte_array@converter+1
  3092  02A7  120A  118A  200D  120A  118A  	fcall	stringdir
  3093  02AC  00F5               	movwf	double_to_byte_array@converter+2
  3094                           
  3095                           ;system_protocol.c: 382: p_data_array[0] = 4;
  3096  02AD  3004               	movlw	4
  3097  02AE  00F1               	movwf	??_double_to_byte_array
  3098  02AF  0870               	movf	double_to_byte_array@p_data_array,w
  3099  02B0  0084               	movwf	4
  3100  02B1  0871               	movf	??_double_to_byte_array,w
  3101  02B2  1383               	bcf	3,7	;select IRP bank0
  3102  02B3  0080               	movwf	0
  3103                           
  3104                           ;system_protocol.c: 385: for(i = 0; i < 4; i++)
  3105  02B4  01F8               	clrf	double_to_byte_array@i
  3106  02B5                     L3:	
  3107  02B5  3004               	movlw	4
  3108  02B6  0278               	subwf	double_to_byte_array@i,w
  3109  02B7  1803               	btfsc	3,0
  3110  02B8  0008               	return
  3111                           
  3112                           ;system_protocol.c: 386: {
  3113                           ;system_protocol.c: 387: p_data_array[i + 1] = converter.array[i];
  3114  02B9  0878               	movf	double_to_byte_array@i,w
  3115  02BA  3E73               	addlw	(low (double_to_byte_array@converter| 0))& (0+255)
  3116  02BB  0084               	movwf	4
  3117  02BC  0800               	movf	0,w
  3118  02BD  00F1               	movwf	??_double_to_byte_array
  3119  02BE  0878               	movf	double_to_byte_array@i,w
  3120  02BF  3E01               	addlw	1
  3121  02C0  0770               	addwf	double_to_byte_array@p_data_array,w
  3122  02C1  00F2               	movwf	??_double_to_byte_array+1
  3123  02C2  0872               	movf	??_double_to_byte_array+1,w
  3124  02C3  0084               	movwf	4
  3125  02C4  0871               	movf	??_double_to_byte_array,w
  3126  02C5  0080               	movwf	0
  3127  02C6  3001               	movlw	1
  3128  02C7  00F1               	movwf	??_double_to_byte_array
  3129  02C8  0871               	movf	??_double_to_byte_array,w
  3130  02C9  07F8               	addwf	double_to_byte_array@i,f
  3131  02CA  2AB5               	goto	L3
  3132  02CB                     __end_of_double_to_byte_array:	
  3133                           
  3134                           	psect	text17
  3135  0134                     __ptext17:	
  3136 ;; *************** function ___wmul *****************
  3137 ;; Defined at:
  3138 ;;		line 15 in file "/Applications/microchip/xc8/v1.35/sources/common/Umul16.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  multiplier      2    0[COMMON] unsigned int 
  3141 ;;  multiplicand    2    2[COMMON] unsigned int 
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;  product         2    4[COMMON] unsigned int 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  2    0[COMMON] unsigned int 
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, status,0
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3153 ;;      Params:         4       0       0       0       0
  3154 ;;      Locals:         2       0       0       0       0
  3155 ;;      Temps:          0       0       0       0       0
  3156 ;;      Totals:         6       0       0       0       0
  3157 ;;Total ram usage:        6 bytes
  3158 ;; Hardware stack levels used:    1
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		_sent_data_set
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           
  3167                           ;psect for function ___wmul
  3168  0134                     ___wmul:	
  3169                           
  3170                           ;incstack = 0
  3171                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3172  0134  01F4               	clrf	___wmul@product
  3173  0135  01F5               	clrf	___wmul@product+1
  3174  0136                     l1752:	
  3175  0136  1C70               	btfss	___wmul@multiplier,0
  3176  0137  293E               	goto	l452
  3177  0138  0872               	movf	___wmul@multiplicand,w
  3178  0139  07F4               	addwf	___wmul@product,f
  3179  013A  1803               	skipnc
  3180  013B  0AF5               	incf	___wmul@product+1,f
  3181  013C  0873               	movf	___wmul@multiplicand+1,w
  3182  013D  07F5               	addwf	___wmul@product+1,f
  3183  013E                     l452:	
  3184  013E  3001               	movlw	1
  3185  013F                     u1265:	
  3186  013F  1003               	clrc
  3187  0140  0DF2               	rlf	___wmul@multiplicand,f
  3188  0141  0DF3               	rlf	___wmul@multiplicand+1,f
  3189  0142  3EFF               	addlw	-1
  3190  0143  1D03               	skipz
  3191  0144  293F               	goto	u1265
  3192  0145  3001               	movlw	1
  3193  0146                     u1275:	
  3194  0146  1003               	clrc
  3195  0147  0CF1               	rrf	___wmul@multiplier+1,f
  3196  0148  0CF0               	rrf	___wmul@multiplier,f
  3197  0149  3EFF               	addlw	-1
  3198  014A  1D03               	skipz
  3199  014B  2946               	goto	u1275
  3200  014C  0870               	movf	___wmul@multiplier,w
  3201  014D  0471               	iorwf	___wmul@multiplier+1,w
  3202  014E  1D03               	btfss	3,2
  3203  014F  2936               	goto	l1752
  3204  0150  0875               	movf	___wmul@product+1,w
  3205  0151  00F1               	movwf	?___wmul+1
  3206  0152  0874               	movf	___wmul@product,w
  3207  0153  00F0               	movwf	?___wmul
  3208  0154  0008               	return
  3209  0155                     __end_of___wmul:	
  3210                           
  3211                           	psect	text18
  3212  00E1                     __ptext18:	
  3213 ;; *************** function _send_data_master *****************
  3214 ;; Defined at:
  3215 ;;		line 223 in file "system_protocol.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;  destination     1    wreg     enum E1099
  3218 ;;  data_type       1    1[BANK0 ] enum E1104
  3219 ;;  data_end_com    1    2[BANK0 ] enum E1109
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  destination     1    4[BANK0 ] enum E1099
  3222 ;; Return value:  Size  Location     Type
  3223 ;;		None               void
  3224 ;; Registers used:
  3225 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3231 ;;      Params:         0       2       0       0       0
  3232 ;;      Locals:         0       1       0       0       0
  3233 ;;      Temps:          0       1       0       0       0
  3234 ;;      Totals:         0       4       0       0       0
  3235 ;;Total ram usage:        4 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; Hardware stack levels required when called:    3
  3238 ;; This function calls:
  3239 ;;		_packet_send_master
  3240 ;; This function is called by:
  3241 ;;		_main
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           
  3246                           ;psect for function _send_data_master
  3247  00E1                     _send_data_master:	
  3248                           
  3249                           ;incstack = 0
  3250                           ; Regs used in _send_data_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3251                           ;send_data_master@destination stored from wreg
  3252  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  3253  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  3254  00E3  00D2               	movwf	send_data_master@destination
  3255                           
  3256                           ;system_protocol.c: 225: packet.data_type = (uint8_t)data_type;
  3257  00E4  084F               	movf	send_data_master@data_type,w
  3258  00E5  00D1               	movwf	??_send_data_master
  3259  00E6  0851               	movf	??_send_data_master,w
  3260  00E7  00A1               	movwf	_packet
  3261                           
  3262                           ;system_protocol.c: 226: packet.data_end_command = (uint8_t)data_end_command;
  3263  00E8  0850               	movf	send_data_master@data_end_command,w
  3264  00E9  00D1               	movwf	??_send_data_master
  3265  00EA  0851               	movf	??_send_data_master,w
  3266  00EB  00C0               	movwf	_packet+31
  3267                           
  3268                           ;system_protocol.c: 228: packet_send_master(destination, &packet);
  3269  00EC  3021               	movlw	(low (_packet| 0))& (0+255)
  3270  00ED  00D1               	movwf	??_send_data_master
  3271  00EE  0851               	movf	??_send_data_master,w
  3272  00EF  00FC               	movwf	packet_send_master@p_packet
  3273  00F0  0852               	movf	send_data_master@destination,w
  3274  00F1  120A  118A  21D5   	fcall	_packet_send_master
  3275  00F4  0008               	return
  3276  00F5                     __end_of_send_data_master:	
  3277                           
  3278                           	psect	text19
  3279  01D5                     __ptext19:	
  3280 ;; *************** function _packet_send_master *****************
  3281 ;; Defined at:
  3282 ;;		line 472 in file "system_protocol.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  destination     1    wreg     enum E1099
  3285 ;;  p_packet        1   12[COMMON] PTR struct .
  3286 ;;		 -> packet(32), 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  destination     1    0[BANK0 ] enum E1099
  3289 ;; Return value:  Size  Location     Type
  3290 ;;		None               void
  3291 ;; Registers used:
  3292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3298 ;;      Params:         1       0       0       0       0
  3299 ;;      Locals:         0       1       0       0       0
  3300 ;;      Temps:          1       0       0       0       0
  3301 ;;      Totals:         2       1       0       0       0
  3302 ;;Total ram usage:        3 bytes
  3303 ;; Hardware stack levels used:    1
  3304 ;; Hardware stack levels required when called:    2
  3305 ;; This function calls:
  3306 ;;		_send_payload
  3307 ;;		_spi_master_send
  3308 ;; This function is called by:
  3309 ;;		_send_data_master
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           
  3314                           ;psect for function _packet_send_master
  3315  01D5                     _packet_send_master:	
  3316                           
  3317                           ;incstack = 0
  3318                           ; Regs used in _packet_send_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3319                           ;packet_send_master@destination stored from wreg
  3320  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  3321  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  3322  01D7  00CE               	movwf	packet_send_master@destination
  3323                           
  3324                           ;system_protocol.c: 475: spi_master_send(destination, 0x01);
  3325  01D8  01F0               	clrf	spi_master_send@data
  3326  01D9  0AF0               	incf	spi_master_send@data,f
  3327  01DA  084E               	movf	packet_send_master@destination,w
  3328  01DB  120A  118A  2555  120A  118A  	fcall	_spi_master_send
  3329                           
  3330                           ;system_protocol.c: 478: spi_master_send(destination, &p_packet->data_type);
  3331  01E0  087C               	movf	packet_send_master@p_packet,w
  3332  01E1  00FD               	movwf	??_packet_send_master
  3333  01E2  087D               	movf	??_packet_send_master,w
  3334  01E3  00F0               	movwf	spi_master_send@data
  3335  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  3336  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  3337  01E6  084E               	movf	packet_send_master@destination,w
  3338  01E7  120A  118A  2555  120A  118A  	fcall	_spi_master_send
  3339                           
  3340                           ;system_protocol.c: 481: send_payload(destination, &p_packet->payload);
  3341  01EC  087C               	movf	packet_send_master@p_packet,w
  3342  01ED  3E01               	addlw	1
  3343  01EE  00FD               	movwf	??_packet_send_master
  3344  01EF  087D               	movf	??_packet_send_master,w
  3345  01F0  00F6               	movwf	send_payload@p_payload
  3346  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  3347  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  3348  01F3  084E               	movf	packet_send_master@destination,w
  3349  01F4  120A  118A  2334  120A  118A  	fcall	_send_payload
  3350                           
  3351                           ;system_protocol.c: 484: spi_master_send(destination, &p_packet->data_end_command);
  3352  01F9  087C               	movf	packet_send_master@p_packet,w
  3353  01FA  3E1F               	addlw	31
  3354  01FB  00FD               	movwf	??_packet_send_master
  3355  01FC  087D               	movf	??_packet_send_master,w
  3356  01FD  00F0               	movwf	spi_master_send@data
  3357  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  3358  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  3359  0200  084E               	movf	packet_send_master@destination,w
  3360  0201  120A  118A  2555   	fcall	_spi_master_send
  3361  0204  0008               	return
  3362  0205                     __end_of_packet_send_master:	
  3363                           
  3364                           	psect	text20
  3365  0334                     __ptext20:	
  3366 ;; *************** function _send_payload *****************
  3367 ;; Defined at:
  3368 ;;		line 404 in file "system_protocol.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;  destination     1    wreg     enum E1099
  3371 ;;  p_payload       1    6[COMMON] PTR unsigned char 
  3372 ;;		 -> packet(32), 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  destination     1   11[COMMON] enum E1099
  3375 ;;  index_pos       1   10[COMMON] unsigned char 
  3376 ;;  i               1    9[COMMON] unsigned char 
  3377 ;;  data_len        1    8[COMMON] unsigned char 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      unsigned char 
  3380 ;; Registers used:
  3381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3387 ;;      Params:         1       0       0       0       0
  3388 ;;      Locals:         4       0       0       0       0
  3389 ;;      Temps:          1       0       0       0       0
  3390 ;;      Totals:         6       0       0       0       0
  3391 ;;Total ram usage:        6 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    1
  3394 ;; This function calls:
  3395 ;;		_spi_master_send
  3396 ;; This function is called by:
  3397 ;;		_packet_send_master
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           
  3402                           ;psect for function _send_payload
  3403  0334                     _send_payload:	
  3404                           
  3405                           ;incstack = 0
  3406                           ; Regs used in _send_payload: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3407                           ;send_payload@destination stored from wreg
  3408  0334  00FB               	movwf	send_payload@destination
  3409                           
  3410                           ;system_protocol.c: 406: uint8_t i;
  3411                           ;system_protocol.c: 407: uint8_t data_len;
  3412                           ;system_protocol.c: 408: uint8_t index_pos = 0;
  3413  0335  01FA               	clrf	send_payload@index_pos
  3414  0336                     l1598:	
  3415                           ;system_protocol.c: 411: while(*p_payload != 0x00 || index_pos < 30)
  3416                           
  3417  0336  0876               	movf	send_payload@p_payload,w
  3418  0337  0084               	movwf	4
  3419  0338  1383               	bcf	3,7	;select IRP bank0
  3420  0339  0800               	movf	0,w
  3421  033A  1903               	btfsc	3,2
  3422  033B  2B71               	goto	l1600
  3423  033C                     l1578:	
  3424                           
  3425                           ;system_protocol.c: 412: {
  3426                           ;system_protocol.c: 413: data_len = *p_payload;
  3427  033C  0876               	movf	send_payload@p_payload,w
  3428  033D  0084               	movwf	4
  3429  033E  1383               	bcf	3,7	;select IRP bank0
  3430  033F  0800               	movf	0,w
  3431  0340  00F7               	movwf	??_send_payload
  3432  0341  0877               	movf	??_send_payload,w
  3433  0342  00F8               	movwf	send_payload@data_len
  3434                           
  3435                           ;system_protocol.c: 414: spi_master_send(destination, p_payload++);
  3436  0343  0876               	movf	send_payload@p_payload,w
  3437  0344  00F7               	movwf	??_send_payload
  3438  0345  0877               	movf	??_send_payload,w
  3439  0346  00F0               	movwf	spi_master_send@data
  3440  0347  087B               	movf	send_payload@destination,w
  3441  0348  120A  118A  2555  120A  118A  	fcall	_spi_master_send
  3442  034D  3001               	movlw	1
  3443  034E  00F7               	movwf	??_send_payload
  3444  034F  0877               	movf	??_send_payload,w
  3445  0350  07F6               	addwf	send_payload@p_payload,f
  3446                           
  3447                           ;system_protocol.c: 415: index_pos++;
  3448  0351  3001               	movlw	1
  3449  0352  00F7               	movwf	??_send_payload
  3450  0353  0877               	movf	??_send_payload,w
  3451  0354  07FA               	addwf	send_payload@index_pos,f
  3452                           
  3453                           ;system_protocol.c: 416: for(i = 0; i < data_len; i++)
  3454  0355  01F9               	clrf	send_payload@i
  3455  0356                     l1596:	
  3456  0356  0878               	movf	send_payload@data_len,w
  3457  0357  0279               	subwf	send_payload@i,w
  3458  0358  1803               	btfsc	3,0
  3459  0359  2B36               	goto	l1598
  3460                           
  3461                           ;system_protocol.c: 417: {
  3462                           ;system_protocol.c: 418: spi_master_send(destination, p_payload++);
  3463  035A  0876               	movf	send_payload@p_payload,w
  3464  035B  00F7               	movwf	??_send_payload
  3465  035C  0877               	movf	??_send_payload,w
  3466  035D  00F0               	movwf	spi_master_send@data
  3467  035E  087B               	movf	send_payload@destination,w
  3468  035F  120A  118A  2555  120A  118A  	fcall	_spi_master_send
  3469  0364  3001               	movlw	1
  3470  0365  00F7               	movwf	??_send_payload
  3471  0366  0877               	movf	??_send_payload,w
  3472  0367  07F6               	addwf	send_payload@p_payload,f
  3473                           
  3474                           ;system_protocol.c: 419: index_pos++;
  3475  0368  3001               	movlw	1
  3476  0369  00F7               	movwf	??_send_payload
  3477  036A  0877               	movf	??_send_payload,w
  3478  036B  07FA               	addwf	send_payload@index_pos,f
  3479  036C  3001               	movlw	1
  3480  036D  00F7               	movwf	??_send_payload
  3481  036E  0877               	movf	??_send_payload,w
  3482  036F  07F9               	addwf	send_payload@i,f
  3483  0370  2B56               	goto	l1596
  3484  0371                     l1600:	
  3485  0371  301E               	movlw	30
  3486  0372  027A               	subwf	send_payload@index_pos,w
  3487  0373  1803               	btfsc	3,0
  3488  0374  0008               	return
  3489  0375  2B3C               	goto	l1578
  3490  0376                     __end_of_send_payload:	
  3491                           ;system_protocol.c: 420: }
  3492                           ;system_protocol.c: 421: }
  3493                           ;system_protocol.c: 423: return index_pos;
  3494                           ;	Return value of _send_payload is never used
  3495                           
  3496                           
  3497                           	psect	text21
  3498  0555                     __ptext21:	
  3499 ;; *************** function _spi_master_send *****************
  3500 ;; Defined at:
  3501 ;;		line 165 in file "spi_master.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;  destination     1    wreg     enum E1099
  3504 ;;  data            1    0[COMMON] unsigned char 
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  destination     1    5[COMMON] enum E1099
  3507 ;;  timeout_coun    2    3[COMMON] unsigned int 
  3508 ;;  dummy           1    2[COMMON] unsigned char 
  3509 ;; Return value:  Size  Location     Type
  3510 ;;		None               void
  3511 ;; Registers used:
  3512 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3518 ;;      Params:         1       0       0       0       0
  3519 ;;      Locals:         4       0       0       0       0
  3520 ;;      Temps:          1       0       0       0       0
  3521 ;;      Totals:         6       0       0       0       0
  3522 ;;Total ram usage:        6 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; This function calls:
  3525 ;;		Nothing
  3526 ;; This function is called by:
  3527 ;;		_send_payload
  3528 ;;		_packet_send_master
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           
  3533                           ;psect for function _spi_master_send
  3534  0555                     _spi_master_send:	
  3535                           
  3536                           ;incstack = 0
  3537                           ; Regs used in _spi_master_send: [wreg-fsr0h+status,2+status,0]
  3538                           ;spi_master_send@destination stored from wreg
  3539  0555  00F5               	movwf	spi_master_send@destination
  3540                           
  3541                           ;spi_master.c: 167: uint8_t dummy;
  3542                           ;spi_master.c: 168: uint16_t timeout_counter = 1000;
  3543  0556  30E8               	movlw	232
  3544  0557  00F3               	movwf	spi_master_send@timeout_counter
  3545  0558  3003               	movlw	3
  3546  0559  00F4               	movwf	spi_master_send@timeout_counter+1
  3547                           
  3548                           ;spi_master.c: 171: dummy = SSPBUF;
  3549  055A  1283               	bcf	3,5	;RP0=0, select bank0
  3550  055B  1303               	bcf	3,6	;RP1=0, select bank0
  3551  055C  0813               	movf	19,w	;volatile
  3552  055D  00F1               	movwf	??_spi_master_send
  3553  055E  0871               	movf	??_spi_master_send,w
  3554  055F  00F2               	movwf	spi_master_send@dummy
  3555                           
  3556                           ;spi_master.c: 174: switch(destination)
  3557  0560  2D6A               	goto	l1510
  3558  0561                     l139:	
  3559                           ;spi_master.c: 177: while(PORTDbits.RD2 == 0){;}
  3560                           
  3561                           ;spi_master.c: 175: {
  3562                           ;spi_master.c: 176: case OBC2:
  3563                           
  3564  0561  1908               	btfsc	8,2	;volatile
  3565  0562  2D7C               	goto	l1514
  3566  0563  2D61               	goto	l139
  3567  0564                     l144:	
  3568                           ;spi_master.c: 180: while(PORTDbits.RD0 == 0){;}
  3569                           
  3570                           ;spi_master.c: 179: case COM:
  3571                           
  3572                           ;spi_master.c: 178: break;
  3573                           
  3574  0564  1808               	btfsc	8,0	;volatile
  3575  0565  2D7C               	goto	l1514
  3576  0566  2D64               	goto	l144
  3577  0567                     l148:	
  3578                           ;spi_master.c: 183: while(PORTDbits.RD1 == 0){;}
  3579                           
  3580                           ;spi_master.c: 182: case POW:
  3581                           
  3582                           ;spi_master.c: 181: break;
  3583                           
  3584  0567  1888               	btfsc	8,1	;volatile
  3585  0568  2D7C               	goto	l1514
  3586  0569  2D67               	goto	l148
  3587  056A                     l1510:	
  3588                           ;spi_master.c: 185: }
  3589                           
  3590                           ;spi_master.c: 184: break;
  3591                           
  3592  056A  0875               	movf	spi_master_send@destination,w
  3593                           
  3594                           ; Switch size 1, requested type "space"
  3595                           ; Number of cases is 3, Range of values is 2 to 4
  3596                           ; switch strategies available:
  3597                           ; Name         Instructions Cycles
  3598                           ; simple_byte           10     6 (average)
  3599                           ; direct_byte           20    11 (fixed)
  3600                           ; jumptable            263     9 (fixed)
  3601                           ;	Chosen strategy is simple_byte
  3602  056B  3A02               	xorlw	2	; case 2
  3603  056C  1903               	skipnz
  3604  056D  2D61               	goto	l139
  3605  056E  3A01               	xorlw	1	; case 3
  3606  056F  1903               	skipnz
  3607  0570  2D64               	goto	l144
  3608  0571  3A07               	xorlw	7	; case 4
  3609  0572  1903               	skipnz
  3610  0573  2D67               	goto	l148
  3611  0574  2D7C               	goto	l1514
  3612                           
  3613                           ;spi_master.c: 188: switch(destination)
  3614  0575  2D7C               	goto	l1514
  3615  0576                     l152:	
  3616                           ;spi_master.c: 189: {
  3617                           ;spi_master.c: 190: case OBC2:
  3618                           
  3619                           
  3620                           ;spi_master.c: 191: PORTCbits.RC2 = 0;
  3621  0576  1107               	bcf	7,2	;volatile
  3622                           
  3623                           ;spi_master.c: 192: break;
  3624  0577  2D87               	goto	l1516
  3625  0578                     l154:	
  3626                           ;spi_master.c: 193: case COM:
  3627                           
  3628                           
  3629                           ;spi_master.c: 194: PORTCbits.RC0 = 0;
  3630  0578  1007               	bcf	7,0	;volatile
  3631                           
  3632                           ;spi_master.c: 195: break;
  3633  0579  2D87               	goto	l1516
  3634  057A                     l155:	
  3635                           ;spi_master.c: 196: case POW:
  3636                           
  3637                           
  3638                           ;spi_master.c: 197: PORTCbits.RC1 = 0;
  3639  057A  1087               	bcf	7,1	;volatile
  3640                           
  3641                           ;spi_master.c: 199: }
  3642                           
  3643                           ;spi_master.c: 198: break;
  3644  057B  2D87               	goto	l1516
  3645  057C                     l1514:	
  3646  057C  0875               	movf	spi_master_send@destination,w
  3647                           
  3648                           ; Switch size 1, requested type "space"
  3649                           ; Number of cases is 3, Range of values is 2 to 4
  3650                           ; switch strategies available:
  3651                           ; Name         Instructions Cycles
  3652                           ; simple_byte           10     6 (average)
  3653                           ; direct_byte           20    11 (fixed)
  3654                           ; jumptable            263     9 (fixed)
  3655                           ;	Chosen strategy is simple_byte
  3656  057D  3A02               	xorlw	2	; case 2
  3657  057E  1903               	skipnz
  3658  057F  2D76               	goto	l152
  3659  0580  3A01               	xorlw	1	; case 3
  3660  0581  1903               	skipnz
  3661  0582  2D78               	goto	l154
  3662  0583  3A07               	xorlw	7	; case 4
  3663  0584  1903               	skipnz
  3664  0585  2D7A               	goto	l155
  3665  0586  2D87               	goto	l1516
  3666  0587                     l1516:	
  3667                           
  3668                           ;spi_master.c: 202: SSPBUF = data;
  3669  0587  0870               	movf	spi_master_send@data,w
  3670  0588  0093               	movwf	19	;volatile
  3671  0589                     l1524:	
  3672                           ;spi_master.c: 205: while(SSPSTATbits.BF == 0)
  3673                           
  3674  0589  1683               	bsf	3,5	;RP0=1, select bank1
  3675  058A  1303               	bcf	3,6	;RP1=0, select bank1
  3676  058B  1814               	btfsc	20,0	;volatile
  3677  058C  2DA4               	goto	l1528
  3678                           
  3679                           ;spi_master.c: 206: {
  3680                           ;spi_master.c: 208: if(timeout_counter == 0)
  3681  058D  0873               	movf	spi_master_send@timeout_counter,w
  3682  058E  0474               	iorwf	spi_master_send@timeout_counter+1,w
  3683  058F  1903               	btfsc	3,2
  3684  0590  0008               	return
  3685                           
  3686                           ;spi_master.c: 211: }
  3687                           ;spi_master.c: 214: _delay((unsigned long)((1)*(20000000/4000000.0)));
  3688                           
  3689                           ;spi_master.c: 209: {
  3690                           ;spi_master.c: 210: return;
  3691  0591  2D92               	nop2	;2 cycle nop
  3692  0592  2D93               	nop2	;2 cycle nop
  3693  0593  0000               	nop
  3694                           
  3695                           ;spi_master.c: 215: timeout_counter--;
  3696  0594  3001               	movlw	1
  3697  0595  02F3               	subwf	spi_master_send@timeout_counter,f
  3698  0596  3000               	movlw	0
  3699  0597  1C03               	skipc
  3700  0598  03F4               	decf	spi_master_send@timeout_counter+1,f
  3701  0599  02F4               	subwf	spi_master_send@timeout_counter+1,f
  3702  059A  2D89               	goto	l1524
  3703  059B                     l162:	
  3704                           ;spi_master.c: 220: {
  3705                           ;spi_master.c: 221: case OBC2:
  3706                           
  3707                           ;spi_master.c: 216: }
  3708                           ;spi_master.c: 219: switch(destination)
  3709                           
  3710                           
  3711                           ;spi_master.c: 222: PORTCbits.RC2 = 1;
  3712  059B  1283               	bcf	3,5	;RP0=0, select bank0
  3713  059C  1507               	bsf	7,2	;volatile
  3714                           
  3715                           ;spi_master.c: 223: break;
  3716  059D  2DAF               	goto	l1530
  3717  059E                     l164:	
  3718                           ;spi_master.c: 224: case COM:
  3719                           
  3720                           
  3721                           ;spi_master.c: 225: PORTCbits.RC0 = 1;
  3722  059E  1283               	bcf	3,5	;RP0=0, select bank0
  3723  059F  1407               	bsf	7,0	;volatile
  3724                           
  3725                           ;spi_master.c: 226: break;
  3726  05A0  2DAF               	goto	l1530
  3727  05A1                     l165:	
  3728                           ;spi_master.c: 227: case POW:
  3729                           
  3730                           
  3731                           ;spi_master.c: 228: PORTCbits.RC1 = 1;
  3732  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  3733  05A2  1487               	bsf	7,1	;volatile
  3734                           
  3735                           ;spi_master.c: 230: }
  3736                           
  3737                           ;spi_master.c: 229: break;
  3738  05A3  2DAF               	goto	l1530
  3739  05A4                     l1528:	
  3740  05A4  0875               	movf	spi_master_send@destination,w
  3741                           
  3742                           ; Switch size 1, requested type "space"
  3743                           ; Number of cases is 3, Range of values is 2 to 4
  3744                           ; switch strategies available:
  3745                           ; Name         Instructions Cycles
  3746                           ; simple_byte           10     6 (average)
  3747                           ; direct_byte           20    11 (fixed)
  3748                           ; jumptable            263     9 (fixed)
  3749                           ;	Chosen strategy is simple_byte
  3750  05A5  3A02               	xorlw	2	; case 2
  3751  05A6  1903               	skipnz
  3752  05A7  2D9B               	goto	l162
  3753  05A8  3A01               	xorlw	1	; case 3
  3754  05A9  1903               	skipnz
  3755  05AA  2D9E               	goto	l164
  3756  05AB  3A07               	xorlw	7	; case 4
  3757  05AC  1903               	skipnz
  3758  05AD  2DA1               	goto	l165
  3759  05AE  2DAF               	goto	l1530
  3760  05AF                     l1530:	
  3761                           
  3762                           ;spi_master.c: 233: dummy = SSPBUF;
  3763  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  3764  05B0  0813               	movf	19,w	;volatile
  3765  05B1  00F1               	movwf	??_spi_master_send
  3766  05B2  0871               	movf	??_spi_master_send,w
  3767  05B3  00F2               	movwf	spi_master_send@dummy
  3768  05B4  0008               	return
  3769  05B5                     __end_of_spi_master_send:	
  3770                           
  3771                           	psect	text22
  3772  0695                     __ptext22:	
  3773 ;; *************** function _get_cw_data *****************
  3774 ;; Defined at:
  3775 ;;		line 100 in file "system_protocol.c"
  3776 ;; Parameters:    Size  Location     Type
  3777 ;;		None
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;  buf             2    0[BANK0 ] unsigned int 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  2   20[None  ] int 
  3782 ;; Registers used:
  3783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3789 ;;      Params:         0       0       0       0       0
  3790 ;;      Locals:         0       2       0       0       0
  3791 ;;      Temps:          1       0       0       0       0
  3792 ;;      Totals:         1       2       0       0       0
  3793 ;;Total ram usage:        3 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:    3
  3796 ;; This function calls:
  3797 ;;		_get_adcon
  3798 ;;		_spi_master_receive
  3799 ;;		_spi_master_start
  3800 ;; This function is called by:
  3801 ;;		_main
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           
  3806                           ;psect for function _get_cw_data
  3807  0695                     _get_cw_data:	
  3808                           
  3809                           ;system_protocol.c: 102: uint16_t buf;
  3810                           ;system_protocol.c: 104: spi_master_start();
  3811                           
  3812                           ;incstack = 0
  3813                           ; Regs used in _get_cw_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3814  0695  120A  118A  20F5  120A  118A  	fcall	_spi_master_start
  3815                           
  3816                           ;system_protocol.c: 105: cw.power1[0] = spi_master_receive(POW);
  3817  069A  3004               	movlw	4
  3818  069B  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  3819  06A0  00FD               	movwf	??_get_cw_data
  3820  06A1  087D               	movf	??_get_cw_data,w
  3821  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  3822  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  3823  06A4  00C1               	movwf	_cw
  3824                           
  3825                           ;system_protocol.c: 106: cw.power1[1] = spi_master_receive(POW);
  3826  06A5  3004               	movlw	4
  3827  06A6  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  3828  06AB  00FD               	movwf	??_get_cw_data
  3829  06AC  087D               	movf	??_get_cw_data,w
  3830  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  3831  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  3832  06AF  00C2               	movwf	_cw+1
  3833                           
  3834                           ;system_protocol.c: 107: cw.power2[0] = spi_master_receive(POW);
  3835  06B0  3004               	movlw	4
  3836  06B1  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  3837  06B6  00FD               	movwf	??_get_cw_data
  3838  06B7  087D               	movf	??_get_cw_data,w
  3839  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  3840  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  3841  06BA  00C3               	movwf	_cw+2
  3842                           
  3843                           ;system_protocol.c: 108: cw.power2[1] = spi_master_receive(POW);
  3844  06BB  3004               	movlw	4
  3845  06BC  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  3846  06C1  00FD               	movwf	??_get_cw_data
  3847  06C2  087D               	movf	??_get_cw_data,w
  3848  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  3849  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  3850  06C5  00C4               	movwf	_cw+3
  3851                           
  3852                           ;system_protocol.c: 109: cw.power3[0] = spi_master_receive(POW);
  3853  06C6  3004               	movlw	4
  3854  06C7  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  3855  06CC  00FD               	movwf	??_get_cw_data
  3856  06CD  087D               	movf	??_get_cw_data,w
  3857  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  3858  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  3859  06D0  00C5               	movwf	_cw+4
  3860                           
  3861                           ;system_protocol.c: 110: cw.power3[1] = spi_master_receive(POW);
  3862  06D1  3004               	movlw	4
  3863  06D2  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  3864  06D7  00FD               	movwf	??_get_cw_data
  3865  06D8  087D               	movf	??_get_cw_data,w
  3866  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  3867  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  3868  06DB  00C6               	movwf	_cw+5
  3869                           
  3870                           ;system_protocol.c: 111: cw.power4[0] = spi_master_receive(POW);
  3871  06DC  3004               	movlw	4
  3872  06DD  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  3873  06E2  00FD               	movwf	??_get_cw_data
  3874  06E3  087D               	movf	??_get_cw_data,w
  3875  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  3876  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  3877  06E6  00C7               	movwf	_cw+6
  3878                           
  3879                           ;system_protocol.c: 112: cw.power4[1] = spi_master_receive(POW);
  3880  06E7  3004               	movlw	4
  3881  06E8  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  3882  06ED  00FD               	movwf	??_get_cw_data
  3883  06EE  087D               	movf	??_get_cw_data,w
  3884  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  3885  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  3886  06F1  00C8               	movwf	_cw+7
  3887                           
  3888                           ;system_protocol.c: 113: cw.power5[0] = spi_master_receive(POW);
  3889  06F2  3004               	movlw	4
  3890  06F3  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  3891  06F8  00FD               	movwf	??_get_cw_data
  3892  06F9  087D               	movf	??_get_cw_data,w
  3893  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  3894  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  3895  06FC  00C9               	movwf	_cw+8
  3896                           
  3897                           ;system_protocol.c: 114: cw.power5[1] = spi_master_receive(POW);
  3898  06FD  3004               	movlw	4
  3899  06FE  120A  118A  24F9  120A  118A  	fcall	_spi_master_receive
  3900  0703  00FD               	movwf	??_get_cw_data
  3901  0704  087D               	movf	??_get_cw_data,w
  3902  0705  1283               	bcf	3,5	;RP0=0, select bank0
  3903  0706  1303               	bcf	3,6	;RP1=0, select bank0
  3904  0707  00CA               	movwf	_cw+9
  3905                           
  3906                           ;system_protocol.c: 115: buf = get_adcon();
  3907  0708  120A  118A  2114   	fcall	_get_adcon
  3908  070B  0877               	movf	?_get_adcon+1,w
  3909  070C  1283               	bcf	3,5	;RP0=0, select bank0
  3910  070D  1303               	bcf	3,6	;RP1=0, select bank0
  3911  070E  00CF               	movwf	get_cw_data@buf+1
  3912  070F  0876               	movf	?_get_adcon,w
  3913  0710  00CE               	movwf	get_cw_data@buf
  3914                           
  3915                           ;system_protocol.c: 116: cw.temp[0] = (uint8_t)(buf >> 8);
  3916  0711  084F               	movf	get_cw_data@buf+1,w
  3917  0712  00FD               	movwf	??_get_cw_data
  3918  0713  087D               	movf	??_get_cw_data,w
  3919  0714  00CB               	movwf	_cw+10
  3920                           
  3921                           ;system_protocol.c: 117: cw.temp[1] = (uint8_t)(buf & 0b00000000111111111);
  3922  0715  084E               	movf	get_cw_data@buf,w
  3923  0716  00FD               	movwf	??_get_cw_data
  3924  0717  087D               	movf	??_get_cw_data,w
  3925  0718  00CC               	movwf	_cw+11
  3926                           
  3927                           ;system_protocol.c: 118: cw.obc2 = 1;
  3928  0719  144D               	bsf	_cw+12,0
  3929                           
  3930                           ;system_protocol.c: 119: cw.powmcu = 1;
  3931  071A  14CD               	bsf	_cw+12,1
  3932  071B  0008               	return
  3933  071C                     __end_of_get_cw_data:	
  3934                           
  3935                           	psect	text23
  3936  00F5                     __ptext23:	
  3937 ;; *************** function _spi_master_start *****************
  3938 ;; Defined at:
  3939 ;;		line 36 in file "spi_master.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;		None
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;		None
  3944 ;; Return value:  Size  Location     Type
  3945 ;;		None               void
  3946 ;; Registers used:
  3947 ;;		None
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3953 ;;      Params:         0       0       0       0       0
  3954 ;;      Locals:         0       0       0       0       0
  3955 ;;      Temps:          0       0       0       0       0
  3956 ;;      Totals:         0       0       0       0       0
  3957 ;;Total ram usage:        0 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; This function calls:
  3960 ;;		Nothing
  3961 ;; This function is called by:
  3962 ;;		_get_cw_data
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           
  3967                           ;psect for function _spi_master_start
  3968  00F5                     _spi_master_start:	
  3969                           
  3970                           ;spi_master.c: 39: TRISCbits.TRISC3 = 0;
  3971                           
  3972                           ;incstack = 0
  3973                           ; Regs used in _spi_master_start: []
  3974  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  3975  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  3976  00F7  1187               	bcf	7,3	;volatile
  3977                           
  3978                           ;spi_master.c: 40: TRISCbits.TRISC5 = 0;
  3979  00F8  1287               	bcf	7,5	;volatile
  3980                           
  3981                           ;spi_master.c: 41: TRISCbits.TRISC4 = 1;
  3982  00F9  1607               	bsf	7,4	;volatile
  3983                           
  3984                           ;spi_master.c: 44: TRISCbits.TRISC2 = 0;
  3985  00FA  1107               	bcf	7,2	;volatile
  3986                           
  3987                           ;spi_master.c: 45: TRISCbits.TRISC0 = 0;
  3988  00FB  1007               	bcf	7,0	;volatile
  3989                           
  3990                           ;spi_master.c: 46: TRISCbits.TRISC1 = 0;
  3991  00FC  1087               	bcf	7,1	;volatile
  3992                           
  3993                           ;spi_master.c: 49: SSPCONbits.SSPEN = 0;
  3994  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  3995  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  3996  00FF  1294               	bcf	20,5	;volatile
  3997                           
  3998                           ;spi_master.c: 52: SSPSTATbits.SMP = 0;
  3999  0100  1683               	bsf	3,5	;RP0=1, select bank1
  4000  0101  1303               	bcf	3,6	;RP1=0, select bank1
  4001  0102  1394               	bcf	20,7	;volatile
  4002                           
  4003                           ;spi_master.c: 53: SSPCONbits.CKP = 0;
  4004  0103  1283               	bcf	3,5	;RP0=0, select bank0
  4005  0104  1303               	bcf	3,6	;RP1=0, select bank0
  4006  0105  1214               	bcf	20,4	;volatile
  4007                           
  4008                           ;spi_master.c: 54: SSPSTATbits.CKE = 0;
  4009  0106  1683               	bsf	3,5	;RP0=1, select bank1
  4010  0107  1303               	bcf	3,6	;RP1=0, select bank1
  4011  0108  1314               	bcf	20,6	;volatile
  4012                           
  4013                           ;spi_master.c: 57: SSPCONbits.SSPM3 = 0;
  4014  0109  1283               	bcf	3,5	;RP0=0, select bank0
  4015  010A  1303               	bcf	3,6	;RP1=0, select bank0
  4016  010B  1194               	bcf	20,3	;volatile
  4017                           
  4018                           ;spi_master.c: 58: SSPCONbits.SSPM2 = 0;
  4019  010C  1114               	bcf	20,2	;volatile
  4020                           
  4021                           ;spi_master.c: 59: SSPCONbits.SSPM1 = 0;
  4022  010D  1094               	bcf	20,1	;volatile
  4023                           
  4024                           ;spi_master.c: 60: SSPCONbits.SSPM0 = 0;
  4025  010E  1014               	bcf	20,0	;volatile
  4026                           
  4027                           ;spi_master.c: 63: PORTCbits.RC2 = 1;
  4028  010F  1507               	bsf	7,2	;volatile
  4029                           
  4030                           ;spi_master.c: 64: PORTCbits.RC0 = 1;
  4031  0110  1407               	bsf	7,0	;volatile
  4032                           
  4033                           ;spi_master.c: 65: PORTCbits.RC1 = 1;
  4034  0111  1487               	bsf	7,1	;volatile
  4035                           
  4036                           ;spi_master.c: 68: SSPCONbits.SSPEN = 1;
  4037  0112  1694               	bsf	20,5	;volatile
  4038  0113  0008               	return
  4039  0114                     __end_of_spi_master_start:	
  4040                           
  4041                           	psect	text24
  4042  04F9                     __ptext24:	
  4043 ;; *************** function _spi_master_receive *****************
  4044 ;; Defined at:
  4045 ;;		line 82 in file "spi_master.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;  destination     1    wreg     enum E1099
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  destination     1    4[COMMON] enum E1099
  4050 ;;  timeout_coun    2    2[COMMON] unsigned int 
  4051 ;;  dummy           1    1[COMMON] unsigned char 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  1    wreg      unsigned char 
  4054 ;; Registers used:
  4055 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4061 ;;      Params:         0       0       0       0       0
  4062 ;;      Locals:         4       0       0       0       0
  4063 ;;      Temps:          1       0       0       0       0
  4064 ;;      Totals:         5       0       0       0       0
  4065 ;;Total ram usage:        5 bytes
  4066 ;; Hardware stack levels used:    1
  4067 ;; This function calls:
  4068 ;;		Nothing
  4069 ;; This function is called by:
  4070 ;;		_get_cw_data
  4071 ;;		_receive_payload
  4072 ;;		_packet_receive_master
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           
  4077                           ;psect for function _spi_master_receive
  4078  04F9                     _spi_master_receive:	
  4079                           
  4080                           ;incstack = 0
  4081                           ; Regs used in _spi_master_receive: [wreg-fsr0h+status,2+status,0]
  4082                           ;spi_master_receive@destination stored from wreg
  4083  04F9  00F4               	movwf	spi_master_receive@destination
  4084                           
  4085                           ;spi_master.c: 84: uint8_t dummy;
  4086                           ;spi_master.c: 85: uint16_t timeout_counter = 1000;
  4087  04FA  30E8               	movlw	232
  4088  04FB  00F2               	movwf	spi_master_receive@timeout_counter
  4089  04FC  3003               	movlw	3
  4090  04FD  00F3               	movwf	spi_master_receive@timeout_counter+1
  4091                           
  4092                           ;spi_master.c: 88: dummy = SSPBUF;
  4093  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  4094  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  4095  0500  0813               	movf	19,w	;volatile
  4096  0501  00F0               	movwf	??_spi_master_receive
  4097  0502  0870               	movf	??_spi_master_receive,w
  4098  0503  00F1               	movwf	spi_master_receive@dummy
  4099                           
  4100                           ;spi_master.c: 91: switch(destination)
  4101  0504  2D0E               	goto	l1646
  4102  0505                     l108:	
  4103                           ;spi_master.c: 94: while(PORTDbits.RD2 == 0){;}
  4104                           
  4105                           ;spi_master.c: 92: {
  4106                           ;spi_master.c: 93: case OBC2:
  4107                           
  4108  0505  1908               	btfsc	8,2	;volatile
  4109  0506  2D20               	goto	l1650
  4110  0507  2D05               	goto	l108
  4111  0508                     l113:	
  4112                           ;spi_master.c: 97: while(PORTDbits.RD0 == 0){;}
  4113                           
  4114                           ;spi_master.c: 96: case COM:
  4115                           
  4116                           ;spi_master.c: 95: break;
  4117                           
  4118  0508  1808               	btfsc	8,0	;volatile
  4119  0509  2D20               	goto	l1650
  4120  050A  2D08               	goto	l113
  4121  050B                     l117:	
  4122                           ;spi_master.c: 100: while(PORTDbits.RD1 == 0){;}
  4123                           
  4124                           ;spi_master.c: 99: case POW:
  4125                           
  4126                           ;spi_master.c: 98: break;
  4127                           
  4128  050B  1888               	btfsc	8,1	;volatile
  4129  050C  2D20               	goto	l1650
  4130  050D  2D0B               	goto	l117
  4131  050E                     l1646:	
  4132                           ;spi_master.c: 102: }
  4133                           
  4134                           ;spi_master.c: 101: break;
  4135                           
  4136  050E  0874               	movf	spi_master_receive@destination,w
  4137                           
  4138                           ; Switch size 1, requested type "space"
  4139                           ; Number of cases is 3, Range of values is 2 to 4
  4140                           ; switch strategies available:
  4141                           ; Name         Instructions Cycles
  4142                           ; simple_byte           10     6 (average)
  4143                           ; direct_byte           20    11 (fixed)
  4144                           ; jumptable            263     9 (fixed)
  4145                           ;	Chosen strategy is simple_byte
  4146  050F  3A02               	xorlw	2	; case 2
  4147  0510  1903               	skipnz
  4148  0511  2D05               	goto	l108
  4149  0512  3A01               	xorlw	1	; case 3
  4150  0513  1903               	skipnz
  4151  0514  2D08               	goto	l113
  4152  0515  3A07               	xorlw	7	; case 4
  4153  0516  1903               	skipnz
  4154  0517  2D0B               	goto	l117
  4155  0518  2D20               	goto	l1650
  4156                           
  4157                           ;spi_master.c: 105: switch(destination)
  4158  0519  2D20               	goto	l1650
  4159  051A                     l121:	
  4160                           ;spi_master.c: 106: {
  4161                           ;spi_master.c: 107: case OBC2:
  4162                           
  4163                           
  4164                           ;spi_master.c: 108: PORTCbits.RC2 = 0;
  4165  051A  1107               	bcf	7,2	;volatile
  4166                           
  4167                           ;spi_master.c: 109: break;
  4168  051B  2D2B               	goto	l1652
  4169  051C                     l123:	
  4170                           ;spi_master.c: 110: case COM:
  4171                           
  4172                           
  4173                           ;spi_master.c: 111: PORTCbits.RC0 = 0;
  4174  051C  1007               	bcf	7,0	;volatile
  4175                           
  4176                           ;spi_master.c: 112: break;
  4177  051D  2D2B               	goto	l1652
  4178  051E                     l124:	
  4179                           ;spi_master.c: 113: case POW:
  4180                           
  4181                           
  4182                           ;spi_master.c: 114: PORTCbits.RC1 = 0;
  4183  051E  1087               	bcf	7,1	;volatile
  4184                           
  4185                           ;spi_master.c: 116: }
  4186                           
  4187                           ;spi_master.c: 115: break;
  4188  051F  2D2B               	goto	l1652
  4189  0520                     l1650:	
  4190  0520  0874               	movf	spi_master_receive@destination,w
  4191                           
  4192                           ; Switch size 1, requested type "space"
  4193                           ; Number of cases is 3, Range of values is 2 to 4
  4194                           ; switch strategies available:
  4195                           ; Name         Instructions Cycles
  4196                           ; simple_byte           10     6 (average)
  4197                           ; direct_byte           20    11 (fixed)
  4198                           ; jumptable            263     9 (fixed)
  4199                           ;	Chosen strategy is simple_byte
  4200  0521  3A02               	xorlw	2	; case 2
  4201  0522  1903               	skipnz
  4202  0523  2D1A               	goto	l121
  4203  0524  3A01               	xorlw	1	; case 3
  4204  0525  1903               	skipnz
  4205  0526  2D1C               	goto	l123
  4206  0527  3A07               	xorlw	7	; case 4
  4207  0528  1903               	skipnz
  4208  0529  2D1E               	goto	l124
  4209  052A  2D2B               	goto	l1652
  4210  052B                     l1652:	
  4211                           
  4212                           ;spi_master.c: 120: SSPBUF = 0x00;
  4213  052B  0193               	clrf	19	;volatile
  4214  052C                     l1660:	
  4215                           ;spi_master.c: 123: while(SSPSTATbits.BF == 0)
  4216                           
  4217  052C  1683               	bsf	3,5	;RP0=1, select bank1
  4218  052D  1303               	bcf	3,6	;RP1=0, select bank1
  4219  052E  1814               	btfsc	20,0	;volatile
  4220  052F  2D47               	goto	l1664
  4221                           
  4222                           ;spi_master.c: 124: {
  4223                           ;spi_master.c: 126: if(timeout_counter == 0)
  4224  0530  0872               	movf	spi_master_receive@timeout_counter,w
  4225  0531  0473               	iorwf	spi_master_receive@timeout_counter+1,w
  4226  0532  1903               	btfsc	3,2
  4227  0533  0008               	return
  4228                           
  4229                           ;spi_master.c: 129: }
  4230                           ;spi_master.c: 132: _delay((unsigned long)((1)*(20000000/4000000.0)));
  4231                           
  4232                           ;spi_master.c: 127: {
  4233                           ;spi_master.c: 128: return;
  4234  0534  2D35               	nop2	;2 cycle nop
  4235  0535  2D36               	nop2	;2 cycle nop
  4236  0536  0000               	nop
  4237                           
  4238                           ;spi_master.c: 133: timeout_counter--;
  4239  0537  3001               	movlw	1
  4240  0538  02F2               	subwf	spi_master_receive@timeout_counter,f
  4241  0539  3000               	movlw	0
  4242  053A  1C03               	skipc
  4243  053B  03F3               	decf	spi_master_receive@timeout_counter+1,f
  4244  053C  02F3               	subwf	spi_master_receive@timeout_counter+1,f
  4245  053D  2D2C               	goto	l1660
  4246  053E                     l131:	
  4247                           ;spi_master.c: 138: {
  4248                           ;spi_master.c: 139: case OBC2:
  4249                           
  4250                           ;spi_master.c: 134: }
  4251                           ;spi_master.c: 137: switch(destination)
  4252                           
  4253                           
  4254                           ;spi_master.c: 140: PORTCbits.RC2 = 1;
  4255  053E  1283               	bcf	3,5	;RP0=0, select bank0
  4256  053F  1507               	bsf	7,2	;volatile
  4257                           
  4258                           ;spi_master.c: 141: break;
  4259  0540  2D52               	goto	l1666
  4260  0541                     l133:	
  4261                           ;spi_master.c: 142: case COM:
  4262                           
  4263                           
  4264                           ;spi_master.c: 143: PORTCbits.RC0 = 1;
  4265  0541  1283               	bcf	3,5	;RP0=0, select bank0
  4266  0542  1407               	bsf	7,0	;volatile
  4267                           
  4268                           ;spi_master.c: 144: break;
  4269  0543  2D52               	goto	l1666
  4270  0544                     l134:	
  4271                           ;spi_master.c: 145: case POW:
  4272                           
  4273                           
  4274                           ;spi_master.c: 146: PORTCbits.RC1 = 1;
  4275  0544  1283               	bcf	3,5	;RP0=0, select bank0
  4276  0545  1487               	bsf	7,1	;volatile
  4277                           
  4278                           ;spi_master.c: 148: }
  4279                           
  4280                           ;spi_master.c: 147: break;
  4281  0546  2D52               	goto	l1666
  4282  0547                     l1664:	
  4283  0547  0874               	movf	spi_master_receive@destination,w
  4284                           
  4285                           ; Switch size 1, requested type "space"
  4286                           ; Number of cases is 3, Range of values is 2 to 4
  4287                           ; switch strategies available:
  4288                           ; Name         Instructions Cycles
  4289                           ; simple_byte           10     6 (average)
  4290                           ; direct_byte           20    11 (fixed)
  4291                           ; jumptable            263     9 (fixed)
  4292                           ;	Chosen strategy is simple_byte
  4293  0548  3A02               	xorlw	2	; case 2
  4294  0549  1903               	skipnz
  4295  054A  2D3E               	goto	l131
  4296  054B  3A01               	xorlw	1	; case 3
  4297  054C  1903               	skipnz
  4298  054D  2D41               	goto	l133
  4299  054E  3A07               	xorlw	7	; case 4
  4300  054F  1903               	skipnz
  4301  0550  2D44               	goto	l134
  4302  0551  2D52               	goto	l1666
  4303  0552                     l1666:	
  4304                           
  4305                           ;spi_master.c: 150: return SSPBUF;
  4306  0552  1283               	bcf	3,5	;RP0=0, select bank0
  4307  0553  0813               	movf	19,w	;volatile
  4308  0554  0008               	return
  4309  0555                     __end_of_spi_master_receive:	
  4310                           
  4311                           	psect	text25
  4312  0114                     __ptext25:	
  4313 ;; *************** function _get_adcon *****************
  4314 ;; Defined at:
  4315 ;;		line 90 in file "AD_value.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;		None
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;  voltage_valu    3    0        unsigned char 
  4320 ;;  ad_value        2   11[COMMON] unsigned int 
  4321 ;;  my_adres        2    9[COMMON] struct .
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  2    6[COMMON] unsigned int 
  4324 ;; Registers used:
  4325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4331 ;;      Params:         2       0       0       0       0
  4332 ;;      Locals:         4       0       0       0       0
  4333 ;;      Temps:          1       0       0       0       0
  4334 ;;      Totals:         7       0       0       0       0
  4335 ;;Total ram usage:        7 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; Hardware stack levels required when called:    2
  4338 ;; This function calls:
  4339 ;;		_bit_shift
  4340 ;; This function is called by:
  4341 ;;		_get_cw_data
  4342 ;;		_get_pt
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           
  4347                           ;psect for function _get_adcon
  4348  0114                     _get_adcon:	
  4349                           
  4350                           ;AD_value.c: 93: uint16_t ad_value = 0b0000000000;
  4351                           
  4352                           ;incstack = 0
  4353                           ; Regs used in _get_adcon: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4354  0114  01FB               	clrf	get_adcon@ad_value
  4355  0115  01FC               	clrf	get_adcon@ad_value+1
  4356                           
  4357                           ;AD_value.c: 94: double voltage_value;
  4358                           ;AD_value.c: 95: adres_t my_adres;
  4359                           ;AD_value.c: 98: ADCON0 = 0b10000001;
  4360  0116  3081               	movlw	129
  4361  0117  1283               	bcf	3,5	;RP0=0, select bank0
  4362  0118  1303               	bcf	3,6	;RP1=0, select bank0
  4363  0119  009F               	movwf	31	;volatile
  4364                           
  4365                           ;AD_value.c: 99: ADCON0bits.GO_DONE = 1;
  4366  011A  151F               	bsf	31,2	;volatile
  4367  011B                     l83:	
  4368                           ;AD_value.c: 102: while(ADCON0bits.GO_DONE){;}
  4369                           
  4370  011B  191F               	btfsc	31,2	;volatile
  4371  011C  291B               	goto	l83
  4372                           
  4373                           ;AD_value.c: 105: my_adres.my_adres_h = ADRESH;
  4374  011D  081E               	movf	30,w	;volatile
  4375  011E  00F8               	movwf	??_get_adcon
  4376  011F  0878               	movf	??_get_adcon,w
  4377  0120  00F9               	movwf	get_adcon@my_adres
  4378                           
  4379                           ;AD_value.c: 106: my_adres.my_adres_l = ADRESL;
  4380  0121  1683               	bsf	3,5	;RP0=1, select bank1
  4381  0122  1303               	bcf	3,6	;RP1=0, select bank1
  4382  0123  081E               	movf	30,w	;volatile
  4383  0124  00F8               	movwf	??_get_adcon
  4384  0125  0878               	movf	??_get_adcon,w
  4385  0126  00FA               	movwf	get_adcon@my_adres+1
  4386                           
  4387                           ;AD_value.c: 107: bit_shift(&ad_value, &my_adres);
  4388  0127  3079               	movlw	(low (get_adcon@my_adres| 0))& (0+255)
  4389  0128  00F8               	movwf	??_get_adcon
  4390  0129  0878               	movf	??_get_adcon,w
  4391  012A  00F0               	movwf	bit_shift@p_adres
  4392  012B  307B               	movlw	(low (get_adcon@ad_value| 0))& (0+255)
  4393  012C  120A  118A  22FE   	fcall	_bit_shift
  4394                           
  4395                           ;AD_value.c: 109: return ad_value;
  4396  012F  087C               	movf	get_adcon@ad_value+1,w
  4397  0130  00F7               	movwf	?_get_adcon+1
  4398  0131  087B               	movf	get_adcon@ad_value,w
  4399  0132  00F6               	movwf	?_get_adcon
  4400  0133  0008               	return
  4401  0134                     __end_of_get_adcon:	
  4402                           
  4403                           	psect	text26
  4404  02FE                     __ptext26:	
  4405 ;; *************** function _bit_shift *****************
  4406 ;; Defined at:
  4407 ;;		line 70 in file "AD_value.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;  p_ad_value      1    wreg     PTR unsigned int 
  4410 ;;		 -> get_adcon@ad_value(2), 
  4411 ;;  p_adres         1    0[COMMON] PTR struct .
  4412 ;;		 -> get_adcon@my_adres(2), 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;  p_ad_value      1    5[COMMON] PTR unsigned int 
  4415 ;;		 -> get_adcon@ad_value(2), 
  4416 ;; Return value:  Size  Location     Type
  4417 ;;		None               void
  4418 ;; Registers used:
  4419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4425 ;;      Params:         1       0       0       0       0
  4426 ;;      Locals:         1       0       0       0       0
  4427 ;;      Temps:          4       0       0       0       0
  4428 ;;      Totals:         6       0       0       0       0
  4429 ;;Total ram usage:        6 bytes
  4430 ;; Hardware stack levels used:    2
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		_get_adcon
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           
  4439                           ;psect for function _bit_shift
  4440  02FE                     _bit_shift:	
  4441                           
  4442                           ;incstack = 0
  4443                           ; Regs used in _bit_shift: [wreg-fsr0h+status,2+status,0+pclath]
  4444                           ;bit_shift@p_ad_value stored from wreg
  4445  02FE  00F5               	movwf	bit_shift@p_ad_value
  4446                           
  4447                           ;AD_value.c: 72: const uint8_t bit_mask_for_l = 0b00000011;
  4448                           ;AD_value.c: 74: *p_ad_value = (uint16_t)(p_adres->my_adres_h);
  4449  02FF  0870               	movf	bit_shift@p_adres,w
  4450  0300  0084               	movwf	4
  4451  0301  0800               	movf	0,w
  4452  0302  00F1               	movwf	??_bit_shift
  4453  0303  01F2               	clrf	??_bit_shift+1
  4454  0304  0875               	movf	bit_shift@p_ad_value,w
  4455  0305  0084               	movwf	4
  4456  0306  0871               	movf	??_bit_shift,w
  4457  0307  0080               	movwf	0
  4458  0308  0A84               	incf	4,f
  4459  0309  0872               	movf	??_bit_shift+1,w
  4460  030A  0080               	movwf	0
  4461                           
  4462                           ;AD_value.c: 75: *p_ad_value <<= 2;
  4463  030B  0875               	movf	bit_shift@p_ad_value,w
  4464  030C  0084               	movwf	4
  4465  030D  3002               	movlw	2
  4466  030E                     u965:	
  4467  030E  1003               	clrc
  4468  030F  0D80               	rlf	0,f
  4469  0310  0A84               	incf	4,f
  4470  0311  0D80               	rlf	0,f
  4471  0312  0384               	decf	4,f
  4472  0313  3EFF               	addlw	-1
  4473  0314  1D03               	skipz
  4474  0315  2B0E               	goto	u965
  4475                           
  4476                           ;AD_value.c: 76: *p_ad_value |= (bit_mask_for_l & (p_adres->my_adres_l >> 6));
  4477  0316  3003               	movlw	low (bit_shift@bit_mask_for_l-__stringbase)
  4478  0317  0084               	movwf	4
  4479  0318  120A  118A  200D  120A  118A  	fcall	stringdir
  4480  031D  00F1               	movwf	??_bit_shift
  4481  031E  0A70               	incf	bit_shift@p_adres,w
  4482  031F  0084               	movwf	4
  4483  0320  0800               	movf	0,w
  4484  0321  00F2               	movwf	??_bit_shift+1
  4485  0322  3006               	movlw	6
  4486  0323                     u975:	
  4487  0323  1003               	clrc
  4488  0324  0CF2               	rrf	??_bit_shift+1,f
  4489  0325  3EFF               	addlw	-1
  4490  0326  1D03               	skipz
  4491  0327  2B23               	goto	u975
  4492  0328  0872               	movf	??_bit_shift+1,w
  4493  0329  0571               	andwf	??_bit_shift,w
  4494  032A  00F3               	movwf	??_bit_shift+2
  4495  032B  01F4               	clrf	??_bit_shift+3
  4496  032C  0875               	movf	bit_shift@p_ad_value,w
  4497  032D  0084               	movwf	4
  4498  032E  0873               	movf	??_bit_shift+2,w
  4499  032F  0480               	iorwf	0,f
  4500  0330  0A84               	incf	4,f
  4501  0331  0874               	movf	??_bit_shift+3,w
  4502  0332  0480               	iorwf	0,f
  4503  0333  0008               	return
  4504  0334                     __end_of_bit_shift:	
  4505                           
  4506                           	psect	text27
  4507  0615                     __ptext27:	
  4508 ;; *************** function _cw_data_set *****************
  4509 ;; Defined at:
  4510 ;;		line 186 in file "system_protocol.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;  p_cw_data       1    wreg     PTR struct .
  4513 ;;		 -> cw(13), 
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;  p_cw_data       1    5[COMMON] PTR struct .
  4516 ;;		 -> cw(13), 
  4517 ;; Return value:  Size  Location     Type
  4518 ;;		None               void
  4519 ;; Registers used:
  4520 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4526 ;;      Params:         0       0       0       0       0
  4527 ;;      Locals:         1       0       0       0       0
  4528 ;;      Temps:          1       0       0       0       0
  4529 ;;      Totals:         2       0       0       0       0
  4530 ;;Total ram usage:        2 bytes
  4531 ;; Hardware stack levels used:    1
  4532 ;; Hardware stack levels required when called:    2
  4533 ;; This function calls:
  4534 ;;		_uint8_data_set
  4535 ;; This function is called by:
  4536 ;;		_main
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           
  4541                           ;psect for function _cw_data_set
  4542  0615                     _cw_data_set:	
  4543                           
  4544                           ;incstack = 0
  4545                           ; Regs used in _cw_data_set: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4546                           ;cw_data_set@p_cw_data stored from wreg
  4547  0615  00F5               	movwf	cw_data_set@p_cw_data
  4548                           
  4549                           ;system_protocol.c: 191: uint8_data_set(&(p_cw_data->power1), 2);
  4550  0616  0875               	movf	cw_data_set@p_cw_data,w
  4551  0617  00F0               	movwf	uint8_data_set@p_data
  4552  0618  3000               	movlw	0
  4553  0619  00F1               	movwf	uint8_data_set@p_data+1
  4554  061A  3002               	movlw	2
  4555  061B  00F4               	movwf	??_cw_data_set
  4556  061C  0874               	movf	??_cw_data_set,w
  4557  061D  00F2               	movwf	uint8_data_set@data_len
  4558  061E  120A  118A  217D  120A  118A  	fcall	_uint8_data_set
  4559                           
  4560                           ;system_protocol.c: 192: uint8_data_set(&(p_cw_data->power2), 2);
  4561  0623  0875               	movf	cw_data_set@p_cw_data,w
  4562  0624  3E02               	addlw	2
  4563  0625  00F0               	movwf	uint8_data_set@p_data
  4564  0626  3000               	movlw	0
  4565  0627  00F1               	movwf	uint8_data_set@p_data+1
  4566  0628  3002               	movlw	2
  4567  0629  00F4               	movwf	??_cw_data_set
  4568  062A  0874               	movf	??_cw_data_set,w
  4569  062B  00F2               	movwf	uint8_data_set@data_len
  4570  062C  120A  118A  217D  120A  118A  	fcall	_uint8_data_set
  4571                           
  4572                           ;system_protocol.c: 193: uint8_data_set(&(p_cw_data->power3), 2);
  4573  0631  0875               	movf	cw_data_set@p_cw_data,w
  4574  0632  3E04               	addlw	4
  4575  0633  00F0               	movwf	uint8_data_set@p_data
  4576  0634  3000               	movlw	0
  4577  0635  00F1               	movwf	uint8_data_set@p_data+1
  4578  0636  3002               	movlw	2
  4579  0637  00F4               	movwf	??_cw_data_set
  4580  0638  0874               	movf	??_cw_data_set,w
  4581  0639  00F2               	movwf	uint8_data_set@data_len
  4582  063A  120A  118A  217D  120A  118A  	fcall	_uint8_data_set
  4583                           
  4584                           ;system_protocol.c: 194: uint8_data_set(&(p_cw_data->power4), 2);
  4585  063F  0875               	movf	cw_data_set@p_cw_data,w
  4586  0640  3E06               	addlw	6
  4587  0641  00F0               	movwf	uint8_data_set@p_data
  4588  0642  3000               	movlw	0
  4589  0643  00F1               	movwf	uint8_data_set@p_data+1
  4590  0644  3002               	movlw	2
  4591  0645  00F4               	movwf	??_cw_data_set
  4592  0646  0874               	movf	??_cw_data_set,w
  4593  0647  00F2               	movwf	uint8_data_set@data_len
  4594  0648  120A  118A  217D  120A  118A  	fcall	_uint8_data_set
  4595                           
  4596                           ;system_protocol.c: 195: uint8_data_set(&(p_cw_data->power5), 2);
  4597  064D  0875               	movf	cw_data_set@p_cw_data,w
  4598  064E  3E08               	addlw	8
  4599  064F  00F0               	movwf	uint8_data_set@p_data
  4600  0650  3000               	movlw	0
  4601  0651  00F1               	movwf	uint8_data_set@p_data+1
  4602  0652  3002               	movlw	2
  4603  0653  00F4               	movwf	??_cw_data_set
  4604  0654  0874               	movf	??_cw_data_set,w
  4605  0655  00F2               	movwf	uint8_data_set@data_len
  4606  0656  120A  118A  217D  120A  118A  	fcall	_uint8_data_set
  4607                           
  4608                           ;system_protocol.c: 198: uint8_data_set(&(p_cw_data->temp), 2);
  4609  065B  0875               	movf	cw_data_set@p_cw_data,w
  4610  065C  3E0A               	addlw	10
  4611  065D  00F0               	movwf	uint8_data_set@p_data
  4612  065E  3000               	movlw	0
  4613  065F  00F1               	movwf	uint8_data_set@p_data+1
  4614  0660  3002               	movlw	2
  4615  0661  00F4               	movwf	??_cw_data_set
  4616  0662  0874               	movf	??_cw_data_set,w
  4617  0663  00F2               	movwf	uint8_data_set@data_len
  4618  0664  120A  118A  217D  120A  118A  	fcall	_uint8_data_set
  4619                           
  4620                           ;system_protocol.c: 201: packet.payload[index_pos++] = 1;
  4621  0669  1283               	bcf	3,5	;RP0=0, select bank0
  4622  066A  1303               	bcf	3,6	;RP1=0, select bank0
  4623  066B  0820               	movf	_index_pos,w
  4624  066C  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  4625  066D  0084               	movwf	4
  4626  066E  1383               	bcf	3,7	;select IRP bank0
  4627  066F  0180               	clrf	0
  4628  0670  0A80               	incf	0,f
  4629  0671  3001               	movlw	1
  4630  0672  00F4               	movwf	??_cw_data_set
  4631  0673  0874               	movf	??_cw_data_set,w
  4632  0674  07A0               	addwf	_index_pos,f
  4633                           
  4634                           ;system_protocol.c: 202: packet.payload[index_pos++] = cw.obc2;
  4635  0675  0820               	movf	_index_pos,w
  4636  0676  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  4637  0677  0084               	movwf	4
  4638  0678  3000               	movlw	0
  4639  0679  184D               	btfsc	_cw+12,0
  4640  067A  3001               	movlw	1
  4641  067B  0080               	movwf	0
  4642  067C  3001               	movlw	1
  4643  067D  00F4               	movwf	??_cw_data_set
  4644  067E  0874               	movf	??_cw_data_set,w
  4645  067F  07A0               	addwf	_index_pos,f
  4646                           
  4647                           ;system_protocol.c: 205: packet.payload[index_pos++] = 1;
  4648  0680  0820               	movf	_index_pos,w
  4649  0681  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  4650  0682  0084               	movwf	4
  4651  0683  0180               	clrf	0
  4652  0684  0A80               	incf	0,f
  4653  0685  3001               	movlw	1
  4654  0686  00F4               	movwf	??_cw_data_set
  4655  0687  0874               	movf	??_cw_data_set,w
  4656  0688  07A0               	addwf	_index_pos,f
  4657                           
  4658                           ;system_protocol.c: 206: packet.payload[index_pos++] = cw.powmcu;
  4659  0689  0820               	movf	_index_pos,w
  4660  068A  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  4661  068B  0084               	movwf	4
  4662  068C  3000               	movlw	0
  4663  068D  18CD               	btfsc	_cw+12,1
  4664  068E  3001               	movlw	1
  4665  068F  0080               	movwf	0
  4666  0690  3001               	movlw	1
  4667  0691  00F4               	movwf	??_cw_data_set
  4668  0692  0874               	movf	??_cw_data_set,w
  4669  0693  07A0               	addwf	_index_pos,f
  4670  0694  0008               	return
  4671  0695                     __end_of_cw_data_set:	
  4672                           
  4673                           	psect	text28
  4674  017D                     __ptext28:	
  4675 ;; *************** function _uint8_data_set *****************
  4676 ;; Defined at:
  4677 ;;		line 266 in file "system_protocol.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;  p_data          2    0[COMMON] PTR unsigned char 
  4680 ;;		 -> main@data3(3), main@data1(1), main@data5(3), main@data2(2), 
  4681 ;;		 -> main@data4(3), main@data0(3), cw(13), 
  4682 ;;  data_len        1    2[COMMON] unsigned char 
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;		None
  4685 ;; Return value:  Size  Location     Type
  4686 ;;		None               void
  4687 ;; Registers used:
  4688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4694 ;;      Params:         3       0       0       0       0
  4695 ;;      Locals:         0       0       0       0       0
  4696 ;;      Temps:          1       0       0       0       0
  4697 ;;      Totals:         4       0       0       0       0
  4698 ;;Total ram usage:        4 bytes
  4699 ;; Hardware stack levels used:    2
  4700 ;; This function calls:
  4701 ;;		Nothing
  4702 ;; This function is called by:
  4703 ;;		_sent_data_set
  4704 ;;		_cw_data_set
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708                           
  4709                           ;psect for function _uint8_data_set
  4710  017D                     _uint8_data_set:	
  4711  017D                     l1684:	
  4712                           ;system_protocol.c: 268: while(data_len)
  4713                           
  4714                           ;incstack = 0
  4715                           ; Regs used in _uint8_data_set: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  4716                           
  4717  017D  0872               	movf	uint8_data_set@data_len,w
  4718  017E  1903               	btfsc	3,2
  4719  017F  0008               	return
  4720                           
  4721                           ;system_protocol.c: 269: {
  4722                           ;system_protocol.c: 270: packet.payload[index_pos++] = 1;
  4723  0180  1283               	bcf	3,5	;RP0=0, select bank0
  4724  0181  1303               	bcf	3,6	;RP1=0, select bank0
  4725  0182  0820               	movf	_index_pos,w
  4726  0183  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  4727  0184  0084               	movwf	4
  4728  0185  1383               	bcf	3,7	;select IRP bank0
  4729  0186  0180               	clrf	0
  4730  0187  0A80               	incf	0,f
  4731  0188  3001               	movlw	1
  4732  0189  00F3               	movwf	??_uint8_data_set
  4733  018A  0873               	movf	??_uint8_data_set,w
  4734  018B  07A0               	addwf	_index_pos,f
  4735                           
  4736                           ;system_protocol.c: 271: packet.payload[index_pos++] = *p_data++;
  4737  018C  0871               	movf	uint8_data_set@p_data+1,w
  4738  018D  00FF               	movwf	127
  4739  018E  0870               	movf	uint8_data_set@p_data,w
  4740  018F  0084               	movwf	4
  4741  0190  120A  118A  2003  120A  118A  	fcall	stringtab
  4742  0195  00F3               	movwf	??_uint8_data_set
  4743  0196  0820               	movf	_index_pos,w
  4744  0197  3E22               	addlw	(low ((_packet| 0+1)))& (0+255)
  4745  0198  0084               	movwf	4
  4746  0199  0873               	movf	??_uint8_data_set,w
  4747  019A  1383               	bcf	3,7	;select IRP bank0
  4748  019B  0080               	movwf	0
  4749  019C  3001               	movlw	1
  4750  019D  07F0               	addwf	uint8_data_set@p_data,f
  4751  019E  1803               	skipnc
  4752  019F  0AF1               	incf	uint8_data_set@p_data+1,f
  4753  01A0  3001               	movlw	1
  4754  01A1  00F3               	movwf	??_uint8_data_set
  4755  01A2  0873               	movf	??_uint8_data_set,w
  4756  01A3  07A0               	addwf	_index_pos,f
  4757                           
  4758                           ;system_protocol.c: 272: data_len--;
  4759  01A4  3001               	movlw	1
  4760  01A5  02F2               	subwf	uint8_data_set@data_len,f
  4761  01A6  297D               	goto	l1684
  4762  01A7                     __end_of_uint8_data_set:	
  4763  007E                     btemp	set	126	;btemp
  4764  007E                     wtemp	set	126
  4765  007E                     wtemp0	set	126
  4766  0080                     wtemp1	set	128
  4767  0082                     wtemp2	set	130
  4768  0084                     wtemp3	set	132
  4769  0086                     wtemp4	set	134
  4770  0088                     wtemp5	set	136
  4771  007F                     wtemp6	set	127
  4772  007E                     ttemp	set	126
  4773  007E                     ttemp0	set	126
  4774  0081                     ttemp1	set	129
  4775  0084                     ttemp2	set	132
  4776  0087                     ttemp3	set	135
  4777  007F                     ttemp4	set	127
  4778  007E                     ltemp	set	126
  4779  007E                     ltemp0	set	126
  4780  0082                     ltemp1	set	130
  4781  0086                     ltemp2	set	134
  4782  0080                     ltemp3	set	128


Data Sizes:
    Strings     17
    Constant    18
    Data        0
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      79
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    process_1@p_flag	PTR unsigned char  size(1) Largest target is 1
		 -> uint8_to_string@flag(BANK0[1]), 

    process_1@p_str_buf	PTR unsigned char  size(1) Largest target is 4
		 -> show_packet@buf(BANK0[4]), 

    process_10@p_flag	PTR unsigned char  size(1) Largest target is 1
		 -> uint8_to_string@flag(BANK0[1]), 

    process_10@p_str_buf	PTR unsigned char  size(1) Largest target is 4
		 -> show_packet@buf(BANK0[4]), 

    process_100@p_flag	PTR unsigned char  size(1) Largest target is 1
		 -> uint8_to_string@flag(BANK0[1]), 

    process_100@p_str_buf	PTR unsigned char  size(1) Largest target is 4
		 -> show_packet@buf(BANK0[4]), 

    uint8_to_string@p_str_buf	PTR unsigned char  size(1) Largest target is 4
		 -> show_packet@buf(BANK0[4]), 

    packet_send_master@p_packet	PTR struct . size(1) Largest target is 32
		 -> packet(BANK0[32]), 

    send_payload@p_payload	PTR unsigned char  size(1) Largest target is 32
		 -> packet(BANK0[32]), 

    double_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 5
		 -> double_data_set@buf(BANK0[5]), 

    double_to_byte_array@p_data	PTR  size(1) Largest target is 3
		 -> main@data3(CODE[3]), main@data1(CODE[1]), main@data5(CODE[3]), main@data2(CODE[2]), 
		 -> main@data4(CODE[3]), main@data0(CODE[3]), 

    uint16_to_byte_array@p_data	PTR unsigned int  size(1) Largest target is 3
		 -> main@data3(CODE[3]), main@data1(CODE[1]), main@data5(CODE[3]), main@data2(CODE[2]), 
		 -> main@data4(CODE[3]), main@data0(CODE[3]), 

    uint16_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 3
		 -> uint16_data_set@buf(COMMON[3]), 

    double_data_set@p_data	PTR  size(1) Largest target is 3
		 -> main@data3(CODE[3]), main@data1(CODE[1]), main@data5(CODE[3]), main@data2(CODE[2]), 
		 -> main@data4(CODE[3]), main@data0(CODE[3]), 

    uint16_data_set@p_data	PTR unsigned int  size(1) Largest target is 3
		 -> main@data3(CODE[3]), main@data1(CODE[1]), main@data5(CODE[3]), main@data2(CODE[2]), 
		 -> main@data4(CODE[3]), main@data0(CODE[3]), 

    uint8_data_set@p_data	PTR unsigned char  size(2) Largest target is 13
		 -> main@data3(CODE[3]), main@data1(CODE[1]), main@data5(CODE[3]), main@data2(CODE[2]), 
		 -> main@data4(CODE[3]), main@data0(CODE[3]), cw(BANK0[13]), 

    cw_data_set@p_cw_data	PTR struct . size(1) Largest target is 13
		 -> cw(BANK0[13]), 

    sent_data_set@p_data	PTR void  size(1) Largest target is 3
		 -> main@data3(CODE[3]), main@data1(CODE[1]), main@data5(CODE[3]), main@data2(CODE[2]), 
		 -> main@data4(CODE[3]), main@data0(CODE[3]), 

    put_string@str	PTR unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[3]), show_packet@buf(BANK0[4]), STR_1(CODE[17]), 

    bit_shift@p_adres	PTR struct . size(1) Largest target is 2
		 -> get_adcon@my_adres(COMMON[2]), 

    bit_shift@p_ad_value	PTR unsigned int  size(1) Largest target is 2
		 -> get_adcon@ad_value(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_get_cw_data
    _main->_sent_data_set
    _uint8_to_string->_process_1
    _process_10->_process_1
    _process_1->___awmod
    _put_string->_putch
    _sent_data_set->_uint16_data_set
    _uint16_data_set->_uint16_to_byte_array
    _double_data_set->_double_to_byte_array
    _send_data_master->_packet_send_master
    _packet_send_master->_send_payload
    _send_payload->_spi_master_send
    _get_cw_data->_get_adcon
    _get_adcon->_bit_shift
    _cw_data_set->_uint8_data_set

Critical Paths under _main in BANK0

    _main->_show_packet
    _show_packet->_uint8_to_string
    _uint8_to_string->_process_100
    _process_100->_process_10
    _sent_data_set->_double_data_set
    _send_data_master->_packet_send_master

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   11455
                                             30 BANK0      3     3      0
                        _cw_data_set
                        _get_cw_data
                         _put_string
                   _send_data_master
                      _sent_data_set
                        _show_packet
                       _sysprot_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sysprot_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _show_packet                                          7     7      0    5535
                                             23 BANK0      7     7      0
                         _put_string
                    _uint8_to_string
 ---------------------------------------------------------------------------------
 (2) _uint8_to_string                                      6     4      2    5185
                                             17 BANK0      6     4      2
                          _process_1
                         _process_10
                        _process_100
 ---------------------------------------------------------------------------------
 (3) _process_100                                          7     5      2    2622
                                             10 BANK0      7     5      2
                            ___awmod
                         _process_10
 ---------------------------------------------------------------------------------
 (4) _process_10                                          10     8      2    1743
                                              0 BANK0     10     8      2
                            ___awdiv
                            ___awmod
                          _process_1
 ---------------------------------------------------------------------------------
 (5) _process_1                                            7     5      2     392
                                              7 COMMON     7     5      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     508
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _put_string                                           2     0      2     226
                                              1 COMMON     2     0      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sent_data_set                                        8     6      2    2919
                                             12 COMMON     2     0      2
                                              7 BANK0      6     6      0
                             ___wmul
                    _double_data_set
                    _uint16_data_set
                     _uint8_data_set
 ---------------------------------------------------------------------------------
 (2) _uint16_data_set                                      7     6      1     435
                                              5 COMMON     7     6      1
               _uint16_to_byte_array
 ---------------------------------------------------------------------------------
 (4) _uint16_to_byte_array                                 5     4      1     190
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _double_data_set                                      9     8      1     502
                                              9 COMMON     2     1      1
                                              0 BANK0      7     7      0
               _double_to_byte_array
 ---------------------------------------------------------------------------------
 (4) _double_to_byte_array                                 9     8      1     260
                                              0 COMMON     9     8      1
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     198
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _send_data_master                                     4     2      2    1402
                                              1 BANK0      4     2      2
                 _packet_send_master
 ---------------------------------------------------------------------------------
 (2) _packet_send_master                                   3     2      1    1230
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                       _send_payload
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (3) _send_payload                                         6     5      1     644
                                              6 COMMON     6     5      1
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (3) _spi_master_send                                      6     5      1     379
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (1) _get_cw_data                                          3     3      0     426
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                          _get_adcon
                 _spi_master_receive
                   _spi_master_start
 ---------------------------------------------------------------------------------
 (2) _spi_master_start                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _spi_master_receive                                   5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _get_adcon                                           10     8      2     290
                                              6 COMMON     7     5      2
                          _bit_shift
 ---------------------------------------------------------------------------------
 (4) _bit_shift                                            6     5      1     190
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (1) _cw_data_set                                          2     2      0     947
                                              4 COMMON     2     2      0
                     _uint8_data_set
 ---------------------------------------------------------------------------------
 (3) _uint8_data_set                                       4     1      3     788
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cw_data_set
     _uint8_data_set
   _get_cw_data
     _get_adcon
       _bit_shift
     _spi_master_receive
     _spi_master_start
   _put_string
     _putch
   _send_data_master
     _packet_send_master
       _send_payload
         _spi_master_send
       _spi_master_send
   _sent_data_set
     ___wmul
     _double_data_set
       _double_to_byte_array
     _uint16_data_set
       _uint16_to_byte_array
     _uint8_data_set
   _show_packet
     _put_string
       _putch
     _uint8_to_string
       _process_1
         ___awmod (ARG)
       _process_10
         ___awdiv
         ___awmod
         _process_1
           ___awmod (ARG)
       _process_100
         ___awmod
         _process_10
           ___awdiv
           ___awmod
           _process_1
             ___awmod (ARG)
   _sysprot_init
   _uart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5D      12        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Mar 19 22:22:47 2016

                                   pc 0002                           __CFG_CP$OFF 0000  
                         _SSPSTATbits 0094                                    l44 07AB  
                                  l83 011B                          ___awdiv@sign 0076  
              ??_uint16_to_byte_array 0071                                    _cw 0041  
                                  fsr 0004                   ___wmul@multiplicand 0072  
                                 l200 00C6                                   l121 051A  
                                 l113 0508                                   l131 053E  
                                 l123 051C                                   l124 051E  
                                 l108 0505                                   l133 0541  
                                 l117 050B                                   l134 0544  
                                 l152 0576                                   l144 0564  
                                 l162 059B                                   l154 0578  
                                 l155 057A                                   l139 0561  
                                 l164 059E                                   l148 0567  
                                 l165 05A1                                   l291 0238  
                                 l283 02CC                                   l259 0614  
                                 l452 013E                                   _RD7 0047  
                        __CFG_CPD$OFF 0000                                   u745 0466  
                                 u765 0472                                   u845 0415  
                                 u775 047E                                   u785 0488  
                                 u865 0426                                   u875 042F  
                                 u965 030E                                   u975 0323  
                uint8_data_set@p_data 0070                                   fsr0 0004  
                                 indf 0000                          ___awmod@sign 0076  
         send_data_master@destination 0052                ??_double_to_byte_array 0071  
                        __CFG_FOSC$HS 0000                          process_1@val 007D  
                        process_1@num 007B                          __CFG_LVP$OFF 0000  
                                l1500 0441                                  l1420 01BA  
                                l1510 056A                                  l1430 0450  
                        show_packet@i 006B                                  l1600 0371  
                                l1530 05AF                                  l1514 057C  
                                l1418 01AD                                  l1610 0395  
                                l1524 0589                                  l1516 0587  
                                l1620 0155                                  l1436 045B  
                                l1540 04BD                                  l1622 0178  
                                l1462 049A                                  l1454 0487  
                                l1446 0463                                  l1542 04CA  
                                l1606 037F                                  l1528 05A4  
                                l1448 0471                                  l1650 0520  
                                l1706 02FB                                  l1458 0492  
                                l1474 0405                                  l1660 052C  
                                l1652 052B                                  l1492 042E  
                                l1740 03D1                                  l1646 050E  
                                l1726 0263                                  l1718 024C  
                                l1486 0412                                  l1478 040C  
                                l1664 0547                                  l1752 0136  
                                l1488 0420                                  l1496 0439  
                                l1920 078A                                  l1666 0552  
                                l1578 033C                                  l1746 03E8  
                                l1684 017D                                  l1596 0356  
                                l1598 0336                                  l1774 05E3  
                                l1782 0609                                  l1776 05F3  
                                l1698 02E2                                  l1778 05FE  
                                STR_1 0025                                  STR_2 0033  
                                u1407 07B4                                  u1265 013F  
                                u1417 07DD                                  u1275 0146  
                                u1427 07EE                                  u1387 0793  
                                u1397 07A3                                  _RCIF 0065  
            __size_of_uint8_to_string 0043                                  _TXIF 0064  
                        __CFG_WRT$OFF 0000                                  _main 071C  
                    ??_uint8_data_set 0073                                  btemp 007E  
                       __CFG_BOREN$ON 0000                                  ltemp 007E  
            uint8_to_string@p_str_buf 005F                  __end_of_sysprot_init 00C5  
                                start 0000                                  ttemp 007E  
                                wtemp 007E                         process_10@val 0055  
                       process_10@num 0057         spi_master_receive@destination 0074  
                   ??_double_data_set 007A                                 ?_main 0070  
                     __end_of___awdiv 049F                         __CFG_WDTE$OFF 0000  
                     __end_of___awmod 0446                       ___awdiv@divisor 0070  
              uint8_data_set@data_len 0072                       ___awdiv@counter 0075  
                               _RCREG 001A                                 _RCSTA 0018  
                               _SPBRG 0099                                 _TXREG 0019  
                               _TXSTA 0098                         __CFG_PWRTE$ON 0000  
    double_to_byte_array@p_data_array 0070              __end_of_send_data_master 00F5  
                               _putch 00C5                      ?_uint16_data_set 0075  
                               pclath 000A                                 ltemp0 007E  
                               ltemp1 0082                                 ltemp2 0086  
                               ltemp3 0080                                 ttemp0 007E  
                               ttemp1 0081                                 ttemp2 0084  
                               ttemp3 0087                                 ttemp4 007F  
                               status 0003                                 wtemp0 007E  
                               wtemp1 0080                                 wtemp2 0082  
                               wtemp3 0084                                 wtemp4 0086  
                               wtemp5 0088                                 wtemp6 007F  
                      process_100@num 005E                      bit_shift@p_adres 0070  
         __size_of_spi_master_receive 005C                       __initialization 07F5  
               uint16_data_set@p_data 007A                          __end_of_main 07F5  
                    _process_100$1205 005D                                ??_main 006C  
                      get_cw_data@buf 004E      uint16_to_byte_array@p_data_array 0070  
                      show_packet@buf 0067                                _ADCON0 001F  
                              _ADCON1 009F                                _ADRESH 001E  
                              _ADRESL 009E                      ___awdiv@dividend 0072  
                              ?_putch 0070        spi_master_send@timeout_counter 0073  
                              _TRISD7 0447                                _SSPBUF 0013  
          __end_of_packet_send_master 0205                     ??_uint8_to_string 0061  
                __size_of_get_cw_data 0087                  __size_of_cw_data_set 0080  
                              ___wmul 0134                             ??___awdiv 0074  
                           ??___awmod 0074                 double_data_set@p_data 0053  
                              _packet 0021                      ___awdiv@quotient 0077  
                     ___awmod@divisor 0070                       ___awmod@counter 0075  
                        ?_process_100 0058             __size_of_spi_master_start 001F  
                        ?_show_packet 0070                 __size_of_sysprot_init 0005  
             __end_of__initialization 07FC                 send_payload@index_pos 007A  
                 process_10@p_str_buf 004E                 send_payload@p_payload 0076  
                      __pcstackCOMMON 0070                 __end_of_sent_data_set 0615  
                 spi_master_send@data 0070                         __end_of_putch 00CD  
                  __size_of_bit_shift 0036                          _sysprot_init 00C0  
                  __size_of_get_adcon 0020                       process_1@p_flag 0078  
                             ??_putch 0070                            __pbssBANK0 0020  
          uint16_to_byte_array@p_data 0074              __size_of_spi_master_send 0060  
   spi_master_receive@timeout_counter 0072                       _double_data_set 0235  
                          __pmaintext 071C                               ?___wmul 0070  
                       ?_send_payload 0076         __size_of_uint16_to_byte_array 0030  
                  __size_of_uart_init 000C                    __size_of_process_1 002E  
       __size_of_double_to_byte_array 0033               bit_shift@bit_mask_for_l 0015  
                          __stringtab 0003                     ?_send_data_master 004F  
                  ??_send_data_master 0051                    uint16_data_set@buf 0077  
                   __end_of_bit_shift 0334                     __end_of_get_adcon 0134  
                 uint8_to_string@flag 0063                               ___awdiv 0446  
                             ___awmod 03FB                       __size_of___wmul 0021  
             spi_master_receive@dummy 0071                        ??_send_payload 0077  
                             __ptext1 00D5                               __ptext2 00C0  
                             __ptext3 0266                               __ptext4 03B8  
                             __ptext5 0376                               __ptext6 049F  
                             __ptext7 01A7                               __ptext8 03FB  
                             __ptext9 0446                      ___awmod@dividend 0072  
                cw_data_set@p_cw_data 0075                      _spi_master_start 00F5  
                             clrloop0 00CE                       _uint8_to_string 03B8  
                end_of_initialization 07FC               __end_of_double_data_set 0266  
                __size_of_process_100 0042                    process_1@p_str_buf 0077  
                __size_of_show_packet 0032            __end_of_spi_master_receive 0555  
           sent_data_set@byte_of_data 007D                     __end_of_uart_init 00E1  
                   __end_of_process_1 01D5              __size_of_uint16_data_set 0033  
                   ??_spi_master_send 0071                      double_data_set@i 0054  
             __size_of_uint8_data_set 002A                     __end_ofmain@data0 0019  
                   __end_ofmain@data1 0025                     __end_ofmain@data2 0024  
                   __end_ofmain@data3 001C                     __end_ofmain@data4 001F  
                   __end_ofmain@data5 0022                             _PORTAbits 0005  
                  _packet_send_master 01D5                             _PORTCbits 0007  
                           _PORTDbits 0008                            _process_10 049F  
               double_to_byte_array@i 0078                             _TRISAbits 0085  
                           _TRISCbits 0087                             _TRISDbits 0088  
                           _TRISEbits 0089                   ?_packet_send_master 007C  
             uint8_to_string@buf_size 0060                           process_10@i 0056  
                          _put_string 0155                         ??_get_cw_data 007D  
                       ??_cw_data_set 0074                      process_10@divide 0054  
                    process_10@p_flag 004F               uint16_data_set@data_len 0075  
               sent_data_set@data_len 007C                  ??_packet_send_master 007D  
                      __end_of___wmul 0155                         put_string@str 0071  
                       send_payload@i 0079            spi_master_send@destination 0075  
             __end_of_uint8_to_string 03FB                  spi_master_send@dummy 0072  
                 start_initialization 07F5                      ?_double_data_set 0079  
                __end_of_send_payload 0376       __end_ofbit_shift@bit_mask_for_l 0016  
                    uint16_data_set@i 007B                              ??___wmul 0074  
                send_payload@data_len 0078                   __end_of_get_cw_data 071C  
                 __end_of_cw_data_set 0695                     ??_uint16_data_set 0076  
       double_to_byte_array@converter 0073                           ?_process_10 004E  
                           ___latbits 0002                         __pcstackBANK0 004E  
                 sent_data_set@p_data 005A                __size_of_sent_data_set 0060  
        __end_of_uint16_to_byte_array 0235                           ?_put_string 0071  
        __end_of_double_to_byte_array 02CB                             _bit_shift 02FE  
                            ?___awdiv 0070              __end_of_spi_master_start 0114  
                            ?___awmod 0070                        _uint8_data_set 017D  
           __size_of_send_data_master 0014                             _get_adcon 0114  
          double_to_byte_array@p_data 0077                             __pstrings 0003  
                    ?_uint8_to_string 005F             send_data_master@data_type 004F  
                           _index_pos 0020                    uint8_to_string@num 0064  
                      __size_of_putch 0008                       _spi_master_send 0555  
                      ___wmul@product 0074                             clear_ram0 00CD  
                 __size_of_process_10 005A                           _get_cw_data 0695  
                         _cw_data_set 0615                __end_of_uint8_data_set 01A7  
                          ?_bit_shift 0070                             _uart_init 00D5  
                           _process_1 01A7                         _sent_data_set 05B5  
                          ?_get_adcon 0076                    _spi_master_receive 04F9  
                          _ADCON0bits 001F                           __stringbase 0012  
                   ___wmul@multiplier 0070                   __size_of_put_string 0028  
                           main@data0 0016                             main@data1 0024  
                           main@data2 0022                             main@data3 0019  
                           main@data4 001C                             main@data5 001F  
                          process_1@i 007C                   ?_spi_master_receive 0070  
               __size_of_send_payload 0042                         ??_process_100 005A  
                       ??_show_packet 0065                  ??_spi_master_receive 0070  
                     ?_uint8_data_set 0070                            ?_uart_init 0070  
                      ?_sent_data_set 007C                            ?_process_1 0077  
                    __size_of___awdiv 0059                      __size_of___awmod 004B  
                  __end_of__stringtab 0013                          _send_payload 0334  
                _uint16_to_byte_array 0205                         ?_sysprot_init 0070  
             double_data_set@data_len 0079               __end_of_spi_master_send 05B5  
                            __ptext10 0155                              __ptext11 00C5  
                            __ptext20 0334                              __ptext12 05B5  
                            __ptext21 0555                              __ptext13 02CB  
                            __ptext22 0695                              __ptext14 0205  
                            __ptext23 00F5                              __ptext15 0235  
                            __ptext24 04F9                              __ptext16 0298  
                            __ptext25 0114                              __ptext17 0134  
                            __ptext26 02FE                              __ptext18 00E1  
                            __ptext27 0615                              __ptext19 01D5  
                            __ptext28 017D                  _double_to_byte_array 0298  
__end_ofuint16_to_byte_array@bit_mask 0015          uint16_to_byte_array@bit_mask 0013  
                       __size_of_main 00D9                   __end_of_process_100 03B8  
                 __end_of_show_packet 0298                       _uint16_data_set 02CB  
          packet_send_master@p_packet 007C           __size_of_packet_send_master 0030  
                         ??_bit_shift 0071                      _send_data_master 00E1  
                process_100@p_str_buf 0058                           ??_get_adcon 0078  
               ?_uint16_to_byte_array 0070                          ??_process_10 0050  
                      ??_sysprot_init 0070                             putch@byte 0070  
                  double_data_set@buf 004E                 ?_double_to_byte_array 0070  
                        ??_put_string 0073                     get_adcon@ad_value 007B  
                  __end_of_process_10 04F9                             stringcode 000D  
            __size_of_double_data_set 0031                       ??_sent_data_set 0055  
                         ??_uart_init 0070               send_payload@destination 007B  
                         ??_process_1 0079                     ?_spi_master_start 0070  
                  ??_spi_master_start 0070                    __end_of_put_string 017D  
                   get_adcon@my_adres 0079                              stringdir 000D  
                            stringtab 0003                      ?_spi_master_send 0070  
                         _process_100 0376               __end_of_uint16_data_set 02FE  
                         _show_packet 0266                     process_100@p_flag 0059  
    send_data_master@data_end_command 0050                            _SSPCONbits 0014  
                        ?_get_cw_data 0070                          ?_cw_data_set 0070  
       packet_send_master@destination 004E                   bit_shift@p_ad_value 0075  
