

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Aug 31 14:58:57 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     	;# 
    34  0001                     	;# 
    35  0002                     	;# 
    36  0003                     	;# 
    37  0004                     	;# 
    38  0005                     	;# 
    39  0006                     	;# 
    40  0007                     	;# 
    41  0008                     	;# 
    42  0009                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  000D                     	;# 
    47  000E                     	;# 
    48  000E                     	;# 
    49  000F                     	;# 
    50  0010                     	;# 
    51  0011                     	;# 
    52  0012                     	;# 
    53  0013                     	;# 
    54  0014                     	;# 
    55  0015                     	;# 
    56  0015                     	;# 
    57  0016                     	;# 
    58  0017                     	;# 
    59  0018                     	;# 
    60  0019                     	;# 
    61  001A                     	;# 
    62  001B                     	;# 
    63  001B                     	;# 
    64  001C                     	;# 
    65  001D                     	;# 
    66  001E                     	;# 
    67  001F                     	;# 
    68  0081                     	;# 
    69  0085                     	;# 
    70  0086                     	;# 
    71  0087                     	;# 
    72  0088                     	;# 
    73  0089                     	;# 
    74  008C                     	;# 
    75  008D                     	;# 
    76  008E                     	;# 
    77  0091                     	;# 
    78  0092                     	;# 
    79  0093                     	;# 
    80  0094                     	;# 
    81  0098                     	;# 
    82  0099                     	;# 
    83  009C                     	;# 
    84  009D                     	;# 
    85  009E                     	;# 
    86  009F                     	;# 
    87  010C                     	;# 
    88  010D                     	;# 
    89  010E                     	;# 
    90  010F                     	;# 
    91  018C                     	;# 
    92  018D                     	;# 
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0088                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  0091                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  010C                     	;# 
   268  010D                     	;# 
   269  010E                     	;# 
   270  010F                     	;# 
   271  018C                     	;# 
   272  018D                     	;# 
   273  0000                     	;# 
   274  0001                     	;# 
   275  0002                     	;# 
   276  0003                     	;# 
   277  0004                     	;# 
   278  0005                     	;# 
   279  0006                     	;# 
   280  0007                     	;# 
   281  0008                     	;# 
   282  0009                     	;# 
   283  000A                     	;# 
   284  000B                     	;# 
   285  000C                     	;# 
   286  000D                     	;# 
   287  000E                     	;# 
   288  000E                     	;# 
   289  000F                     	;# 
   290  0010                     	;# 
   291  0011                     	;# 
   292  0012                     	;# 
   293  0013                     	;# 
   294  0014                     	;# 
   295  0015                     	;# 
   296  0015                     	;# 
   297  0016                     	;# 
   298  0017                     	;# 
   299  0018                     	;# 
   300  0019                     	;# 
   301  001A                     	;# 
   302  001B                     	;# 
   303  001B                     	;# 
   304  001C                     	;# 
   305  001D                     	;# 
   306  001E                     	;# 
   307  001F                     	;# 
   308  0081                     	;# 
   309  0085                     	;# 
   310  0086                     	;# 
   311  0087                     	;# 
   312  0088                     	;# 
   313  0089                     	;# 
   314  008C                     	;# 
   315  008D                     	;# 
   316  008E                     	;# 
   317  0091                     	;# 
   318  0092                     	;# 
   319  0093                     	;# 
   320  0094                     	;# 
   321  0098                     	;# 
   322  0099                     	;# 
   323  009C                     	;# 
   324  009D                     	;# 
   325  009E                     	;# 
   326  009F                     	;# 
   327  010C                     	;# 
   328  010D                     	;# 
   329  010E                     	;# 
   330  010F                     	;# 
   331  018C                     	;# 
   332  018D                     	;# 
   333                           
   334                           	psect	strings
   335  0003                     __pstrings:	
   336  0003                     stringtab:	
   337  0003                     __stringtab:	
   338  0003                     stringcode:	
   339                           ;	String table - string pointers are 1 byte each
   340                           
   341  0003                     stringdir:	
   342  0003  3000               	movlw	high stringdir
   343  0004  008A               	movwf	10
   344  0005  0804               	movf	4,w
   345  0006  0A84               	incf	4,f
   346  0007  0782               	addwf	2,f
   347  0008                     __stringbase:	
   348  0008  3400               	retlw	0
   349  0009                     __end_of__stringtab:	
   350  0009                     main@send_1:	
   351  0009  3461               	retlw	97
   352  000A  3462               	retlw	98
   353  000B  3463               	retlw	99
   354  000C  3464               	retlw	100
   355  000D  3465               	retlw	101
   356  000E  3466               	retlw	102
   357  000F  3467               	retlw	103
   358  0010  3468               	retlw	104
   359  0011  3469               	retlw	105
   360  0012  346B               	retlw	107
   361  0013  346C               	retlw	108
   362  0014  346D               	retlw	109
   363  0015  346E               	retlw	110
   364  0016  346F               	retlw	111
   365  0017  3470               	retlw	112
   366  0018                     __end_ofmain@send_1:	
   367  0018                     main@send_2:	
   368  0018  3470               	retlw	112
   369  0019  3471               	retlw	113
   370  001A  3472               	retlw	114
   371  001B  3473               	retlw	115
   372  001C  3474               	retlw	116
   373  001D  3475               	retlw	117
   374  001E  3476               	retlw	118
   375  001F  3477               	retlw	119
   376  0020  3478               	retlw	120
   377  0021  3479               	retlw	121
   378  0022  347A               	retlw	122
   379  0023  3431               	retlw	49
   380  0024  3432               	retlw	50
   381  0025  3433               	retlw	51
   382  0026  3434               	retlw	52
   383  0027                     __end_ofmain@send_2:	
   384  0027                     uint16_to_byte_array@bit_mask:	
   385  0027  34FF               	retlw	255
   386  0028  3400               	retlw	0
   387  0029                     __end_ofuint16_to_byte_array@bit_mask:	
   388  0005                     _PORTA	set	5
   389  0006                     _PORTB	set	6
   390  0007                     _PORTC	set	7
   391  0007                     _PORTCbits	set	7
   392  0008                     _PORTD	set	8
   393  0009                     _PORTE	set	9
   394  001A                     _RCREG	set	26
   395  0018                     _RCSTA	set	24
   396  0013                     _SSPBUF	set	19
   397  0014                     _SSPCONbits	set	20
   398  0019                     _TXREG	set	25
   399  0065                     _RCIF	set	101
   400  0046                     _RD6	set	70
   401  0064                     _TXIF	set	100
   402  0099                     _SPBRG	set	153
   403  0094                     _SSPSTATbits	set	148
   404  0085                     _TRISA	set	133
   405  0086                     _TRISB	set	134
   406  0087                     _TRISC	set	135
   407  0087                     _TRISCbits	set	135
   408  0088                     _TRISD	set	136
   409  0089                     _TRISE	set	137
   410  0098                     _TXSTA	set	152
   411  043E                     _TRISC6	set	1086
   412  043F                     _TRISC7	set	1087
   413  0029                     STR_1:	
   414  0029  344D               	retlw	77	;'M'
   415  002A  3461               	retlw	97	;'a'
   416  002B  3473               	retlw	115	;'s'
   417  002C  3474               	retlw	116	;'t'
   418  002D  3465               	retlw	101	;'e'
   419  002E  3472               	retlw	114	;'r'
   420  002F  3420               	retlw	32	;' '
   421  0030  3450               	retlw	80	;'P'
   422  0031  3472               	retlw	114	;'r'
   423  0032  346F               	retlw	111	;'o'
   424  0033  3467               	retlw	103	;'g'
   425  0034  3472               	retlw	114	;'r'
   426  0035  3461               	retlw	97	;'a'
   427  0036  346D               	retlw	109	;'m'
   428  0037  3420               	retlw	32	;' '
   429  0038  3453               	retlw	83	;'S'
   430  0039  3474               	retlw	116	;'t'
   431  003A  3461               	retlw	97	;'a'
   432  003B  3472               	retlw	114	;'r'
   433  003C  3474               	retlw	116	;'t'
   434  003D  3421               	retlw	33	;'!'
   435  003E  340D               	retlw	13
   436  003F  340A               	retlw	10
   437  0040  3400               	retlw	0
   438                           
   439                           ; #config settings
   440  0000                     
   441                           	psect	cinit
   442  07F4                     start_initialization:	
   443  07F4                     __initialization:	
   444                           
   445                           ; Clear objects allocated to BANK0
   446  07F4  01D2               	clrf	__pbssBANK0& (0+127)
   447                           
   448                           ; Clear objects allocated to BANK1
   449  07F5  1383               	bcf	3,7	;select IRP bank0
   450  07F6  30A0               	movlw	low __pbssBANK1
   451  07F7  0084               	movwf	4
   452  07F8  30E2               	movlw	low (__pbssBANK1+66)
   453  07F9  120A  118A  2316   	fcall	clear_ram0
   454  07FC                     end_of_initialization:	
   455                           ;End of C runtime variable initialization code
   456                           
   457  07FC                     __end_of__initialization:	
   458  07FC  0183               	clrf	3
   459  07FD  120A  118A  2F39   	ljmp	_main	;jump to C main() function
   460                           
   461                           	psect	bssBANK0
   462  0052                     __pbssBANK0:	
   463  0052                     _rx_packet_status:	
   464  0052                     	ds	1
   465                           
   466                           	psect	bssBANK1
   467  00A0                     __pbssBANK1:	
   468  00A0                     _tx_packet:	
   469  00A0                     	ds	33
   470  00C1                     _rx_packet:	
   471  00C1                     	ds	33
   472                           
   473                           	psect	clrtext
   474  0316                     clear_ram0:	
   475                           ;	Called with FSR containing the base address, and
   476                           ;	W with the last address+1
   477                           
   478  0316  0064               	clrwdt	;clear the watchdog before getting into this loop
   479  0317                     clrloop0:	
   480  0317  0180               	clrf	0	;clear RAM location pointed to by FSR
   481  0318  0A84               	incf	4,f	;increment pointer
   482  0319  0604               	xorwf	4,w	;XOR with final address
   483  031A  1903               	btfsc	3,2	;have we reached the end yet?
   484  031B  3400               	retlw	0	;all done for this memory range, return
   485  031C  0604               	xorwf	4,w	;XOR again to restore value
   486  031D  2B17               	goto	clrloop0	;do the next byte
   487                           
   488                           	psect	cstackCOMMON
   489  0070                     __pcstackCOMMON:	
   490  0070                     ?_pic_port_init:	
   491  0070                     ??_pic_port_init:	
   492                           ; 0 bytes @ 0x0
   493                           
   494  0070                     ?_flag_check:	
   495                           ; 0 bytes @ 0x0
   496                           
   497  0070                     ?_receive_data_master:	
   498                           ; 0 bytes @ 0x0
   499                           
   500  0070                     ?_uint8_data_set:	
   501                           ; 0 bytes @ 0x0
   502                           
   503  0070                     ?_tx_packet_clear:	
   504                           ; 0 bytes @ 0x0
   505                           
   506  0070                     ??_tx_packet_clear:	
   507                           ; 0 bytes @ 0x0
   508                           
   509  0070                     ?_rx_packet_clear:	
   510                           ; 0 bytes @ 0x0
   511                           
   512  0070                     ??_rx_packet_clear:	
   513                           ; 0 bytes @ 0x0
   514                           
   515  0070                     ?_uint16_to_byte_array:	
   516                           ; 0 bytes @ 0x0
   517                           
   518  0070                     ?_double_to_byte_array:	
   519                           ; 0 bytes @ 0x0
   520                           
   521  0070                     ?_uart_init:	
   522                           ; 0 bytes @ 0x0
   523                           
   524  0070                     ??_uart_init:	
   525                           ; 0 bytes @ 0x0
   526                           
   527  0070                     ?_put_char:	
   528                           ; 0 bytes @ 0x0
   529                           
   530  0070                     ??_put_char:	
   531                           ; 0 bytes @ 0x0
   532                           
   533  0070                     ?_put_string:	
   534                           ; 0 bytes @ 0x0
   535                           
   536  0070                     ?_spi_master_start:	
   537                           ; 0 bytes @ 0x0
   538                           
   539  0070                     ??_spi_master_start:	
   540                           ; 0 bytes @ 0x0
   541                           
   542  0070                     ?_spi_master_send:	
   543                           ; 0 bytes @ 0x0
   544                           
   545  0070                     ?_spi_master_receive:	
   546                           ; 0 bytes @ 0x0
   547                           
   548  0070                     ?_main:	
   549                           ; 0 bytes @ 0x0
   550                           
   551  0070                     ?___wmul:	
   552                           ; 2 bytes @ 0x0
   553                           
   554  0070                     put_char@byte_data:	
   555                           ; 2 bytes @ 0x0
   556                           
   557  0070                     spi_master_send@data:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     spi_master_receive@p_get:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     uint8_data_set@data_len:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     uint16_to_byte_array@p_data_array:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     double_to_byte_array@p_data_array:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     tx_packet_clear@i:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     rx_packet_clear@i:	
   576                           ; 2 bytes @ 0x0
   577                           
   578  0070                     ___wmul@multiplier:	
   579                           ; 2 bytes @ 0x0
   580                           
   581                           
   582                           ; 2 bytes @ 0x0
   583  0070                     	ds	1
   584  0071                     ??_uint8_data_set:	
   585  0071                     ??_uint16_to_byte_array:	
   586                           ; 0 bytes @ 0x1
   587                           
   588  0071                     ??_double_to_byte_array:	
   589                           ; 0 bytes @ 0x1
   590                           
   591  0071                     ??_put_string:	
   592                           ; 0 bytes @ 0x1
   593                           
   594  0071                     ??_spi_master_send:	
   595                           ; 0 bytes @ 0x1
   596                           
   597  0071                     ??_spi_master_receive:	
   598                           ; 0 bytes @ 0x1
   599                           
   600                           
   601                           ; 0 bytes @ 0x1
   602  0071                     	ds	1
   603  0072                     ?_extract_receive_packet:	
   604  0072                     put_string@str:	
   605                           ; 0 bytes @ 0x2
   606                           
   607  0072                     spi_master_send@buf:	
   608                           ; 1 bytes @ 0x2
   609                           
   610  0072                     spi_master_receive@buf:	
   611                           ; 1 bytes @ 0x2
   612                           
   613  0072                     extract_receive_packet@p_data_buf:	
   614                           ; 1 bytes @ 0x2
   615                           
   616  0072                     uint8_data_set@p_data:	
   617                           ; 1 bytes @ 0x2
   618                           
   619  0072                     ___wmul@multiplicand:	
   620                           ; 1 bytes @ 0x2
   621                           
   622                           
   623                           ; 2 bytes @ 0x2
   624  0072                     	ds	1
   625  0073                     spi_master_send@destination:	
   626  0073                     spi_master_receive@destination:	
   627                           ; 1 bytes @ 0x3
   628                           
   629  0073                     extract_receive_packet@p_data_len_buf:	
   630                           ; 1 bytes @ 0x3
   631                           
   632  0073                     double_to_byte_array@converter:	
   633                           ; 1 bytes @ 0x3
   634                           
   635                           
   636                           ; 4 bytes @ 0x3
   637  0073                     	ds	1
   638  0074                     ?_send_data_master:	
   639  0074                     ??_flag_check:	
   640                           ; 0 bytes @ 0x4
   641                           
   642  0074                     ??_receive_data_master:	
   643                           ; 0 bytes @ 0x4
   644                           
   645  0074                     ??_extract_receive_packet:	
   646                           ; 0 bytes @ 0x4
   647                           
   648  0074                     ??___wmul:	
   649                           ; 0 bytes @ 0x4
   650                           
   651  0074                     send_data_master@data_type:	
   652                           ; 0 bytes @ 0x4
   653                           
   654  0074                     uint16_to_byte_array@p_data:	
   655                           ; 1 bytes @ 0x4
   656                           
   657  0074                     ___wmul@product:	
   658                           ; 1 bytes @ 0x4
   659                           
   660                           
   661                           ; 2 bytes @ 0x4
   662  0074                     	ds	1
   663  0075                     ?_uint16_data_set:	
   664  0075                     send_data_master@data_end_command:	
   665                           ; 0 bytes @ 0x5
   666                           
   667  0075                     extract_receive_packet@p_data_type_buf:	
   668                           ; 1 bytes @ 0x5
   669                           
   670  0075                     uint16_data_set@data_len:	
   671                           ; 1 bytes @ 0x5
   672                           
   673                           
   674                           ; 1 bytes @ 0x5
   675  0075                     	ds	1
   676  0076                     ??_send_data_master:	
   677  0076                     ??_uint16_data_set:	
   678                           ; 0 bytes @ 0x6
   679                           
   680  0076                     receive_data_master@i:	
   681                           ; 0 bytes @ 0x6
   682                           
   683  0076                     extract_receive_packet@i:	
   684                           ; 1 bytes @ 0x6
   685                           
   686                           
   687                           ; 1 bytes @ 0x6
   688  0076                     	ds	1
   689  0077                     receive_data_master@destination:	
   690  0077                     flag_check@flag:	
   691                           ; 1 bytes @ 0x7
   692                           
   693  0077                     double_to_byte_array@p_data:	
   694                           ; 1 bytes @ 0x7
   695                           
   696  0077                     uint16_data_set@buf:	
   697                           ; 1 bytes @ 0x7
   698                           
   699                           
   700                           ; 3 bytes @ 0x7
   701  0077                     	ds	1
   702  0078                     flag_check@destination:	
   703  0078                     double_to_byte_array@i:	
   704                           ; 1 bytes @ 0x8
   705                           
   706  0078                     send_data_master@i:	
   707                           ; 1 bytes @ 0x8
   708                           
   709                           
   710                           ; 2 bytes @ 0x8
   711  0078                     	ds	1
   712  0079                     ?_double_data_set:	
   713  0079                     double_data_set@data_len:	
   714                           ; 0 bytes @ 0x9
   715                           
   716                           
   717                           ; 1 bytes @ 0x9
   718  0079                     	ds	1
   719  007A                     ??_double_data_set:	
   720  007A                     send_data_master@destination:	
   721                           ; 0 bytes @ 0xA
   722                           
   723  007A                     uint16_data_set@p_data:	
   724                           ; 1 bytes @ 0xA
   725                           
   726                           
   727                           ; 1 bytes @ 0xA
   728  007A                     	ds	1
   729  007B                     uint16_data_set@i:	
   730                           
   731                           ; 1 bytes @ 0xB
   732  007B                     	ds	1
   733  007C                     ?_sent_data_set:	
   734  007C                     sent_data_set@data_len:	
   735                           ; 1 bytes @ 0xC
   736                           
   737                           
   738                           ; 1 bytes @ 0xC
   739  007C                     	ds	1
   740  007D                     sent_data_set@byte_of_type:	
   741                           
   742                           ; 1 bytes @ 0xD
   743  007D                     	ds	1
   744                           
   745                           	psect	cstackBANK0
   746  0020                     __pcstackBANK0:	
   747  0020                     double_data_set@buf:	
   748                           
   749                           ; 5 bytes @ 0x0
   750  0020                     	ds	5
   751  0025                     double_data_set@p_data:	
   752                           
   753                           ; 1 bytes @ 0x5
   754  0025                     	ds	1
   755  0026                     double_data_set@i:	
   756                           
   757                           ; 1 bytes @ 0x6
   758  0026                     	ds	1
   759  0027                     ??_sent_data_set:	
   760                           
   761                           ; 0 bytes @ 0x7
   762  0027                     	ds	5
   763  002C                     sent_data_set@p_data:	
   764                           
   765                           ; 1 bytes @ 0xC
   766  002C                     	ds	1
   767  002D                     ??_main:	
   768                           
   769                           ; 0 bytes @ 0xD
   770  002D                     	ds	3
   771  0030                     main@r_data:	
   772                           
   773                           ; 30 bytes @ 0x10
   774  0030                     	ds	30
   775  004E                     main@r_data_type:	
   776                           
   777                           ; 1 bytes @ 0x2E
   778  004E                     	ds	1
   779  004F                     main@cmd:	
   780                           
   781                           ; 1 bytes @ 0x2F
   782  004F                     	ds	1
   783  0050                     main@i:	
   784                           
   785                           ; 1 bytes @ 0x30
   786  0050                     	ds	1
   787  0051                     main@r_data_len:	
   788                           
   789                           ; 1 bytes @ 0x31
   790  0051                     	ds	1
   791                           
   792                           	psect	maintext
   793  0739                     __pmaintext:	
   794 ;;
   795 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   796 ;;
   797 ;; *************** function _main *****************
   798 ;; Defined at:
   799 ;;		line 30 in file "main.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  r_data         30   16[BANK0 ] unsigned char [30]
   804 ;;  r_data_len      1   49[BANK0 ] unsigned char 
   805 ;;  i               1   48[BANK0 ] unsigned char 
   806 ;;  cmd             1   47[BANK0 ] unsigned char 
   807 ;;  r_data_type     1   46[BANK0 ] unsigned char 
   808 ;; Return value:  Size  Location     Type
   809 ;;                  2  136[None  ] int 
   810 ;; Registers used:
   811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : B00/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   817 ;;      Params:         0       0       0       0       0
   818 ;;      Locals:         0      34       0       0       0
   819 ;;      Temps:          0       3       0       0       0
   820 ;;      Totals:         0      37       0       0       0
   821 ;;Total ram usage:       37 bytes
   822 ;; Hardware stack levels required when called:    4
   823 ;; This function calls:
   824 ;;		_extract_receive_packet
   825 ;;		_flag_check
   826 ;;		_pic_port_init
   827 ;;		_put_char
   828 ;;		_put_string
   829 ;;		_receive_data_master
   830 ;;		_send_data_master
   831 ;;		_sent_data_set
   832 ;;		_spi_master_start
   833 ;;		_uart_init
   834 ;; This function is called by:
   835 ;;		Startup code after reset
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           
   840                           ;psect for function _main
   841  0739                     _main:	
   842                           
   843                           ;main.c: 32: const uint8_t send_1[] =
   844                           ;main.c: 33: {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'k', 'l', 'm', 'n', 'o', 'p'}
      +                          ;
   845                           ;main.c: 35: const uint8_t send_2[] =
   846                           ;main.c: 36: {'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '1', '2', '3', '4'}
      +                          ;
   847                           ;main.c: 38: uint8_t i;
   848                           ;main.c: 39: uint8_t r_data_type;
   849                           ;main.c: 40: uint8_t r_data[30];
   850                           ;main.c: 41: uint8_t r_data_len;
   851                           ;main.c: 44: pic_port_init();
   852                           
   853                           ;incstack = 0
   854                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   855  0739  120A  118A  232B  120A  118A  	fcall	_pic_port_init
   856                           
   857                           ;main.c: 47: RD6 = 1;
   858  073E  1283               	bcf	3,5	;RP0=0, select bank0
   859  073F  1303               	bcf	3,6	;RP1=0, select bank0
   860  0740  1708               	bsf	8,6	;volatile
   861                           
   862                           ;main.c: 48: _delay((unsigned long)((500)*(20000000/4000.0)));
   863  0741  300D               	movlw	13
   864  0742  00AF               	movwf	??_main+2
   865  0743  30AF               	movlw	175
   866  0744  00AE               	movwf	??_main+1
   867  0745  30C1               	movlw	193
   868  0746  00AD               	movwf	??_main
   869  0747                     u677:	
   870  0747  0BAD               	decfsz	??_main,f
   871  0748  2F47               	goto	u677
   872  0749  0BAE               	decfsz	??_main+1,f
   873  074A  2F47               	goto	u677
   874  074B  0BAF               	decfsz	??_main+2,f
   875  074C  2F47               	goto	u677
   876  074D  0000               	nop
   877                           
   878                           ;main.c: 49: RD6 = 0;
   879  074E  1283               	bcf	3,5	;RP0=0, select bank0
   880  074F  1303               	bcf	3,6	;RP1=0, select bank0
   881  0750  1308               	bcf	8,6	;volatile
   882                           
   883                           ;main.c: 50: _delay((unsigned long)((500)*(20000000/4000.0)));
   884  0751  300D               	movlw	13
   885  0752  00AF               	movwf	??_main+2
   886  0753  30AF               	movlw	175
   887  0754  00AE               	movwf	??_main+1
   888  0755  30C1               	movlw	193
   889  0756  00AD               	movwf	??_main
   890  0757                     u687:	
   891  0757  0BAD               	decfsz	??_main,f
   892  0758  2F57               	goto	u687
   893  0759  0BAE               	decfsz	??_main+1,f
   894  075A  2F57               	goto	u687
   895  075B  0BAF               	decfsz	??_main+2,f
   896  075C  2F57               	goto	u687
   897  075D  0000               	nop
   898                           
   899                           ;main.c: 53: uart_init();
   900  075E  120A  118A  231E  120A  118A  	fcall	_uart_init
   901                           
   902                           ;main.c: 54: spi_master_start();
   903  0763  120A  118A  233A  120A  118A  	fcall	_spi_master_start
   904                           
   905                           ;main.c: 57: put_string("Master Program Start!\r\n");
   906  0768  3021               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   907  0769  120A  118A  2359  120A  118A  	fcall	_put_string
   908                           
   909                           ;main.c: 59: _delay((unsigned long)((1000)*(20000000/4000.0)));
   910  076E  301A               	movlw	26
   911  076F  1283               	bcf	3,5	;RP0=0, select bank0
   912  0770  1303               	bcf	3,6	;RP1=0, select bank0
   913  0771  00AF               	movwf	??_main+2
   914  0772  305E               	movlw	94
   915  0773  00AE               	movwf	??_main+1
   916  0774  3086               	movlw	134
   917  0775  00AD               	movwf	??_main
   918  0776                     u697:	
   919  0776  0BAD               	decfsz	??_main,f
   920  0777  2F76               	goto	u697
   921  0778  0BAE               	decfsz	??_main+1,f
   922  0779  2F76               	goto	u697
   923  077A  0BAF               	decfsz	??_main+2,f
   924  077B  2F76               	goto	u697
   925  077C  0000               	nop
   926                           
   927                           ;main.c: 69: uint8_t cmd = 0x02;
   928  077D  3002               	movlw	2
   929  077E  1283               	bcf	3,5	;RP0=0, select bank0
   930  077F  1303               	bcf	3,6	;RP1=0, select bank0
   931  0780  00AD               	movwf	??_main
   932  0781  082D               	movf	??_main,w
   933  0782  00CF               	movwf	main@cmd
   934                           
   935                           ;main.c: 70: sent_data_set(&cmd, sizeof(cmd), sizeof(uint8_t));
   936  0783  01FC               	clrf	sent_data_set@data_len
   937  0784  0AFC               	incf	sent_data_set@data_len,f
   938  0785  01FD               	clrf	sent_data_set@byte_of_type
   939  0786  0AFD               	incf	sent_data_set@byte_of_type,f
   940  0787  304F               	movlw	(low (main@cmd| 0))& (0+255)
   941  0788  120A  118A  25B8  120A  118A  	fcall	_sent_data_set
   942                           
   943                           ;main.c: 71: send_data_master(POW, COMMAND, DATA_END);
   944  078D  3003               	movlw	3
   945  078E  1283               	bcf	3,5	;RP0=0, select bank0
   946  078F  1303               	bcf	3,6	;RP1=0, select bank0
   947  0790  00AD               	movwf	??_main
   948  0791  082D               	movf	??_main,w
   949  0792  00F4               	movwf	send_data_master@data_type
   950  0793  3010               	movlw	16
   951  0794  00AE               	movwf	??_main+1
   952  0795  082E               	movf	??_main+1,w
   953  0796  00F5               	movwf	send_data_master@data_end_command
   954  0797  3003               	movlw	3
   955  0798  120A  118A  269A  120A  118A  	fcall	_send_data_master
   956                           
   957                           ;main.c: 72: flag_check(POW);
   958  079D  3003               	movlw	3
   959  079E  120A  118A  2575  120A  118A  	fcall	_flag_check
   960                           
   961                           ;main.c: 73: receive_data_master(POW);
   962  07A3  3003               	movlw	3
   963  07A4  120A  118A  2615  120A  118A  	fcall	_receive_data_master
   964  07A9                     l1420:	
   965                           ;main.c: 75: while(1)
   966                           
   967                           
   968                           ;main.c: 76: {
   969                           ;main.c: 77: RD6 = 1;
   970  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   971  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   972  07AB  1708               	bsf	8,6	;volatile
   973                           
   974                           ;main.c: 78: _delay((unsigned long)((200)*(20000000/4000.0)));
   975  07AC  3006               	movlw	6
   976  07AD  00AF               	movwf	??_main+2
   977  07AE  3013               	movlw	19
   978  07AF  00AE               	movwf	??_main+1
   979  07B0  30B1               	movlw	177
   980  07B1  00AD               	movwf	??_main
   981  07B2                     u707:	
   982  07B2  0BAD               	decfsz	??_main,f
   983  07B3  2FB2               	goto	u707
   984  07B4  0BAE               	decfsz	??_main+1,f
   985  07B5  2FB2               	goto	u707
   986  07B6  0BAF               	decfsz	??_main+2,f
   987  07B7  2FB2               	goto	u707
   988  07B8  2FB9               	nop2
   989                           
   990                           ;main.c: 79: RD6 = 0;
   991  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   992  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   993  07BB  1308               	bcf	8,6	;volatile
   994                           
   995                           ;main.c: 80: _delay((unsigned long)((200)*(20000000/4000.0)));
   996  07BC  3006               	movlw	6
   997  07BD  00AF               	movwf	??_main+2
   998  07BE  3013               	movlw	19
   999  07BF  00AE               	movwf	??_main+1
  1000  07C0  30B1               	movlw	177
  1001  07C1  00AD               	movwf	??_main
  1002  07C2                     u717:	
  1003  07C2  0BAD               	decfsz	??_main,f
  1004  07C3  2FC2               	goto	u717
  1005  07C4  0BAE               	decfsz	??_main+1,f
  1006  07C5  2FC2               	goto	u717
  1007  07C6  0BAF               	decfsz	??_main+2,f
  1008  07C7  2FC2               	goto	u717
  1009  07C8  2FC9               	nop2
  1010                           
  1011                           ;main.c: 82: if(rx_packet_status == TRUE)
  1012  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1013  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1014  07CB  0352               	decf	_rx_packet_status,w
  1015  07CC  1D03               	btfss	3,2
  1016  07CD  2FA9               	goto	l1420
  1017                           
  1018                           ;main.c: 83: {
  1019                           ;main.c: 84: extract_receive_packet(&r_data_type, r_data, &r_data_len);
  1020  07CE  3030               	movlw	(low (main@r_data| 0))& (0+255)
  1021  07CF  00AD               	movwf	??_main
  1022  07D0  082D               	movf	??_main,w
  1023  07D1  00F2               	movwf	extract_receive_packet@p_data_buf
  1024  07D2  3051               	movlw	(low (main@r_data_len| 0))& (0+255)
  1025  07D3  00AE               	movwf	??_main+1
  1026  07D4  082E               	movf	??_main+1,w
  1027  07D5  00F3               	movwf	extract_receive_packet@p_data_len_buf
  1028  07D6  304E               	movlw	(low (main@r_data_type| 0))& (0+255)
  1029  07D7  120A  118A  2464  120A  118A  	fcall	_extract_receive_packet
  1030                           
  1031                           ;main.c: 85: for(i = 0; i < r_data_len; i++)
  1032  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1033  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1034  07DE  01D0               	clrf	main@i
  1035  07DF                     l1438:	
  1036  07DF  0851               	movf	main@r_data_len,w
  1037  07E0  0250               	subwf	main@i,w
  1038  07E1  1803               	btfsc	3,0
  1039  07E2  2FA9               	goto	l1420
  1040                           
  1041                           ;main.c: 86: {
  1042                           ;main.c: 87: put_char(r_data[i]);
  1043  07E3  0850               	movf	main@i,w
  1044  07E4  3E30               	addlw	(low (main@r_data| 0))& (0+255)
  1045  07E5  0084               	movwf	4
  1046  07E6  1383               	bcf	3,7	;select IRP bank0
  1047  07E7  0800               	movf	0,w
  1048  07E8  120A  118A  230E  120A  118A  	fcall	_put_char
  1049  07ED  3001               	movlw	1
  1050  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  1051  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  1052  07F0  00AD               	movwf	??_main
  1053  07F1  082D               	movf	??_main,w
  1054  07F2  07D0               	addwf	main@i,f
  1055  07F3  2FDF               	goto	l1438
  1056  07F4                     __end_of_main:	
  1057                           ;main.c: 88: }
  1058                           ;main.c: 89: }
  1059                           ;main.c: 90: }
  1060                           ;main.c: 92: return 0;
  1061                           ;	Return value of _main is never used
  1062                           
  1063                           
  1064                           	psect	text1
  1065  031E                     __ptext1:	
  1066 ;; *************** function _uart_init *****************
  1067 ;; Defined at:
  1068 ;;		line 37 in file "uart.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;		None
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;		None
  1073 ;; Return value:  Size  Location     Type
  1074 ;;		None               void
  1075 ;; Registers used:
  1076 ;;		wreg
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1082 ;;      Params:         0       0       0       0       0
  1083 ;;      Locals:         0       0       0       0       0
  1084 ;;      Temps:          0       0       0       0       0
  1085 ;;      Totals:         0       0       0       0       0
  1086 ;;Total ram usage:        0 bytes
  1087 ;; Hardware stack levels used:    1
  1088 ;; This function calls:
  1089 ;;		Nothing
  1090 ;; This function is called by:
  1091 ;;		_main
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           
  1096                           ;psect for function _uart_init
  1097  031E                     _uart_init:	
  1098                           
  1099                           ;uart.c: 40: TRISC6 = 0;
  1100                           
  1101                           ;incstack = 0
  1102                           ; Regs used in _uart_init: [wreg]
  1103  031E  1683               	bsf	3,5	;RP0=1, select bank1
  1104  031F  1303               	bcf	3,6	;RP1=0, select bank1
  1105  0320  1307               	bcf	7,6	;volatile
  1106                           
  1107                           ;uart.c: 41: TRISC7 = 1;
  1108  0321  1787               	bsf	7,7	;volatile
  1109                           
  1110                           ;uart.c: 44: SPBRG = ((unsigned char)((20000000 / (9600) / 16) - 1));
  1111  0322  3081               	movlw	129
  1112  0323  0099               	movwf	25	;volatile
  1113                           
  1114                           ;uart.c: 45: TXSTA = ((1 << 5) | (1 << 2));
  1115  0324  3024               	movlw	36
  1116  0325  0098               	movwf	24	;volatile
  1117                           
  1118                           ;uart.c: 46: RCSTA = ((1 << 7) | (1 << 4));
  1119  0326  3090               	movlw	144
  1120  0327  1283               	bcf	3,5	;RP0=0, select bank0
  1121  0328  1303               	bcf	3,6	;RP1=0, select bank0
  1122  0329  0098               	movwf	24	;volatile
  1123  032A  0008               	return
  1124  032B                     __end_of_uart_init:	
  1125                           
  1126                           	psect	text2
  1127  033A                     __ptext2:	
  1128 ;; *************** function _spi_master_start *****************
  1129 ;; Defined at:
  1130 ;;		line 37 in file "spi_master.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;		None               void
  1137 ;; Registers used:
  1138 ;;		None
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1144 ;;      Params:         0       0       0       0       0
  1145 ;;      Locals:         0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0
  1147 ;;      Totals:         0       0       0       0       0
  1148 ;;Total ram usage:        0 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		_main
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           
  1158                           ;psect for function _spi_master_start
  1159  033A                     _spi_master_start:	
  1160                           
  1161                           ;spi_master.c: 40: TRISCbits.TRISC3 = 0;
  1162                           
  1163                           ;incstack = 0
  1164                           ; Regs used in _spi_master_start: []
  1165  033A  1683               	bsf	3,5	;RP0=1, select bank1
  1166  033B  1303               	bcf	3,6	;RP1=0, select bank1
  1167  033C  1187               	bcf	7,3	;volatile
  1168                           
  1169                           ;spi_master.c: 41: TRISCbits.TRISC4 = 1;
  1170  033D  1607               	bsf	7,4	;volatile
  1171                           
  1172                           ;spi_master.c: 42: TRISCbits.TRISC5 = 0;
  1173  033E  1287               	bcf	7,5	;volatile
  1174                           
  1175                           ;spi_master.c: 45: TRISCbits.TRISC2 = 0;
  1176  033F  1107               	bcf	7,2	;volatile
  1177                           
  1178                           ;spi_master.c: 46: TRISCbits.TRISC0 = 0;
  1179  0340  1007               	bcf	7,0	;volatile
  1180                           
  1181                           ;spi_master.c: 47: TRISCbits.TRISC1 = 0;
  1182  0341  1087               	bcf	7,1	;volatile
  1183                           
  1184                           ;spi_master.c: 50: SSPCONbits.SSPEN = 0;
  1185  0342  1283               	bcf	3,5	;RP0=0, select bank0
  1186  0343  1303               	bcf	3,6	;RP1=0, select bank0
  1187  0344  1294               	bcf	20,5	;volatile
  1188                           
  1189                           ;spi_master.c: 53: SSPSTATbits.SMP = 0;
  1190  0345  1683               	bsf	3,5	;RP0=1, select bank1
  1191  0346  1303               	bcf	3,6	;RP1=0, select bank1
  1192  0347  1394               	bcf	20,7	;volatile
  1193                           
  1194                           ;spi_master.c: 54: SSPCONbits.CKP = 0;
  1195  0348  1283               	bcf	3,5	;RP0=0, select bank0
  1196  0349  1303               	bcf	3,6	;RP1=0, select bank0
  1197  034A  1214               	bcf	20,4	;volatile
  1198                           
  1199                           ;spi_master.c: 55: SSPSTATbits.CKE = 0;
  1200  034B  1683               	bsf	3,5	;RP0=1, select bank1
  1201  034C  1303               	bcf	3,6	;RP1=0, select bank1
  1202  034D  1314               	bcf	20,6	;volatile
  1203                           
  1204                           ;spi_master.c: 58: SSPCONbits.SSPM3 = 0;
  1205  034E  1283               	bcf	3,5	;RP0=0, select bank0
  1206  034F  1303               	bcf	3,6	;RP1=0, select bank0
  1207  0350  1194               	bcf	20,3	;volatile
  1208                           
  1209                           ;spi_master.c: 59: SSPCONbits.SSPM2 = 0;
  1210  0351  1114               	bcf	20,2	;volatile
  1211                           
  1212                           ;spi_master.c: 60: SSPCONbits.SSPM1 = 0;
  1213  0352  1094               	bcf	20,1	;volatile
  1214                           
  1215                           ;spi_master.c: 61: SSPCONbits.SSPM0 = 0;
  1216  0353  1014               	bcf	20,0	;volatile
  1217                           
  1218                           ;spi_master.c: 64: PORTCbits.RC2 = 1;
  1219  0354  1507               	bsf	7,2	;volatile
  1220                           
  1221                           ;spi_master.c: 65: PORTCbits.RC0 = 1;
  1222  0355  1407               	bsf	7,0	;volatile
  1223                           
  1224                           ;spi_master.c: 66: PORTCbits.RC1 = 1;
  1225  0356  1487               	bsf	7,1	;volatile
  1226                           
  1227                           ;spi_master.c: 69: SSPCONbits.SSPEN = 1;
  1228  0357  1694               	bsf	20,5	;volatile
  1229  0358  0008               	return
  1230  0359                     __end_of_spi_master_start:	
  1231                           
  1232                           	psect	text3
  1233  05B8                     __ptext3:	
  1234 ;; *************** function _sent_data_set *****************
  1235 ;; Defined at:
  1236 ;;		line 97 in file "protocol.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  p_data          1    wreg     PTR void 
  1239 ;;		 -> main@cmd(1), 
  1240 ;;  data_len        1   12[COMMON] unsigned char 
  1241 ;;  byte_of_type    1   13[COMMON] unsigned char 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  p_data          1   12[BANK0 ] PTR void 
  1244 ;;		 -> main@cmd(1), 
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      unsigned char 
  1247 ;; Registers used:
  1248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1254 ;;      Params:         2       0       0       0       0
  1255 ;;      Locals:         0       1       0       0       0
  1256 ;;      Temps:          0       5       0       0       0
  1257 ;;      Totals:         2       6       0       0       0
  1258 ;;Total ram usage:        8 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; Hardware stack levels required when called:    3
  1261 ;; This function calls:
  1262 ;;		___wmul
  1263 ;;		_double_data_set
  1264 ;;		_uint16_data_set
  1265 ;;		_uint8_data_set
  1266 ;; This function is called by:
  1267 ;;		_main
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           
  1272                           ;psect for function _sent_data_set
  1273  05B8                     _sent_data_set:	
  1274                           
  1275                           ;incstack = 0
  1276                           ; Regs used in _sent_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1277                           ;sent_data_set@p_data stored from wreg
  1278  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  1279  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  1280  05BA  00AC               	movwf	sent_data_set@p_data
  1281                           
  1282                           ;protocol.c: 100: if((30 - tx_packet.payload_len) - (data_len * (byte_of_type + 1)) < 0)
  1283  05BB  087D               	movf	sent_data_set@byte_of_type,w
  1284  05BC  3E01               	addlw	1
  1285  05BD  00F0               	movwf	___wmul@multiplier
  1286  05BE  3000               	movlw	0
  1287  05BF  1803               	skipnc
  1288  05C0  3001               	movlw	1
  1289  05C1  00F1               	movwf	___wmul@multiplier+1
  1290  05C2  087C               	movf	sent_data_set@data_len,w
  1291  05C3  00A7               	movwf	??_sent_data_set
  1292  05C4  01A8               	clrf	??_sent_data_set+1
  1293  05C5  0827               	movf	??_sent_data_set,w
  1294  05C6  00F2               	movwf	___wmul@multiplicand
  1295  05C7  0828               	movf	??_sent_data_set+1,w
  1296  05C8  00F3               	movwf	___wmul@multiplicand+1
  1297  05C9  120A  118A  237A  120A  118A  	fcall	___wmul
  1298  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  1299  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  1300  05D0  0821               	movf	(_tx_packet^(0+128)+1),w
  1301  05D1  0770               	addwf	?___wmul,w
  1302  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  1303  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  1304  05D4  00A9               	movwf	??_sent_data_set+2
  1305  05D5  0871               	movf	?___wmul+1,w
  1306  05D6  1803               	skipnc
  1307  05D7  0A71               	incf	?___wmul+1,w
  1308  05D8  00AA               	movwf	??_sent_data_set+3
  1309  05D9  09A9               	comf	??_sent_data_set+2,f
  1310  05DA  09AA               	comf	??_sent_data_set+3,f
  1311  05DB  0AA9               	incf	??_sent_data_set+2,f
  1312  05DC  1903               	skipnz
  1313  05DD  0AAA               	incf	??_sent_data_set+3,f
  1314  05DE  301E               	movlw	30
  1315  05DF  0729               	addwf	??_sent_data_set+2,w
  1316  05E0  082A               	movf	??_sent_data_set+3,w
  1317  05E1  1803               	skipnc
  1318  05E2  0A2A               	incf	??_sent_data_set+3,w
  1319  05E3  3E00               	addlw	0
  1320  05E4  00AB               	movwf	??_sent_data_set+4
  1321  05E5  1BAB               	btfsc	??_sent_data_set+4,7
  1322  05E6  0008               	return
  1323  05E7  2E09               	goto	l1300
  1324  05E8                     l1292:	
  1325                           ;protocol.c: 107: {
  1326                           ;protocol.c: 108: case 1:
  1327                           
  1328                           ;protocol.c: 103: }
  1329                           ;protocol.c: 106: switch(byte_of_type)
  1330                           
  1331                           ;protocol.c: 101: {
  1332                           ;protocol.c: 102: return 0xff;
  1333                           ;	Return value of _sent_data_set is never used
  1334                           
  1335                           
  1336                           ;protocol.c: 109: uint8_data_set((uint8_t *)p_data, data_len);
  1337  05E8  087C               	movf	sent_data_set@data_len,w
  1338  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  1339  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  1340  05EB  00A7               	movwf	??_sent_data_set
  1341  05EC  0827               	movf	??_sent_data_set,w
  1342  05ED  00F0               	movwf	uint8_data_set@data_len
  1343  05EE  082C               	movf	sent_data_set@p_data,w
  1344  05EF  120A  118A  239B   	fcall	_uint8_data_set
  1345                           
  1346                           ;protocol.c: 110: break;
  1347  05F2  0008               	return
  1348  05F3                     l1294:	
  1349                           ;protocol.c: 111: case 2:
  1350                           
  1351                           
  1352                           ;protocol.c: 112: uint16_data_set((uint16_t *)p_data, data_len);
  1353  05F3  087C               	movf	sent_data_set@data_len,w
  1354  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  1355  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  1356  05F6  00A7               	movwf	??_sent_data_set
  1357  05F7  0827               	movf	??_sent_data_set,w
  1358  05F8  00F5               	movwf	uint16_data_set@data_len
  1359  05F9  082C               	movf	sent_data_set@p_data,w
  1360  05FA  120A  118A  2492   	fcall	_uint16_data_set
  1361                           
  1362                           ;protocol.c: 113: break;
  1363  05FD  0008               	return
  1364  05FE                     l1296:	
  1365                           ;protocol.c: 114: case 4:
  1366                           
  1367                           
  1368                           ;protocol.c: 115: double_data_set((double *)p_data, data_len);
  1369  05FE  087C               	movf	sent_data_set@data_len,w
  1370  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1371  0600  1303               	bcf	3,6	;RP1=0, select bank0
  1372  0601  00A7               	movwf	??_sent_data_set
  1373  0602  0827               	movf	??_sent_data_set,w
  1374  0603  00F9               	movwf	double_data_set@data_len
  1375  0604  082C               	movf	sent_data_set@p_data,w
  1376  0605  120A  118A  24C5   	fcall	_double_data_set
  1377                           
  1378                           ;protocol.c: 119: }
  1379                           
  1380                           ;protocol.c: 118: return 0xff;
  1381                           ;	Return value of _sent_data_set is never used
  1382                           
  1383                           ;protocol.c: 117: default:
  1384                           
  1385                           ;protocol.c: 116: break;
  1386  0608  0008               	return
  1387  0609                     l1300:	
  1388  0609  087D               	movf	sent_data_set@byte_of_type,w
  1389                           
  1390                           ; Switch size 1, requested type "space"
  1391                           ; Number of cases is 3, Range of values is 1 to 4
  1392                           ; switch strategies available:
  1393                           ; Name         Instructions Cycles
  1394                           ; simple_byte           10     6 (average)
  1395                           ; direct_byte           23    11 (fixed)
  1396                           ; jumptable            263     9 (fixed)
  1397                           ;	Chosen strategy is simple_byte
  1398  060A  3A01               	xorlw	1	; case 1
  1399  060B  1903               	skipnz
  1400  060C  2DE8               	goto	l1292
  1401  060D  3A03               	xorlw	3	; case 2
  1402  060E  1903               	skipnz
  1403  060F  2DF3               	goto	l1294
  1404  0610  3A06               	xorlw	6	; case 4
  1405  0611  1903               	skipnz
  1406  0612  2DFE               	goto	l1296
  1407  0613  2E14               	goto	l181
  1408  0614                     l181:	
  1409                           ;protocol.c: 122: return (uint8_t)(30 - tx_packet.payload_len);
  1410                           ;	Return value of _sent_data_set is never used
  1411                           
  1412  0614  0008               	return
  1413  0615                     __end_of_sent_data_set:	
  1414                           
  1415                           	psect	text4
  1416  039B                     __ptext4:	
  1417 ;; *************** function _uint8_data_set *****************
  1418 ;; Defined at:
  1419 ;;		line 365 in file "protocol.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  p_data          1    wreg     PTR unsigned char 
  1422 ;;		 -> main@cmd(1), 
  1423 ;;  data_len        1    0[COMMON] unsigned char 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  p_data          1    2[COMMON] PTR unsigned char 
  1426 ;;		 -> main@cmd(1), 
  1427 ;; Return value:  Size  Location     Type
  1428 ;;		None               void
  1429 ;; Registers used:
  1430 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1436 ;;      Params:         1       0       0       0       0
  1437 ;;      Locals:         1       0       0       0       0
  1438 ;;      Temps:          1       0       0       0       0
  1439 ;;      Totals:         3       0       0       0       0
  1440 ;;Total ram usage:        3 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		_sent_data_set
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           
  1450                           ;psect for function _uint8_data_set
  1451  039B                     _uint8_data_set:	
  1452                           
  1453                           ;incstack = 0
  1454                           ; Regs used in _uint8_data_set: [wreg-fsr0h+status,2+status,0]
  1455                           ;uint8_data_set@p_data stored from wreg
  1456  039B  00F2               	movwf	uint8_data_set@p_data
  1457  039C                     l224:	
  1458                           ;protocol.c: 367: while(data_len)
  1459                           
  1460  039C  0870               	movf	uint8_data_set@data_len,w
  1461  039D  1903               	btfsc	3,2
  1462  039E  0008               	return
  1463                           
  1464                           ;protocol.c: 368: {
  1465                           ;protocol.c: 369: tx_packet.payload[tx_packet.payload_len++] = 1;
  1466  039F  1683               	bsf	3,5	;RP0=1, select bank1
  1467  03A0  1303               	bcf	3,6	;RP1=0, select bank1
  1468  03A1  0821               	movf	(_tx_packet^(0+128)+1),w
  1469  03A2  3EA2               	addlw	(low ((_tx_packet| 0+2)))& (0+255)
  1470  03A3  0084               	movwf	4
  1471  03A4  1383               	bcf	3,7	;select IRP bank1
  1472  03A5  0180               	clrf	0
  1473  03A6  0A80               	incf	0,f
  1474  03A7  3001               	movlw	1
  1475  03A8  00F1               	movwf	??_uint8_data_set
  1476  03A9  0871               	movf	??_uint8_data_set,w
  1477  03AA  07A1               	addwf	(_tx_packet^(0+128)+1),f
  1478                           
  1479                           ;protocol.c: 370: tx_packet.payload[tx_packet.payload_len++] = *p_data++;
  1480  03AB  0872               	movf	uint8_data_set@p_data,w
  1481  03AC  0084               	movwf	4
  1482  03AD  0800               	movf	0,w
  1483  03AE  00F1               	movwf	??_uint8_data_set
  1484  03AF  0821               	movf	(_tx_packet^(0+128)+1),w
  1485  03B0  3EA2               	addlw	(low ((_tx_packet| 0+2)))& (0+255)
  1486  03B1  0084               	movwf	4
  1487  03B2  0871               	movf	??_uint8_data_set,w
  1488  03B3  0080               	movwf	0
  1489  03B4  3001               	movlw	1
  1490  03B5  00F1               	movwf	??_uint8_data_set
  1491  03B6  0871               	movf	??_uint8_data_set,w
  1492  03B7  07F2               	addwf	uint8_data_set@p_data,f
  1493  03B8  3001               	movlw	1
  1494  03B9  00F1               	movwf	??_uint8_data_set
  1495  03BA  0871               	movf	??_uint8_data_set,w
  1496  03BB  07A1               	addwf	(_tx_packet^(0+128)+1),f
  1497                           
  1498                           ;protocol.c: 371: data_len--;
  1499  03BC  3001               	movlw	1
  1500  03BD  02F0               	subwf	uint8_data_set@data_len,f
  1501  03BE  2B9C               	goto	l224
  1502  03BF                     __end_of_uint8_data_set:	
  1503                           
  1504                           	psect	text5
  1505  0492                     __ptext5:	
  1506 ;; *************** function _uint16_data_set *****************
  1507 ;; Defined at:
  1508 ;;		line 387 in file "protocol.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  p_data          1    wreg     PTR unsigned int 
  1511 ;;		 -> main@cmd(1), 
  1512 ;;  data_len        1    5[COMMON] unsigned char 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  p_data          1   10[COMMON] PTR unsigned int 
  1515 ;;		 -> main@cmd(1), 
  1516 ;;  buf             3    7[COMMON] unsigned char [3]
  1517 ;;  i               1   11[COMMON] unsigned char 
  1518 ;; Return value:  Size  Location     Type
  1519 ;;		None               void
  1520 ;; Registers used:
  1521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1527 ;;      Params:         1       0       0       0       0
  1528 ;;      Locals:         5       0       0       0       0
  1529 ;;      Temps:          1       0       0       0       0
  1530 ;;      Totals:         7       0       0       0       0
  1531 ;;Total ram usage:        7 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; Hardware stack levels required when called:    2
  1534 ;; This function calls:
  1535 ;;		_uint16_to_byte_array
  1536 ;; This function is called by:
  1537 ;;		_sent_data_set
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           
  1542                           ;psect for function _uint16_data_set
  1543  0492                     _uint16_data_set:	
  1544                           
  1545                           ;incstack = 0
  1546                           ; Regs used in _uint16_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1547                           ;uint16_data_set@p_data stored from wreg
  1548  0492  00FA               	movwf	uint16_data_set@p_data
  1549  0493                     l230:	
  1550                           ;protocol.c: 389: uint8_t buf[3];
  1551                           ;protocol.c: 390: uint8_t i;
  1552                           ;protocol.c: 392: while(data_len)
  1553                           
  1554  0493  0875               	movf	uint16_data_set@data_len,w
  1555  0494  1903               	btfsc	3,2
  1556  0495  0008               	return
  1557                           
  1558                           ;protocol.c: 393: {
  1559                           ;protocol.c: 394: uint16_to_byte_array(p_data++, buf);
  1560  0496  3077               	movlw	(low (uint16_data_set@buf| 0))& (0+255)
  1561  0497  00F6               	movwf	??_uint16_data_set
  1562  0498  0876               	movf	??_uint16_data_set,w
  1563  0499  00F0               	movwf	uint16_to_byte_array@p_data_array
  1564  049A  087A               	movf	uint16_data_set@p_data,w
  1565  049B  120A  118A  23BF  120A  118A  	fcall	_uint16_to_byte_array
  1566  04A0  3002               	movlw	2
  1567  04A1  00F6               	movwf	??_uint16_data_set
  1568  04A2  0876               	movf	??_uint16_data_set,w
  1569  04A3  07FA               	addwf	uint16_data_set@p_data,f
  1570                           
  1571                           ;protocol.c: 396: for(i = 0; i < 3; i++)
  1572  04A4  01FB               	clrf	uint16_data_set@i
  1573  04A5  3003               	movlw	3
  1574  04A6  027B               	subwf	uint16_data_set@i,w
  1575  04A7  1803               	btfsc	3,0
  1576  04A8  2CC2               	goto	l1204
  1577  04A9                     l1196:	
  1578                           
  1579                           ;protocol.c: 397: {
  1580                           ;protocol.c: 398: tx_packet.payload[tx_packet.payload_len++] = buf[i];
  1581  04A9  087B               	movf	uint16_data_set@i,w
  1582  04AA  3E77               	addlw	(low (uint16_data_set@buf| 0))& (0+255)
  1583  04AB  0084               	movwf	4
  1584  04AC  0800               	movf	0,w
  1585  04AD  00F6               	movwf	??_uint16_data_set
  1586  04AE  1683               	bsf	3,5	;RP0=1, select bank1
  1587  04AF  1303               	bcf	3,6	;RP1=0, select bank1
  1588  04B0  0821               	movf	(_tx_packet^(0+128)+1),w
  1589  04B1  3EA2               	addlw	(low ((_tx_packet| 0+2)))& (0+255)
  1590  04B2  0084               	movwf	4
  1591  04B3  0876               	movf	??_uint16_data_set,w
  1592  04B4  1383               	bcf	3,7	;select IRP bank1
  1593  04B5  0080               	movwf	0
  1594  04B6  3001               	movlw	1
  1595  04B7  00F6               	movwf	??_uint16_data_set
  1596  04B8  0876               	movf	??_uint16_data_set,w
  1597  04B9  07A1               	addwf	(_tx_packet^(0+128)+1),f
  1598  04BA  3001               	movlw	1
  1599  04BB  00F6               	movwf	??_uint16_data_set
  1600  04BC  0876               	movf	??_uint16_data_set,w
  1601  04BD  07FB               	addwf	uint16_data_set@i,f
  1602  04BE  3003               	movlw	3
  1603  04BF  027B               	subwf	uint16_data_set@i,w
  1604  04C0  1C03               	skipc
  1605  04C1  2CA9               	goto	l1196
  1606  04C2                     l1204:	
  1607                           
  1608                           ;protocol.c: 399: }
  1609                           ;protocol.c: 400: data_len--;
  1610  04C2  3001               	movlw	1
  1611  04C3  02F5               	subwf	uint16_data_set@data_len,f
  1612  04C4  2C93               	goto	l230
  1613  04C5                     __end_of_uint16_data_set:	
  1614                           
  1615                           	psect	text6
  1616  03BF                     __ptext6:	
  1617 ;; *************** function _uint16_to_byte_array *****************
  1618 ;; Defined at:
  1619 ;;		line 445 in file "protocol.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;  p_data          1    wreg     PTR unsigned int 
  1622 ;;		 -> main@cmd(1), 
  1623 ;;  p_data_array    1    0[COMMON] PTR unsigned char 
  1624 ;;		 -> uint16_data_set@buf(3), 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  p_data          1    4[COMMON] PTR unsigned int 
  1627 ;;		 -> main@cmd(1), 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;		None               void
  1630 ;; Registers used:
  1631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1637 ;;      Params:         1       0       0       0       0
  1638 ;;      Locals:         1       0       0       0       0
  1639 ;;      Temps:          3       0       0       0       0
  1640 ;;      Totals:         5       0       0       0       0
  1641 ;;Total ram usage:        5 bytes
  1642 ;; Hardware stack levels used:    2
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_uint16_data_set
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           
  1651                           ;psect for function _uint16_to_byte_array
  1652  03BF                     _uint16_to_byte_array:	
  1653                           
  1654                           ;incstack = 0
  1655                           ; Regs used in _uint16_to_byte_array: [wreg-fsr0h+status,2+status,0+pclath]
  1656                           ;uint16_to_byte_array@p_data stored from wreg
  1657  03BF  00F4               	movwf	uint16_to_byte_array@p_data
  1658                           
  1659                           ;protocol.c: 447: const uint16_t bit_mask = 0b0000000011111111;
  1660                           ;protocol.c: 450: p_data_array[0] = 2;
  1661  03C0  3002               	movlw	2
  1662  03C1  00F1               	movwf	??_uint16_to_byte_array
  1663  03C2  0870               	movf	uint16_to_byte_array@p_data_array,w
  1664  03C3  0084               	movwf	4
  1665  03C4  0871               	movf	??_uint16_to_byte_array,w
  1666  03C5  0080               	movwf	0
  1667                           
  1668                           ;protocol.c: 451: p_data_array[1] = (uint8_t)(*p_data >> 8);
  1669  03C6  0874               	movf	uint16_to_byte_array@p_data,w
  1670  03C7  0084               	movwf	4
  1671  03C8  1383               	bcf	3,7	;select IRP bank0
  1672  03C9  0800               	movf	0,w
  1673  03CA  00F1               	movwf	??_uint16_to_byte_array
  1674  03CB  0A84               	incf	4,f
  1675  03CC  0800               	movf	0,w
  1676  03CD  00F2               	movwf	??_uint16_to_byte_array+1
  1677  03CE  0872               	movf	??_uint16_to_byte_array+1,w
  1678  03CF  00F3               	movwf	??_uint16_to_byte_array+2
  1679  03D0  0A70               	incf	uint16_to_byte_array@p_data_array,w
  1680  03D1  0084               	movwf	4
  1681  03D2  0873               	movf	??_uint16_to_byte_array+2,w
  1682  03D3  0080               	movwf	0
  1683                           
  1684                           ;protocol.c: 452: p_data_array[2] = (uint8_t)(*p_data & bit_mask);
  1685  03D4  301F               	movlw	low (uint16_to_byte_array@bit_mask-__stringbase)
  1686  03D5  0084               	movwf	4
  1687  03D6  120A  118A  2003   	fcall	stringdir
  1688  03D9  00F1               	movwf	??_uint16_to_byte_array
  1689  03DA  0874               	movf	uint16_to_byte_array@p_data,w
  1690  03DB  0084               	movwf	4
  1691  03DC  0800               	movf	0,w
  1692  03DD  0571               	andwf	??_uint16_to_byte_array,w
  1693  03DE  00F2               	movwf	??_uint16_to_byte_array+1
  1694  03DF  0870               	movf	uint16_to_byte_array@p_data_array,w
  1695  03E0  3E02               	addlw	2
  1696  03E1  0084               	movwf	4
  1697  03E2  0872               	movf	??_uint16_to_byte_array+1,w
  1698  03E3  0080               	movwf	0
  1699  03E4  0008               	return
  1700  03E5                     __end_of_uint16_to_byte_array:	
  1701                           
  1702                           	psect	text7
  1703  04C5                     __ptext7:	
  1704 ;; *************** function _double_data_set *****************
  1705 ;; Defined at:
  1706 ;;		line 416 in file "protocol.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  p_data          1    wreg     PTR 
  1709 ;;		 -> main@cmd(1), 
  1710 ;;  data_len        1    9[COMMON] unsigned char 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  p_data          1    5[BANK0 ] PTR 
  1713 ;;		 -> main@cmd(1), 
  1714 ;;  buf             5    0[BANK0 ] unsigned char [5]
  1715 ;;  i               1    6[BANK0 ] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;		None               void
  1718 ;; Registers used:
  1719 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1725 ;;      Params:         1       0       0       0       0
  1726 ;;      Locals:         0       7       0       0       0
  1727 ;;      Temps:          1       0       0       0       0
  1728 ;;      Totals:         2       7       0       0       0
  1729 ;;Total ram usage:        9 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    1
  1732 ;; This function calls:
  1733 ;;		_double_to_byte_array
  1734 ;; This function is called by:
  1735 ;;		_sent_data_set
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           
  1740                           ;psect for function _double_data_set
  1741  04C5                     _double_data_set:	
  1742                           
  1743                           ;incstack = 0
  1744                           ; Regs used in _double_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1745                           ;double_data_set@p_data stored from wreg
  1746  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  1747  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  1748  04C7  00A5               	movwf	double_data_set@p_data
  1749  04C8                     l238:	
  1750                           ;protocol.c: 418: uint8_t buf[5];
  1751                           ;protocol.c: 419: uint8_t i;
  1752                           ;protocol.c: 421: while(data_len)
  1753                           
  1754  04C8  0879               	movf	double_data_set@data_len,w
  1755  04C9  1903               	btfsc	3,2
  1756  04CA  0008               	return
  1757                           
  1758                           ;protocol.c: 422: {
  1759                           ;protocol.c: 423: double_to_byte_array(p_data++, buf);
  1760  04CB  3020               	movlw	(low (double_data_set@buf| 0))& (0+255)
  1761  04CC  00FA               	movwf	??_double_data_set
  1762  04CD  087A               	movf	??_double_data_set,w
  1763  04CE  00F0               	movwf	double_to_byte_array@p_data_array
  1764  04CF  0825               	movf	double_data_set@p_data,w
  1765  04D0  120A  118A  23E5  120A  118A  	fcall	_double_to_byte_array
  1766  04D5  3003               	movlw	3
  1767  04D6  00FA               	movwf	??_double_data_set
  1768  04D7  087A               	movf	??_double_data_set,w
  1769  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  1770  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  1771  04DA  07A5               	addwf	double_data_set@p_data,f
  1772                           
  1773                           ;protocol.c: 425: for(i = 0; i < 5; i++)
  1774  04DB  01A6               	clrf	double_data_set@i
  1775  04DC  3005               	movlw	5
  1776  04DD  0226               	subwf	double_data_set@i,w
  1777  04DE  1803               	btfsc	3,0
  1778  04DF  2CFB               	goto	l1226
  1779  04E0                     l1218:	
  1780                           
  1781                           ;protocol.c: 426: {
  1782                           ;protocol.c: 427: tx_packet.payload[tx_packet.payload_len++] = buf[i];
  1783  04E0  0826               	movf	double_data_set@i,w
  1784  04E1  3E20               	addlw	(low (double_data_set@buf| 0))& (0+255)
  1785  04E2  0084               	movwf	4
  1786  04E3  1383               	bcf	3,7	;select IRP bank0
  1787  04E4  0800               	movf	0,w
  1788  04E5  00FA               	movwf	??_double_data_set
  1789  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  1790  04E7  1303               	bcf	3,6	;RP1=0, select bank1
  1791  04E8  0821               	movf	(_tx_packet^(0+128)+1),w
  1792  04E9  3EA2               	addlw	(low ((_tx_packet| 0+2)))& (0+255)
  1793  04EA  0084               	movwf	4
  1794  04EB  087A               	movf	??_double_data_set,w
  1795  04EC  0080               	movwf	0
  1796  04ED  3001               	movlw	1
  1797  04EE  00FA               	movwf	??_double_data_set
  1798  04EF  087A               	movf	??_double_data_set,w
  1799  04F0  07A1               	addwf	(_tx_packet^(0+128)+1),f
  1800  04F1  3001               	movlw	1
  1801  04F2  00FA               	movwf	??_double_data_set
  1802  04F3  087A               	movf	??_double_data_set,w
  1803  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  1804  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  1805  04F6  07A6               	addwf	double_data_set@i,f
  1806  04F7  3005               	movlw	5
  1807  04F8  0226               	subwf	double_data_set@i,w
  1808  04F9  1C03               	skipc
  1809  04FA  2CE0               	goto	l1218
  1810  04FB                     l1226:	
  1811                           
  1812                           ;protocol.c: 428: }
  1813                           ;protocol.c: 429: data_len--;
  1814  04FB  3001               	movlw	1
  1815  04FC  02F9               	subwf	double_data_set@data_len,f
  1816  04FD  2CC8               	goto	l238
  1817  04FE                     __end_of_double_data_set:	
  1818                           
  1819                           	psect	text8
  1820  03E5                     __ptext8:	
  1821 ;; *************** function _double_to_byte_array *****************
  1822 ;; Defined at:
  1823 ;;		line 467 in file "protocol.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  p_data          1    wreg     PTR 
  1826 ;;		 -> main@cmd(1), 
  1827 ;;  p_data_array    1    0[COMMON] PTR unsigned char 
  1828 ;;		 -> double_data_set@buf(5), 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  p_data          1    7[COMMON] PTR 
  1831 ;;		 -> main@cmd(1), 
  1832 ;;  converter       4    3[COMMON] struct .
  1833 ;;  i               1    8[COMMON] unsigned char 
  1834 ;; Return value:  Size  Location     Type
  1835 ;;		None               void
  1836 ;; Registers used:
  1837 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1843 ;;      Params:         1       0       0       0       0
  1844 ;;      Locals:         6       0       0       0       0
  1845 ;;      Temps:          2       0       0       0       0
  1846 ;;      Totals:         9       0       0       0       0
  1847 ;;Total ram usage:        9 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; This function calls:
  1850 ;;		Nothing
  1851 ;; This function is called by:
  1852 ;;		_double_data_set
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           
  1857                           ;psect for function _double_to_byte_array
  1858  03E5                     _double_to_byte_array:	
  1859                           
  1860                           ;incstack = 0
  1861                           ; Regs used in _double_to_byte_array: [wreg-fsr0h+status,2+status,0]
  1862                           ;double_to_byte_array@p_data stored from wreg
  1863  03E5  00F7               	movwf	double_to_byte_array@p_data
  1864                           
  1865                           ;protocol.c: 469: uint8_t i;
  1866                           ;protocol.c: 470: union
  1867                           ;protocol.c: 471: {
  1868                           ;protocol.c: 472: double data;
  1869                           ;protocol.c: 473: uint8_t array[4];
  1870                           ;protocol.c: 474: } converter;
  1871                           ;protocol.c: 477: converter.data = *p_data;
  1872  03E6  0877               	movf	double_to_byte_array@p_data,w
  1873  03E7  0084               	movwf	4
  1874  03E8  1383               	bcf	3,7	;select IRP bank0
  1875  03E9  0800               	movf	0,w
  1876  03EA  00F3               	movwf	double_to_byte_array@converter
  1877  03EB  0A84               	incf	4,f
  1878  03EC  0800               	movf	0,w
  1879  03ED  00F4               	movwf	double_to_byte_array@converter+1
  1880  03EE  0A84               	incf	4,f
  1881  03EF  0800               	movf	0,w
  1882  03F0  00F5               	movwf	double_to_byte_array@converter+2
  1883                           
  1884                           ;protocol.c: 480: p_data_array[0] = 4;
  1885  03F1  3004               	movlw	4
  1886  03F2  00F1               	movwf	??_double_to_byte_array
  1887  03F3  0870               	movf	double_to_byte_array@p_data_array,w
  1888  03F4  0084               	movwf	4
  1889  03F5  0871               	movf	??_double_to_byte_array,w
  1890  03F6  0080               	movwf	0
  1891                           
  1892                           ;protocol.c: 483: for(i = 0; i < 4; i++)
  1893  03F7  01F8               	clrf	double_to_byte_array@i
  1894  03F8                     L1:	
  1895  03F8  3004               	movlw	4
  1896  03F9  0278               	subwf	double_to_byte_array@i,w
  1897  03FA  1803               	btfsc	3,0
  1898  03FB  0008               	return
  1899                           
  1900                           ;protocol.c: 484: {
  1901                           ;protocol.c: 485: p_data_array[i + 1] = converter.array[i];
  1902  03FC  0878               	movf	double_to_byte_array@i,w
  1903  03FD  3E73               	addlw	(low (double_to_byte_array@converter| 0))& (0+255)
  1904  03FE  0084               	movwf	4
  1905  03FF  0800               	movf	0,w
  1906  0400  00F1               	movwf	??_double_to_byte_array
  1907  0401  0878               	movf	double_to_byte_array@i,w
  1908  0402  3E01               	addlw	1
  1909  0403  0770               	addwf	double_to_byte_array@p_data_array,w
  1910  0404  00F2               	movwf	??_double_to_byte_array+1
  1911  0405  0872               	movf	??_double_to_byte_array+1,w
  1912  0406  0084               	movwf	4
  1913  0407  0871               	movf	??_double_to_byte_array,w
  1914  0408  0080               	movwf	0
  1915  0409  3001               	movlw	1
  1916  040A  00F1               	movwf	??_double_to_byte_array
  1917  040B  0871               	movf	??_double_to_byte_array,w
  1918  040C  07F8               	addwf	double_to_byte_array@i,f
  1919  040D  2BF8               	goto	L1
  1920  040E                     __end_of_double_to_byte_array:	
  1921                           
  1922                           	psect	text9
  1923  037A                     __ptext9:	
  1924 ;; *************** function ___wmul *****************
  1925 ;; Defined at:
  1926 ;;		line 15 in file "/Applications/microchip/xc8/v1.35/sources/common/Umul16.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  multiplier      2    0[COMMON] unsigned int 
  1929 ;;  multiplicand    2    2[COMMON] unsigned int 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  product         2    4[COMMON] unsigned int 
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  2    0[COMMON] unsigned int 
  1934 ;; Registers used:
  1935 ;;		wreg, status,2, status,0
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1941 ;;      Params:         4       0       0       0       0
  1942 ;;      Locals:         2       0       0       0       0
  1943 ;;      Temps:          0       0       0       0       0
  1944 ;;      Totals:         6       0       0       0       0
  1945 ;;Total ram usage:        6 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_sent_data_set
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           
  1955                           ;psect for function ___wmul
  1956  037A                     ___wmul:	
  1957                           
  1958                           ;incstack = 0
  1959                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1960  037A  01F4               	clrf	___wmul@product
  1961  037B  01F5               	clrf	___wmul@product+1
  1962  037C                     l1258:	
  1963  037C  1C70               	btfss	___wmul@multiplier,0
  1964  037D  2B84               	goto	l370
  1965  037E  0872               	movf	___wmul@multiplicand,w
  1966  037F  07F4               	addwf	___wmul@product,f
  1967  0380  1803               	skipnc
  1968  0381  0AF5               	incf	___wmul@product+1,f
  1969  0382  0873               	movf	___wmul@multiplicand+1,w
  1970  0383  07F5               	addwf	___wmul@product+1,f
  1971  0384                     l370:	
  1972  0384  3001               	movlw	1
  1973  0385                     u565:	
  1974  0385  1003               	clrc
  1975  0386  0DF2               	rlf	___wmul@multiplicand,f
  1976  0387  0DF3               	rlf	___wmul@multiplicand+1,f
  1977  0388  3EFF               	addlw	-1
  1978  0389  1D03               	skipz
  1979  038A  2B85               	goto	u565
  1980  038B  3001               	movlw	1
  1981  038C                     u575:	
  1982  038C  1003               	clrc
  1983  038D  0CF1               	rrf	___wmul@multiplier+1,f
  1984  038E  0CF0               	rrf	___wmul@multiplier,f
  1985  038F  3EFF               	addlw	-1
  1986  0390  1D03               	skipz
  1987  0391  2B8C               	goto	u575
  1988  0392  0870               	movf	___wmul@multiplier,w
  1989  0393  0471               	iorwf	___wmul@multiplier+1,w
  1990  0394  1D03               	btfss	3,2
  1991  0395  2B7C               	goto	l1258
  1992  0396  0875               	movf	___wmul@product+1,w
  1993  0397  00F1               	movwf	?___wmul+1
  1994  0398  0874               	movf	___wmul@product,w
  1995  0399  00F0               	movwf	?___wmul
  1996  039A  0008               	return
  1997  039B                     __end_of___wmul:	
  1998                           
  1999                           	psect	text10
  2000  069A                     __ptext10:	
  2001 ;; *************** function _send_data_master *****************
  2002 ;; Defined at:
  2003 ;;		line 138 in file "protocol.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;  destination     1    wreg     enum E1101
  2006 ;;  data_type       1    4[COMMON] enum E1107
  2007 ;;  data_end_com    1    5[COMMON] enum E1112
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  destination     1   10[COMMON] enum E1101
  2010 ;;  i               2    8[COMMON] int 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;		None               void
  2013 ;; Registers used:
  2014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2020 ;;      Params:         2       0       0       0       0
  2021 ;;      Locals:         3       0       0       0       0
  2022 ;;      Temps:          2       0       0       0       0
  2023 ;;      Totals:         7       0       0       0       0
  2024 ;;Total ram usage:        7 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; Hardware stack levels required when called:    1
  2027 ;; This function calls:
  2028 ;;		_spi_master_send
  2029 ;;		_tx_packet_clear
  2030 ;; This function is called by:
  2031 ;;		_main
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           
  2036                           ;psect for function _send_data_master
  2037  069A                     _send_data_master:	
  2038                           
  2039                           ;incstack = 0
  2040                           ; Regs used in _send_data_master: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2041                           ;send_data_master@destination stored from wreg
  2042  069A  00FA               	movwf	send_data_master@destination
  2043                           
  2044                           ;protocol.c: 140: int i;
  2045                           ;protocol.c: 143: tx_packet.data_type = (uint8_t)data_type;
  2046  069B  0874               	movf	send_data_master@data_type,w
  2047  069C  00F6               	movwf	??_send_data_master
  2048  069D  0876               	movf	??_send_data_master,w
  2049  069E  1683               	bsf	3,5	;RP0=1, select bank1
  2050  069F  1303               	bcf	3,6	;RP1=0, select bank1
  2051  06A0  00A0               	movwf	_tx_packet^(0+128)
  2052                           
  2053                           ;protocol.c: 144: tx_packet.data_end_command = (uint8_t)data_end_command;
  2054  06A1  0875               	movf	send_data_master@data_end_command,w
  2055  06A2  00F6               	movwf	??_send_data_master
  2056  06A3  0876               	movf	??_send_data_master,w
  2057  06A4  00C0               	movwf	(_tx_packet^(0+128)+32)
  2058                           
  2059                           ;protocol.c: 147: spi_master_send(destination, 0b10101010);
  2060  06A5  30AA               	movlw	170
  2061  06A6  00F6               	movwf	??_send_data_master
  2062  06A7  0876               	movf	??_send_data_master,w
  2063  06A8  00F0               	movwf	spi_master_send@data
  2064  06A9  087A               	movf	send_data_master@destination,w
  2065  06AA  120A  118A  24FE  120A  118A  	fcall	_spi_master_send
  2066                           
  2067                           ;protocol.c: 148: _delay((unsigned long)((10)*(20000000/4000.0)));
  2068  06AF  3041               	movlw	65
  2069  06B0  00F7               	movwf	??_send_data_master+1
  2070  06B1  30EE               	movlw	238
  2071  06B2  00F6               	movwf	??_send_data_master
  2072  06B3                     u727:	
  2073  06B3  0BF6               	decfsz	??_send_data_master,f
  2074  06B4  2EB3               	goto	u727
  2075  06B5  0BF7               	decfsz	??_send_data_master+1,f
  2076  06B6  2EB3               	goto	u727
  2077  06B7  0000               	nop
  2078                           
  2079                           ;protocol.c: 151: spi_master_send(destination, 0x01);
  2080  06B8  01F0               	clrf	spi_master_send@data
  2081  06B9  0AF0               	incf	spi_master_send@data,f
  2082  06BA  087A               	movf	send_data_master@destination,w
  2083  06BB  120A  118A  24FE  120A  118A  	fcall	_spi_master_send
  2084                           
  2085                           ;protocol.c: 152: _delay((unsigned long)((10)*(20000000/4000.0)));
  2086  06C0  3041               	movlw	65
  2087  06C1  00F7               	movwf	??_send_data_master+1
  2088  06C2  30EE               	movlw	238
  2089  06C3  00F6               	movwf	??_send_data_master
  2090  06C4                     u737:	
  2091  06C4  0BF6               	decfsz	??_send_data_master,f
  2092  06C5  2EC4               	goto	u737
  2093  06C6  0BF7               	decfsz	??_send_data_master+1,f
  2094  06C7  2EC4               	goto	u737
  2095  06C8  0000               	nop
  2096                           
  2097                           ;protocol.c: 155: spi_master_send(destination, tx_packet.data_type);
  2098  06C9  1683               	bsf	3,5	;RP0=1, select bank1
  2099  06CA  1303               	bcf	3,6	;RP1=0, select bank1
  2100  06CB  0820               	movf	_tx_packet^(0+128),w
  2101  06CC  00F6               	movwf	??_send_data_master
  2102  06CD  0876               	movf	??_send_data_master,w
  2103  06CE  00F0               	movwf	spi_master_send@data
  2104  06CF  087A               	movf	send_data_master@destination,w
  2105  06D0  120A  118A  24FE  120A  118A  	fcall	_spi_master_send
  2106                           
  2107                           ;protocol.c: 156: _delay((unsigned long)((10)*(20000000/4000.0)));
  2108  06D5  3041               	movlw	65
  2109  06D6  00F7               	movwf	??_send_data_master+1
  2110  06D7  30EE               	movlw	238
  2111  06D8  00F6               	movwf	??_send_data_master
  2112  06D9                     u747:	
  2113  06D9  0BF6               	decfsz	??_send_data_master,f
  2114  06DA  2ED9               	goto	u747
  2115  06DB  0BF7               	decfsz	??_send_data_master+1,f
  2116  06DC  2ED9               	goto	u747
  2117  06DD  0000               	nop
  2118                           
  2119                           ;protocol.c: 159: spi_master_send(destination, tx_packet.payload_len);
  2120  06DE  1683               	bsf	3,5	;RP0=1, select bank1
  2121  06DF  1303               	bcf	3,6	;RP1=0, select bank1
  2122  06E0  0821               	movf	(_tx_packet^(0+128)+1),w
  2123  06E1  00F6               	movwf	??_send_data_master
  2124  06E2  0876               	movf	??_send_data_master,w
  2125  06E3  00F0               	movwf	spi_master_send@data
  2126  06E4  087A               	movf	send_data_master@destination,w
  2127  06E5  120A  118A  24FE  120A  118A  	fcall	_spi_master_send
  2128                           
  2129                           ;protocol.c: 160: _delay((unsigned long)((10)*(20000000/4000.0)));
  2130  06EA  3041               	movlw	65
  2131  06EB  00F7               	movwf	??_send_data_master+1
  2132  06EC  30EE               	movlw	238
  2133  06ED  00F6               	movwf	??_send_data_master
  2134  06EE                     u757:	
  2135  06EE  0BF6               	decfsz	??_send_data_master,f
  2136  06EF  2EEE               	goto	u757
  2137  06F0  0BF7               	decfsz	??_send_data_master+1,f
  2138  06F1  2EEE               	goto	u757
  2139  06F2  0000               	nop
  2140                           
  2141                           ;protocol.c: 163: for(i = 0; i < tx_packet.payload_len; i++)
  2142  06F3  01F8               	clrf	send_data_master@i
  2143  06F4  01F9               	clrf	send_data_master@i+1
  2144  06F5                     l1324:	
  2145  06F5  0879               	movf	send_data_master@i+1,w
  2146  06F6  3A80               	xorlw	128
  2147  06F7  00F6               	movwf	??_send_data_master
  2148  06F8  3080               	movlw	128
  2149  06F9  0276               	subwf	??_send_data_master,w
  2150  06FA  1D03               	skipz
  2151  06FB  2F00               	goto	u615
  2152  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  2153  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  2154  06FE  0821               	movf	(_tx_packet^(0+128)+1),w
  2155  06FF  0278               	subwf	send_data_master@i,w
  2156  0700                     u615:	
  2157  0700  1803               	btfsc	3,0
  2158  0701  2F20               	goto	l1326
  2159                           
  2160                           ;protocol.c: 164: {
  2161                           ;protocol.c: 165: spi_master_send(destination, tx_packet.payload[i]);
  2162  0702  0878               	movf	send_data_master@i,w
  2163  0703  3EA2               	addlw	(low ((_tx_packet| 0+2)))& (0+255)
  2164  0704  0084               	movwf	4
  2165  0705  1383               	bcf	3,7	;select IRP bank1
  2166  0706  0800               	movf	0,w
  2167  0707  00F6               	movwf	??_send_data_master
  2168  0708  0876               	movf	??_send_data_master,w
  2169  0709  00F0               	movwf	spi_master_send@data
  2170  070A  087A               	movf	send_data_master@destination,w
  2171  070B  120A  118A  24FE  120A  118A  	fcall	_spi_master_send
  2172                           
  2173                           ;protocol.c: 166: _delay((unsigned long)((10)*(20000000/4000.0)));
  2174  0710  3041               	movlw	65
  2175  0711  00F7               	movwf	??_send_data_master+1
  2176  0712  30EE               	movlw	238
  2177  0713  00F6               	movwf	??_send_data_master
  2178  0714                     u767:	
  2179  0714  0BF6               	decfsz	??_send_data_master,f
  2180  0715  2F14               	goto	u767
  2181  0716  0BF7               	decfsz	??_send_data_master+1,f
  2182  0717  2F14               	goto	u767
  2183  0718  0000               	nop
  2184  0719  3001               	movlw	1
  2185  071A  07F8               	addwf	send_data_master@i,f
  2186  071B  1803               	skipnc
  2187  071C  0AF9               	incf	send_data_master@i+1,f
  2188  071D  3000               	movlw	0
  2189  071E  07F9               	addwf	send_data_master@i+1,f
  2190  071F  2EF5               	goto	l1324
  2191  0720                     l1326:	
  2192                           
  2193                           ;protocol.c: 167: }
  2194                           ;protocol.c: 170: spi_master_send(destination, tx_packet.data_end_command);
  2195  0720  1683               	bsf	3,5	;RP0=1, select bank1
  2196  0721  1303               	bcf	3,6	;RP1=0, select bank1
  2197  0722  0840               	movf	(_tx_packet^(0+128)+32),w
  2198  0723  00F6               	movwf	??_send_data_master
  2199  0724  0876               	movf	??_send_data_master,w
  2200  0725  00F0               	movwf	spi_master_send@data
  2201  0726  087A               	movf	send_data_master@destination,w
  2202  0727  120A  118A  24FE  120A  118A  	fcall	_spi_master_send
  2203                           
  2204                           ;protocol.c: 171: _delay((unsigned long)((10)*(20000000/4000.0)));
  2205  072C  3041               	movlw	65
  2206  072D  00F7               	movwf	??_send_data_master+1
  2207  072E  30EE               	movlw	238
  2208  072F  00F6               	movwf	??_send_data_master
  2209  0730                     u777:	
  2210  0730  0BF6               	decfsz	??_send_data_master,f
  2211  0731  2F30               	goto	u777
  2212  0732  0BF7               	decfsz	??_send_data_master+1,f
  2213  0733  2F30               	goto	u777
  2214  0734  0000               	nop
  2215                           
  2216                           ;protocol.c: 174: tx_packet_clear();
  2217  0735  120A  118A  2439   	fcall	_tx_packet_clear
  2218  0738  0008               	return
  2219  0739                     __end_of_send_data_master:	
  2220                           
  2221                           	psect	text11
  2222  0439                     __ptext11:	
  2223 ;; *************** function _tx_packet_clear *****************
  2224 ;; Defined at:
  2225 ;;		line 271 in file "protocol.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;		None
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  i               2    0[COMMON] int 
  2230 ;; Return value:  Size  Location     Type
  2231 ;;		None               void
  2232 ;; Registers used:
  2233 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2239 ;;      Params:         0       0       0       0       0
  2240 ;;      Locals:         2       0       0       0       0
  2241 ;;      Temps:          0       0       0       0       0
  2242 ;;      Totals:         2       0       0       0       0
  2243 ;;Total ram usage:        2 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_send_data_master
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _tx_packet_clear
  2254  0439                     _tx_packet_clear:	
  2255                           
  2256                           ;protocol.c: 273: int i;
  2257                           ;protocol.c: 276: tx_packet.data_type = 0;
  2258                           
  2259                           ;incstack = 0
  2260                           ; Regs used in _tx_packet_clear: [wreg-fsr0h+status,2+status,0+btemp+1]
  2261  0439  1683               	bsf	3,5	;RP0=1, select bank1
  2262  043A  1303               	bcf	3,6	;RP1=0, select bank1
  2263  043B  01A0               	clrf	_tx_packet^(0+128)
  2264                           
  2265                           ;protocol.c: 279: tx_packet.payload_len = 0;
  2266  043C  01A1               	clrf	(_tx_packet^(0+128)+1)
  2267                           
  2268                           ;protocol.c: 282: for(i = 0; i < 30; i++)
  2269  043D  01F0               	clrf	tx_packet_clear@i
  2270  043E  01F1               	clrf	tx_packet_clear@i+1
  2271  043F  0871               	movf	tx_packet_clear@i+1,w
  2272  0440  3A80               	xorlw	128
  2273  0441  00FF               	movwf	127
  2274  0442  3080               	movlw	128
  2275  0443  027F               	subwf	127,w
  2276  0444  1D03               	skipz
  2277  0445  2C48               	goto	u515
  2278  0446  301E               	movlw	30
  2279  0447  0270               	subwf	tx_packet_clear@i,w
  2280  0448                     u515:	
  2281  0448  1803               	btfsc	3,0
  2282  0449  2C60               	goto	l1240
  2283  044A                     l1234:	
  2284                           
  2285                           ;protocol.c: 283: {
  2286                           ;protocol.c: 284: tx_packet.payload[i] = 0;
  2287  044A  0870               	movf	tx_packet_clear@i,w
  2288  044B  3EA2               	addlw	(low ((_tx_packet| 0+2)))& (0+255)
  2289  044C  0084               	movwf	4
  2290  044D  1383               	bcf	3,7	;select IRP bank1
  2291  044E  0180               	clrf	0
  2292  044F  3001               	movlw	1
  2293  0450  07F0               	addwf	tx_packet_clear@i,f
  2294  0451  1803               	skipnc
  2295  0452  0AF1               	incf	tx_packet_clear@i+1,f
  2296  0453  3000               	movlw	0
  2297  0454  07F1               	addwf	tx_packet_clear@i+1,f
  2298  0455  0871               	movf	tx_packet_clear@i+1,w
  2299  0456  3A80               	xorlw	128
  2300  0457  00FF               	movwf	127
  2301  0458  3080               	movlw	128
  2302  0459  027F               	subwf	127,w
  2303  045A  1D03               	skipz
  2304  045B  2C5E               	goto	u525
  2305  045C  301E               	movlw	30
  2306  045D  0270               	subwf	tx_packet_clear@i,w
  2307  045E                     u525:	
  2308  045E  1C03               	skipc
  2309  045F  2C4A               	goto	l1234
  2310  0460                     l1240:	
  2311                           
  2312                           ;protocol.c: 285: }
  2313                           ;protocol.c: 288: tx_packet.data_end_command = 0;
  2314  0460  1683               	bsf	3,5	;RP0=1, select bank1
  2315  0461  1303               	bcf	3,6	;RP1=0, select bank1
  2316  0462  01C0               	clrf	(_tx_packet^(0+128)+32)
  2317  0463  0008               	return
  2318  0464                     __end_of_tx_packet_clear:	
  2319                           
  2320                           	psect	text12
  2321  0615                     __ptext12:	
  2322 ;; *************** function _receive_data_master *****************
  2323 ;; Defined at:
  2324 ;;		line 188 in file "protocol.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  destination     1    wreg     enum E1101
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;  destination     1    7[COMMON] enum E1101
  2329 ;;  i               1    6[COMMON] unsigned char 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;		None               void
  2332 ;; Registers used:
  2333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2339 ;;      Params:         0       0       0       0       0
  2340 ;;      Locals:         2       0       0       0       0
  2341 ;;      Temps:          2       0       0       0       0
  2342 ;;      Totals:         4       0       0       0       0
  2343 ;;Total ram usage:        4 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    1
  2346 ;; This function calls:
  2347 ;;		_spi_master_receive
  2348 ;;		_spi_master_send
  2349 ;; This function is called by:
  2350 ;;		_main
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           
  2355                           ;psect for function _receive_data_master
  2356  0615                     _receive_data_master:	
  2357                           
  2358                           ;incstack = 0
  2359                           ; Regs used in _receive_data_master: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2360                           ;receive_data_master@destination stored from wreg
  2361  0615  00F7               	movwf	receive_data_master@destination
  2362                           
  2363                           ;protocol.c: 190: uint8_t i;
  2364                           ;protocol.c: 193: spi_master_send(destination, 0b10101010);
  2365  0616  30AA               	movlw	170
  2366  0617  00F4               	movwf	??_receive_data_master
  2367  0618  0874               	movf	??_receive_data_master,w
  2368  0619  00F0               	movwf	spi_master_send@data
  2369  061A  0877               	movf	receive_data_master@destination,w
  2370  061B  120A  118A  24FE  120A  118A  	fcall	_spi_master_send
  2371                           
  2372                           ;protocol.c: 194: _delay((unsigned long)((10)*(20000000/4000.0)));
  2373  0620  3041               	movlw	65
  2374  0621  00F5               	movwf	??_receive_data_master+1
  2375  0622  30EE               	movlw	238
  2376  0623  00F4               	movwf	??_receive_data_master
  2377  0624                     u787:	
  2378  0624  0BF4               	decfsz	??_receive_data_master,f
  2379  0625  2E24               	goto	u787
  2380  0626  0BF5               	decfsz	??_receive_data_master+1,f
  2381  0627  2E24               	goto	u787
  2382  0628  0000               	nop
  2383                           
  2384                           ;protocol.c: 197: spi_master_send(destination, 0x02);
  2385  0629  3002               	movlw	2
  2386  062A  00F4               	movwf	??_receive_data_master
  2387  062B  0874               	movf	??_receive_data_master,w
  2388  062C  00F0               	movwf	spi_master_send@data
  2389  062D  0877               	movf	receive_data_master@destination,w
  2390  062E  120A  118A  24FE  120A  118A  	fcall	_spi_master_send
  2391                           
  2392                           ;protocol.c: 198: _delay((unsigned long)((10)*(20000000/4000.0)));
  2393  0633  3041               	movlw	65
  2394  0634  00F5               	movwf	??_receive_data_master+1
  2395  0635  30EE               	movlw	238
  2396  0636  00F4               	movwf	??_receive_data_master
  2397  0637                     u797:	
  2398  0637  0BF4               	decfsz	??_receive_data_master,f
  2399  0638  2E37               	goto	u797
  2400  0639  0BF5               	decfsz	??_receive_data_master+1,f
  2401  063A  2E37               	goto	u797
  2402  063B  0000               	nop
  2403                           
  2404                           ;protocol.c: 201: spi_master_receive(destination, &rx_packet.data_type);
  2405  063C  30C1               	movlw	(low (_rx_packet| 0))& (0+255)
  2406  063D  00F4               	movwf	??_receive_data_master
  2407  063E  0874               	movf	??_receive_data_master,w
  2408  063F  00F0               	movwf	spi_master_receive@p_get
  2409  0640  0877               	movf	receive_data_master@destination,w
  2410  0641  120A  118A  2538  120A  118A  	fcall	_spi_master_receive
  2411                           
  2412                           ;protocol.c: 202: _delay((unsigned long)((10)*(20000000/4000.0)));
  2413  0646  3041               	movlw	65
  2414  0647  00F5               	movwf	??_receive_data_master+1
  2415  0648  30EE               	movlw	238
  2416  0649  00F4               	movwf	??_receive_data_master
  2417  064A                     u807:	
  2418  064A  0BF4               	decfsz	??_receive_data_master,f
  2419  064B  2E4A               	goto	u807
  2420  064C  0BF5               	decfsz	??_receive_data_master+1,f
  2421  064D  2E4A               	goto	u807
  2422  064E  0000               	nop
  2423                           
  2424                           ;protocol.c: 205: spi_master_receive(destination, &rx_packet.payload_len);
  2425  064F  30C2               	movlw	(low ((_rx_packet| 0+1)))& (0+255)
  2426  0650  00F4               	movwf	??_receive_data_master
  2427  0651  0874               	movf	??_receive_data_master,w
  2428  0652  00F0               	movwf	spi_master_receive@p_get
  2429  0653  0877               	movf	receive_data_master@destination,w
  2430  0654  120A  118A  2538  120A  118A  	fcall	_spi_master_receive
  2431                           
  2432                           ;protocol.c: 206: _delay((unsigned long)((10)*(20000000/4000.0)));
  2433  0659  3041               	movlw	65
  2434  065A  00F5               	movwf	??_receive_data_master+1
  2435  065B  30EE               	movlw	238
  2436  065C  00F4               	movwf	??_receive_data_master
  2437  065D                     u817:	
  2438  065D  0BF4               	decfsz	??_receive_data_master,f
  2439  065E  2E5D               	goto	u817
  2440  065F  0BF5               	decfsz	??_receive_data_master+1,f
  2441  0660  2E5D               	goto	u817
  2442  0661  0000               	nop
  2443                           
  2444                           ;protocol.c: 209: for(i = 0; i < rx_packet.payload_len; i++)
  2445  0662  01F6               	clrf	receive_data_master@i
  2446  0663                     l1366:	
  2447  0663  1683               	bsf	3,5	;RP0=1, select bank1
  2448  0664  1303               	bcf	3,6	;RP1=0, select bank1
  2449  0665  0842               	movf	(_rx_packet^(0+128)+1),w
  2450  0666  0276               	subwf	receive_data_master@i,w
  2451  0667  1803               	btfsc	3,0
  2452  0668  2E82               	goto	l1368
  2453                           
  2454                           ;protocol.c: 210: {
  2455                           ;protocol.c: 211: spi_master_receive(destination, &rx_packet.payload[i]);
  2456  0669  0876               	movf	receive_data_master@i,w
  2457  066A  3EC3               	addlw	(low ((_rx_packet| 0+2)))& (0+255)
  2458  066B  00F4               	movwf	??_receive_data_master
  2459  066C  0874               	movf	??_receive_data_master,w
  2460  066D  00F0               	movwf	spi_master_receive@p_get
  2461  066E  0877               	movf	receive_data_master@destination,w
  2462  066F  120A  118A  2538  120A  118A  	fcall	_spi_master_receive
  2463                           
  2464                           ;protocol.c: 212: _delay((unsigned long)((10)*(20000000/4000.0)));
  2465  0674  3041               	movlw	65
  2466  0675  00F5               	movwf	??_receive_data_master+1
  2467  0676  30EE               	movlw	238
  2468  0677  00F4               	movwf	??_receive_data_master
  2469  0678                     u827:	
  2470  0678  0BF4               	decfsz	??_receive_data_master,f
  2471  0679  2E78               	goto	u827
  2472  067A  0BF5               	decfsz	??_receive_data_master+1,f
  2473  067B  2E78               	goto	u827
  2474  067C  0000               	nop
  2475  067D  3001               	movlw	1
  2476  067E  00F4               	movwf	??_receive_data_master
  2477  067F  0874               	movf	??_receive_data_master,w
  2478  0680  07F6               	addwf	receive_data_master@i,f
  2479  0681  2E63               	goto	l1366
  2480  0682                     l1368:	
  2481                           
  2482                           ;protocol.c: 213: }
  2483                           ;protocol.c: 216: spi_master_receive(destination, &rx_packet.data_end_command);
  2484  0682  30E1               	movlw	(low ((_rx_packet| 0+32)))& (0+255)
  2485  0683  00F4               	movwf	??_receive_data_master
  2486  0684  0874               	movf	??_receive_data_master,w
  2487  0685  00F0               	movwf	spi_master_receive@p_get
  2488  0686  0877               	movf	receive_data_master@destination,w
  2489  0687  120A  118A  2538  120A  118A  	fcall	_spi_master_receive
  2490                           
  2491                           ;protocol.c: 217: _delay((unsigned long)((10)*(20000000/4000.0)));
  2492  068C  3041               	movlw	65
  2493  068D  00F5               	movwf	??_receive_data_master+1
  2494  068E  30EE               	movlw	238
  2495  068F  00F4               	movwf	??_receive_data_master
  2496  0690                     u837:	
  2497  0690  0BF4               	decfsz	??_receive_data_master,f
  2498  0691  2E90               	goto	u837
  2499  0692  0BF5               	decfsz	??_receive_data_master+1,f
  2500  0693  2E90               	goto	u837
  2501  0694  0000               	nop
  2502                           
  2503                           ;protocol.c: 220: rx_packet_status = TRUE;
  2504  0695  1283               	bcf	3,5	;RP0=0, select bank0
  2505  0696  1303               	bcf	3,6	;RP1=0, select bank0
  2506  0697  01D2               	clrf	_rx_packet_status
  2507  0698  0AD2               	incf	_rx_packet_status,f
  2508  0699  0008               	return
  2509  069A                     __end_of_receive_data_master:	
  2510                           
  2511                           	psect	text13
  2512  0359                     __ptext13:	
  2513 ;; *************** function _put_string *****************
  2514 ;; Defined at:
  2515 ;;		line 76 in file "uart.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  str             1    wreg     PTR unsigned char 
  2518 ;;		 -> STR_1(24), 
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;  str             1    2[COMMON] PTR unsigned char 
  2521 ;;		 -> STR_1(24), 
  2522 ;; Return value:  Size  Location     Type
  2523 ;;		None               void
  2524 ;; Registers used:
  2525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2531 ;;      Params:         0       0       0       0       0
  2532 ;;      Locals:         1       0       0       0       0
  2533 ;;      Temps:          1       0       0       0       0
  2534 ;;      Totals:         2       0       0       0       0
  2535 ;;Total ram usage:        2 bytes
  2536 ;; Hardware stack levels used:    1
  2537 ;; Hardware stack levels required when called:    1
  2538 ;; This function calls:
  2539 ;;		_put_char
  2540 ;; This function is called by:
  2541 ;;		_main
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           
  2546                           ;psect for function _put_string
  2547  0359                     _put_string:	
  2548                           
  2549                           ;incstack = 0
  2550                           ; Regs used in _put_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2551                           ;put_string@str stored from wreg
  2552  0359  00F2               	movwf	put_string@str
  2553  035A                     l1280:	
  2554                           ;uart.c: 78: while(*str != '\0')
  2555                           
  2556  035A  0872               	movf	put_string@str,w
  2557  035B  0084               	movwf	4
  2558  035C  120A  118A  2003  120A  118A  	fcall	stringdir
  2559  0361  3A00               	xorlw	0
  2560  0362  1903               	btfsc	3,2
  2561  0363  2B75               	goto	l1282
  2562                           
  2563                           ;uart.c: 79: {
  2564                           ;uart.c: 80: put_char(*str);
  2565  0364  0872               	movf	put_string@str,w
  2566  0365  0084               	movwf	4
  2567  0366  120A  118A  2003  120A  118A  	fcall	stringdir
  2568  036B  120A  118A  230E  120A  118A  	fcall	_put_char
  2569                           
  2570                           ;uart.c: 81: str++;
  2571  0370  3001               	movlw	1
  2572  0371  00F1               	movwf	??_put_string
  2573  0372  0871               	movf	??_put_string,w
  2574  0373  07F2               	addwf	put_string@str,f
  2575  0374  2B5A               	goto	l1280
  2576  0375                     l1282:	
  2577                           
  2578                           ;uart.c: 82: }
  2579                           ;uart.c: 84: put_char('\0');
  2580  0375  3000               	movlw	0
  2581  0376  120A  118A  230E   	fcall	_put_char
  2582  0379  0008               	return
  2583  037A                     __end_of_put_string:	
  2584                           
  2585                           	psect	text14
  2586  030E                     __ptext14:	
  2587 ;; *************** function _put_char *****************
  2588 ;; Defined at:
  2589 ;;		line 60 in file "uart.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  byte_data       1    wreg     unsigned char 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  byte_data       1    0[COMMON] unsigned char 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;		None               void
  2596 ;; Registers used:
  2597 ;;		wreg
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2603 ;;      Params:         0       0       0       0       0
  2604 ;;      Locals:         1       0       0       0       0
  2605 ;;      Temps:          0       0       0       0       0
  2606 ;;      Totals:         1       0       0       0       0
  2607 ;;Total ram usage:        1 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_put_string
  2613 ;;		_main
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           
  2618                           ;psect for function _put_char
  2619  030E                     _put_char:	
  2620                           
  2621                           ;incstack = 0
  2622                           ; Regs used in _put_char: [wreg]
  2623                           ;put_char@byte_data stored from wreg
  2624  030E  00F0               	movwf	put_char@byte_data
  2625  030F                     l24:	
  2626                           ;uart.c: 64: {
  2627                           ;uart.c: 65: ;
  2628                           
  2629                           ;uart.c: 63: while(TXIF == 0)
  2630                           
  2631  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2632  0310  1303               	bcf	3,6	;RP1=0, select bank0
  2633  0311  1E0C               	btfss	12,4	;volatile
  2634  0312  2B0F               	goto	l24
  2635                           
  2636                           ;uart.c: 66: }
  2637                           ;uart.c: 69: TXREG = byte_data;
  2638  0313  0870               	movf	put_char@byte_data,w
  2639  0314  0099               	movwf	25	;volatile
  2640  0315  0008               	return
  2641  0316                     __end_of_put_char:	
  2642                           
  2643                           	psect	text15
  2644  032B                     __ptext15:	
  2645 ;; *************** function _pic_port_init *****************
  2646 ;; Defined at:
  2647 ;;		line 106 in file "main.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;		None               void
  2654 ;; Registers used:
  2655 ;;		status,2
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2661 ;;      Params:         0       0       0       0       0
  2662 ;;      Locals:         0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0
  2664 ;;      Totals:         0       0       0       0       0
  2665 ;;Total ram usage:        0 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_main
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           
  2675                           ;psect for function _pic_port_init
  2676  032B                     _pic_port_init:	
  2677                           
  2678                           ;main.c: 109: TRISA = 0x00;
  2679                           
  2680                           ;incstack = 0
  2681                           ; Regs used in _pic_port_init: [status,2]
  2682  032B  1683               	bsf	3,5	;RP0=1, select bank1
  2683  032C  1303               	bcf	3,6	;RP1=0, select bank1
  2684  032D  0185               	clrf	5	;volatile
  2685                           
  2686                           ;main.c: 110: TRISB = 0x00;
  2687  032E  0186               	clrf	6	;volatile
  2688                           
  2689                           ;main.c: 111: TRISC = 0x00;
  2690  032F  0187               	clrf	7	;volatile
  2691                           
  2692                           ;main.c: 112: TRISD = 0x00;
  2693  0330  0188               	clrf	8	;volatile
  2694                           
  2695                           ;main.c: 113: TRISE = 0x00;
  2696  0331  0189               	clrf	9	;volatile
  2697                           
  2698                           ;main.c: 116: PORTA = 0x00;
  2699  0332  1283               	bcf	3,5	;RP0=0, select bank0
  2700  0333  1303               	bcf	3,6	;RP1=0, select bank0
  2701  0334  0185               	clrf	5	;volatile
  2702                           
  2703                           ;main.c: 117: PORTB = 0x00;
  2704  0335  0186               	clrf	6	;volatile
  2705                           
  2706                           ;main.c: 118: PORTC = 0x00;
  2707  0336  0187               	clrf	7	;volatile
  2708                           
  2709                           ;main.c: 119: PORTD = 0x00;
  2710  0337  0188               	clrf	8	;volatile
  2711                           
  2712                           ;main.c: 120: PORTE = 0x00;
  2713  0338  0189               	clrf	9	;volatile
  2714  0339  0008               	return
  2715  033A                     __end_of_pic_port_init:	
  2716                           
  2717                           	psect	text16
  2718  0575                     __ptext16:	
  2719 ;; *************** function _flag_check *****************
  2720 ;; Defined at:
  2721 ;;		line 326 in file "protocol.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  destination     1    wreg     enum E1101
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;  destination     1    8[COMMON] enum E1101
  2726 ;;  flag            1    7[COMMON] enum E1097
  2727 ;; Return value:  Size  Location     Type
  2728 ;;		None               void
  2729 ;; Registers used:
  2730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2736 ;;      Params:         0       0       0       0       0
  2737 ;;      Locals:         2       0       0       0       0
  2738 ;;      Temps:          3       0       0       0       0
  2739 ;;      Totals:         5       0       0       0       0
  2740 ;;Total ram usage:        5 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; Hardware stack levels required when called:    1
  2743 ;; This function calls:
  2744 ;;		_spi_master_receive
  2745 ;;		_spi_master_send
  2746 ;; This function is called by:
  2747 ;;		_main
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           
  2752                           ;psect for function _flag_check
  2753  0575                     _flag_check:	
  2754                           
  2755                           ;incstack = 0
  2756                           ; Regs used in _flag_check: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2757                           ;flag_check@destination stored from wreg
  2758  0575  00F8               	movwf	flag_check@destination
  2759                           
  2760                           ;protocol.c: 328: bool_t flag = FALSE;
  2761  0576  01F7               	clrf	flag_check@flag
  2762  0577                     l1344:	
  2763                           ;protocol.c: 331: while(flag == FALSE)
  2764                           
  2765  0577  0877               	movf	flag_check@flag,w
  2766  0578  1D03               	btfss	3,2
  2767  0579  0008               	return
  2768                           
  2769                           ;protocol.c: 332: {
  2770                           ;protocol.c: 334: spi_master_send(destination, 0b10101010);
  2771  057A  30AA               	movlw	170
  2772  057B  00F4               	movwf	??_flag_check
  2773  057C  0874               	movf	??_flag_check,w
  2774  057D  00F0               	movwf	spi_master_send@data
  2775  057E  0878               	movf	flag_check@destination,w
  2776  057F  120A  118A  24FE  120A  118A  	fcall	_spi_master_send
  2777                           
  2778                           ;protocol.c: 335: _delay((unsigned long)((10)*(20000000/4000.0)));
  2779  0584  3041               	movlw	65
  2780  0585  00F5               	movwf	??_flag_check+1
  2781  0586  30EE               	movlw	238
  2782  0587  00F4               	movwf	??_flag_check
  2783  0588                     u847:	
  2784  0588  0BF4               	decfsz	??_flag_check,f
  2785  0589  2D88               	goto	u847
  2786  058A  0BF5               	decfsz	??_flag_check+1,f
  2787  058B  2D88               	goto	u847
  2788  058C  0000               	nop
  2789                           
  2790                           ;protocol.c: 338: spi_master_send(destination, 0x03);
  2791  058D  3003               	movlw	3
  2792  058E  00F4               	movwf	??_flag_check
  2793  058F  0874               	movf	??_flag_check,w
  2794  0590  00F0               	movwf	spi_master_send@data
  2795  0591  0878               	movf	flag_check@destination,w
  2796  0592  120A  118A  24FE  120A  118A  	fcall	_spi_master_send
  2797                           
  2798                           ;protocol.c: 339: _delay((unsigned long)((10)*(20000000/4000.0)));
  2799  0597  3041               	movlw	65
  2800  0598  00F5               	movwf	??_flag_check+1
  2801  0599  30EE               	movlw	238
  2802  059A  00F4               	movwf	??_flag_check
  2803  059B                     u857:	
  2804  059B  0BF4               	decfsz	??_flag_check,f
  2805  059C  2D9B               	goto	u857
  2806  059D  0BF5               	decfsz	??_flag_check+1,f
  2807  059E  2D9B               	goto	u857
  2808  059F  0000               	nop
  2809                           
  2810                           ;protocol.c: 342: spi_master_receive(destination, &flag);
  2811  05A0  3077               	movlw	(low (flag_check@flag| 0))& (0+255)
  2812  05A1  00F4               	movwf	??_flag_check
  2813  05A2  0874               	movf	??_flag_check,w
  2814  05A3  00F0               	movwf	spi_master_receive@p_get
  2815  05A4  0878               	movf	flag_check@destination,w
  2816  05A5  120A  118A  2538  120A  118A  	fcall	_spi_master_receive
  2817                           
  2818                           ;protocol.c: 345: _delay((unsigned long)((500)*(20000000/4000.0)));
  2819  05AA  300D               	movlw	13
  2820  05AB  00F6               	movwf	??_flag_check+2
  2821  05AC  30AF               	movlw	175
  2822  05AD  00F5               	movwf	??_flag_check+1
  2823  05AE  30C1               	movlw	193
  2824  05AF  00F4               	movwf	??_flag_check
  2825  05B0                     u867:	
  2826  05B0  0BF4               	decfsz	??_flag_check,f
  2827  05B1  2DB0               	goto	u867
  2828  05B2  0BF5               	decfsz	??_flag_check+1,f
  2829  05B3  2DB0               	goto	u867
  2830  05B4  0BF6               	decfsz	??_flag_check+2,f
  2831  05B5  2DB0               	goto	u867
  2832  05B6  0000               	nop
  2833  05B7  2D77               	goto	l1344
  2834  05B8                     __end_of_flag_check:	
  2835                           
  2836                           	psect	text17
  2837  04FE                     __ptext17:	
  2838 ;; *************** function _spi_master_send *****************
  2839 ;; Defined at:
  2840 ;;		line 85 in file "spi_master.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  destination     1    wreg     enum E1101
  2843 ;;  data            1    0[COMMON] unsigned char 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  destination     1    3[COMMON] enum E1101
  2846 ;;  buf             1    2[COMMON] unsigned char 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;		None               void
  2849 ;; Registers used:
  2850 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2856 ;;      Params:         1       0       0       0       0
  2857 ;;      Locals:         2       0       0       0       0
  2858 ;;      Temps:          1       0       0       0       0
  2859 ;;      Totals:         4       0       0       0       0
  2860 ;;Total ram usage:        4 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; This function calls:
  2863 ;;		Nothing
  2864 ;; This function is called by:
  2865 ;;		_send_data_master
  2866 ;;		_receive_data_master
  2867 ;;		_flag_check
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           
  2872                           ;psect for function _spi_master_send
  2873  04FE                     _spi_master_send:	
  2874                           
  2875                           ;incstack = 0
  2876                           ; Regs used in _spi_master_send: [wreg-fsr0h+status,2+status,0]
  2877                           ;spi_master_send@destination stored from wreg
  2878  04FE  00F3               	movwf	spi_master_send@destination
  2879                           
  2880                           ;spi_master.c: 87: uint8_t buf;
  2881                           ;spi_master.c: 90: buf = SSPBUF;
  2882  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  2883  0500  1303               	bcf	3,6	;RP1=0, select bank0
  2884  0501  0813               	movf	19,w	;volatile
  2885  0502  00F1               	movwf	??_spi_master_send
  2886  0503  0871               	movf	??_spi_master_send,w
  2887  0504  00F2               	movwf	spi_master_send@buf
  2888                           
  2889                           ;spi_master.c: 93: switch(destination)
  2890  0505  2D0C               	goto	l1152
  2891  0506                     l56:	
  2892                           ;spi_master.c: 94: {
  2893                           ;spi_master.c: 95: case OBC2:
  2894                           
  2895                           
  2896                           ;spi_master.c: 96: PORTCbits.RC2 = 0;
  2897  0506  1107               	bcf	7,2	;volatile
  2898                           
  2899                           ;spi_master.c: 97: break;
  2900  0507  2D17               	goto	l1154
  2901  0508                     l58:	
  2902                           ;spi_master.c: 98: case COM:
  2903                           
  2904                           
  2905                           ;spi_master.c: 99: PORTCbits.RC0 = 0;
  2906  0508  1007               	bcf	7,0	;volatile
  2907                           
  2908                           ;spi_master.c: 100: break;
  2909  0509  2D17               	goto	l1154
  2910  050A                     l59:	
  2911                           ;spi_master.c: 101: case POW:
  2912                           
  2913                           
  2914                           ;spi_master.c: 102: PORTCbits.RC1 = 0;
  2915  050A  1087               	bcf	7,1	;volatile
  2916                           
  2917                           ;spi_master.c: 106: }
  2918                           
  2919                           ;spi_master.c: 105: break;
  2920                           
  2921                           ;spi_master.c: 104: default:
  2922                           
  2923                           ;spi_master.c: 103: break;
  2924  050B  2D17               	goto	l1154
  2925  050C                     l1152:	
  2926  050C  0873               	movf	spi_master_send@destination,w
  2927                           
  2928                           ; Switch size 1, requested type "space"
  2929                           ; Number of cases is 3, Range of values is 1 to 3
  2930                           ; switch strategies available:
  2931                           ; Name         Instructions Cycles
  2932                           ; simple_byte           10     6 (average)
  2933                           ; direct_byte           20    11 (fixed)
  2934                           ; jumptable            263     9 (fixed)
  2935                           ;	Chosen strategy is simple_byte
  2936  050D  3A01               	xorlw	1	; case 1
  2937  050E  1903               	skipnz
  2938  050F  2D06               	goto	l56
  2939  0510  3A03               	xorlw	3	; case 2
  2940  0511  1903               	skipnz
  2941  0512  2D08               	goto	l58
  2942  0513  3A01               	xorlw	1	; case 3
  2943  0514  1903               	skipnz
  2944  0515  2D0A               	goto	l59
  2945  0516  2D17               	goto	l1154
  2946  0517                     l1154:	
  2947                           
  2948                           ;spi_master.c: 109: SSPBUF = data;
  2949  0517  0870               	movf	spi_master_send@data,w
  2950  0518  0093               	movwf	19	;volatile
  2951  0519                     l61:	
  2952                           ;spi_master.c: 113: {
  2953                           ;spi_master.c: 114: ;
  2954                           
  2955                           ;spi_master.c: 112: while(SSPSTATbits.BF == 0)
  2956                           
  2957  0519  1683               	bsf	3,5	;RP0=1, select bank1
  2958  051A  1303               	bcf	3,6	;RP1=0, select bank1
  2959  051B  1814               	btfsc	20,0	;volatile
  2960  051C  2D27               	goto	l1158
  2961  051D  2D19               	goto	l61
  2962  051E                     l65:	
  2963                           ;spi_master.c: 119: {
  2964                           ;spi_master.c: 120: case OBC2:
  2965                           
  2966                           ;spi_master.c: 115: }
  2967                           ;spi_master.c: 118: switch(destination)
  2968                           
  2969                           
  2970                           ;spi_master.c: 121: PORTCbits.RC2 = 1;
  2971  051E  1283               	bcf	3,5	;RP0=0, select bank0
  2972  051F  1507               	bsf	7,2	;volatile
  2973                           
  2974                           ;spi_master.c: 122: break;
  2975  0520  2D32               	goto	l1160
  2976  0521                     l67:	
  2977                           ;spi_master.c: 123: case COM:
  2978                           
  2979                           
  2980                           ;spi_master.c: 124: PORTCbits.RC0 = 1;
  2981  0521  1283               	bcf	3,5	;RP0=0, select bank0
  2982  0522  1407               	bsf	7,0	;volatile
  2983                           
  2984                           ;spi_master.c: 125: break;
  2985  0523  2D32               	goto	l1160
  2986  0524                     l68:	
  2987                           ;spi_master.c: 126: case POW:
  2988                           
  2989                           
  2990                           ;spi_master.c: 127: PORTCbits.RC1 = 1;
  2991  0524  1283               	bcf	3,5	;RP0=0, select bank0
  2992  0525  1487               	bsf	7,1	;volatile
  2993                           
  2994                           ;spi_master.c: 131: }
  2995                           
  2996                           ;spi_master.c: 130: break;
  2997                           
  2998                           ;spi_master.c: 129: default:
  2999                           
  3000                           ;spi_master.c: 128: break;
  3001  0526  2D32               	goto	l1160
  3002  0527                     l1158:	
  3003  0527  0873               	movf	spi_master_send@destination,w
  3004                           
  3005                           ; Switch size 1, requested type "space"
  3006                           ; Number of cases is 3, Range of values is 1 to 3
  3007                           ; switch strategies available:
  3008                           ; Name         Instructions Cycles
  3009                           ; simple_byte           10     6 (average)
  3010                           ; direct_byte           20    11 (fixed)
  3011                           ; jumptable            263     9 (fixed)
  3012                           ;	Chosen strategy is simple_byte
  3013  0528  3A01               	xorlw	1	; case 1
  3014  0529  1903               	skipnz
  3015  052A  2D1E               	goto	l65
  3016  052B  3A03               	xorlw	3	; case 2
  3017  052C  1903               	skipnz
  3018  052D  2D21               	goto	l67
  3019  052E  3A01               	xorlw	1	; case 3
  3020  052F  1903               	skipnz
  3021  0530  2D24               	goto	l68
  3022  0531  2D32               	goto	l1160
  3023  0532                     l1160:	
  3024                           
  3025                           ;spi_master.c: 134: buf = SSPBUF;
  3026  0532  1283               	bcf	3,5	;RP0=0, select bank0
  3027  0533  0813               	movf	19,w	;volatile
  3028  0534  00F1               	movwf	??_spi_master_send
  3029  0535  0871               	movf	??_spi_master_send,w
  3030  0536  00F2               	movwf	spi_master_send@buf
  3031  0537  0008               	return
  3032  0538                     __end_of_spi_master_send:	
  3033                           
  3034                           	psect	text18
  3035  0538                     __ptext18:	
  3036 ;; *************** function _spi_master_receive *****************
  3037 ;; Defined at:
  3038 ;;		line 149 in file "spi_master.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;  destination     1    wreg     enum E1101
  3041 ;;  p_get           1    0[COMMON] PTR unsigned char 
  3042 ;;		 -> flag_check@flag(1), rx_packet.payload(30), rx_packet(33), 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  destination     1    3[COMMON] enum E1101
  3045 ;;  buf             1    2[COMMON] unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;		None               void
  3048 ;; Registers used:
  3049 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3055 ;;      Params:         1       0       0       0       0
  3056 ;;      Locals:         2       0       0       0       0
  3057 ;;      Temps:          1       0       0       0       0
  3058 ;;      Totals:         4       0       0       0       0
  3059 ;;Total ram usage:        4 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_receive_data_master
  3065 ;;		_flag_check
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function _spi_master_receive
  3071  0538                     _spi_master_receive:	
  3072                           
  3073                           ;incstack = 0
  3074                           ; Regs used in _spi_master_receive: [wreg-fsr0h+status,2+status,0]
  3075                           ;spi_master_receive@destination stored from wreg
  3076  0538  00F3               	movwf	spi_master_receive@destination
  3077                           
  3078                           ;spi_master.c: 151: uint8_t buf;
  3079                           ;spi_master.c: 154: buf = SSPBUF;
  3080  0539  1283               	bcf	3,5	;RP0=0, select bank0
  3081  053A  1303               	bcf	3,6	;RP1=0, select bank0
  3082  053B  0813               	movf	19,w	;volatile
  3083  053C  00F1               	movwf	??_spi_master_receive
  3084  053D  0871               	movf	??_spi_master_receive,w
  3085  053E  00F2               	movwf	spi_master_receive@buf
  3086                           
  3087                           ;spi_master.c: 157: switch(destination)
  3088  053F  2D46               	goto	l1166
  3089  0540                     l74:	
  3090                           ;spi_master.c: 158: {
  3091                           ;spi_master.c: 159: case OBC2:
  3092                           
  3093                           
  3094                           ;spi_master.c: 160: PORTCbits.RC2 = 0;
  3095  0540  1107               	bcf	7,2	;volatile
  3096                           
  3097                           ;spi_master.c: 161: break;
  3098  0541  2D51               	goto	l1168
  3099  0542                     l76:	
  3100                           ;spi_master.c: 162: case COM:
  3101                           
  3102                           
  3103                           ;spi_master.c: 163: PORTCbits.RC0 = 0;
  3104  0542  1007               	bcf	7,0	;volatile
  3105                           
  3106                           ;spi_master.c: 164: break;
  3107  0543  2D51               	goto	l1168
  3108  0544                     l77:	
  3109                           ;spi_master.c: 165: case POW:
  3110                           
  3111                           
  3112                           ;spi_master.c: 166: PORTCbits.RC1 = 0;
  3113  0544  1087               	bcf	7,1	;volatile
  3114                           
  3115                           ;spi_master.c: 170: }
  3116                           
  3117                           ;spi_master.c: 169: break;
  3118                           
  3119                           ;spi_master.c: 168: default:
  3120                           
  3121                           ;spi_master.c: 167: break;
  3122  0545  2D51               	goto	l1168
  3123  0546                     l1166:	
  3124  0546  0873               	movf	spi_master_receive@destination,w
  3125                           
  3126                           ; Switch size 1, requested type "space"
  3127                           ; Number of cases is 3, Range of values is 1 to 3
  3128                           ; switch strategies available:
  3129                           ; Name         Instructions Cycles
  3130                           ; simple_byte           10     6 (average)
  3131                           ; direct_byte           20    11 (fixed)
  3132                           ; jumptable            263     9 (fixed)
  3133                           ;	Chosen strategy is simple_byte
  3134  0547  3A01               	xorlw	1	; case 1
  3135  0548  1903               	skipnz
  3136  0549  2D40               	goto	l74
  3137  054A  3A03               	xorlw	3	; case 2
  3138  054B  1903               	skipnz
  3139  054C  2D42               	goto	l76
  3140  054D  3A01               	xorlw	1	; case 3
  3141  054E  1903               	skipnz
  3142  054F  2D44               	goto	l77
  3143  0550  2D51               	goto	l1168
  3144  0551                     l1168:	
  3145                           
  3146                           ;spi_master.c: 173: SSPBUF = 0xff;
  3147  0551  30FF               	movlw	255
  3148  0552  0093               	movwf	19	;volatile
  3149  0553                     l79:	
  3150                           ;spi_master.c: 177: {
  3151                           ;spi_master.c: 178: ;
  3152                           
  3153                           ;spi_master.c: 176: while(SSPSTATbits.BF == 0)
  3154                           
  3155  0553  1683               	bsf	3,5	;RP0=1, select bank1
  3156  0554  1303               	bcf	3,6	;RP1=0, select bank1
  3157  0555  1814               	btfsc	20,0	;volatile
  3158  0556  2D61               	goto	l1172
  3159  0557  2D53               	goto	l79
  3160  0558                     l83:	
  3161                           ;spi_master.c: 183: {
  3162                           ;spi_master.c: 184: case OBC2:
  3163                           
  3164                           ;spi_master.c: 179: }
  3165                           ;spi_master.c: 182: switch(destination)
  3166                           
  3167                           
  3168                           ;spi_master.c: 185: PORTCbits.RC2 = 1;
  3169  0558  1283               	bcf	3,5	;RP0=0, select bank0
  3170  0559  1507               	bsf	7,2	;volatile
  3171                           
  3172                           ;spi_master.c: 186: break;
  3173  055A  2D6C               	goto	l1174
  3174  055B                     l85:	
  3175                           ;spi_master.c: 187: case COM:
  3176                           
  3177                           
  3178                           ;spi_master.c: 188: PORTCbits.RC0 = 1;
  3179  055B  1283               	bcf	3,5	;RP0=0, select bank0
  3180  055C  1407               	bsf	7,0	;volatile
  3181                           
  3182                           ;spi_master.c: 189: break;
  3183  055D  2D6C               	goto	l1174
  3184  055E                     l86:	
  3185                           ;spi_master.c: 190: case POW:
  3186                           
  3187                           
  3188                           ;spi_master.c: 191: PORTCbits.RC1 = 1;
  3189  055E  1283               	bcf	3,5	;RP0=0, select bank0
  3190  055F  1487               	bsf	7,1	;volatile
  3191                           
  3192                           ;spi_master.c: 195: }
  3193                           
  3194                           ;spi_master.c: 194: break;
  3195                           
  3196                           ;spi_master.c: 193: default:
  3197                           
  3198                           ;spi_master.c: 192: break;
  3199  0560  2D6C               	goto	l1174
  3200  0561                     l1172:	
  3201  0561  0873               	movf	spi_master_receive@destination,w
  3202                           
  3203                           ; Switch size 1, requested type "space"
  3204                           ; Number of cases is 3, Range of values is 1 to 3
  3205                           ; switch strategies available:
  3206                           ; Name         Instructions Cycles
  3207                           ; simple_byte           10     6 (average)
  3208                           ; direct_byte           20    11 (fixed)
  3209                           ; jumptable            263     9 (fixed)
  3210                           ;	Chosen strategy is simple_byte
  3211  0562  3A01               	xorlw	1	; case 1
  3212  0563  1903               	skipnz
  3213  0564  2D58               	goto	l83
  3214  0565  3A03               	xorlw	3	; case 2
  3215  0566  1903               	skipnz
  3216  0567  2D5B               	goto	l85
  3217  0568  3A01               	xorlw	1	; case 3
  3218  0569  1903               	skipnz
  3219  056A  2D5E               	goto	l86
  3220  056B  2D6C               	goto	l1174
  3221  056C                     l1174:	
  3222                           
  3223                           ;spi_master.c: 198: *p_get = SSPBUF;
  3224  056C  1283               	bcf	3,5	;RP0=0, select bank0
  3225  056D  0813               	movf	19,w	;volatile
  3226  056E  00F1               	movwf	??_spi_master_receive
  3227  056F  0870               	movf	spi_master_receive@p_get,w
  3228  0570  0084               	movwf	4
  3229  0571  0871               	movf	??_spi_master_receive,w
  3230  0572  1383               	bcf	3,7	;select IRP bank0
  3231  0573  0080               	movwf	0
  3232  0574  0008               	return
  3233  0575                     __end_of_spi_master_receive:	
  3234                           
  3235                           	psect	text19
  3236  0464                     __ptext19:	
  3237 ;; *************** function _extract_receive_packet *****************
  3238 ;; Defined at:
  3239 ;;		line 237 in file "protocol.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;  p_data_type_    1    wreg     PTR unsigned char 
  3242 ;;		 -> main@r_data_type(1), 
  3243 ;;  p_data_buf      1    2[COMMON] PTR unsigned char 
  3244 ;;		 -> main@r_data(30), 
  3245 ;;  p_data_len_b    1    3[COMMON] PTR unsigned char 
  3246 ;;		 -> main@r_data_len(1), 
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;  p_data_type_    1    5[COMMON] PTR unsigned char 
  3249 ;;		 -> main@r_data_type(1), 
  3250 ;;  i               1    6[COMMON] unsigned char 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;		None               void
  3253 ;; Registers used:
  3254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3260 ;;      Params:         2       0       0       0       0
  3261 ;;      Locals:         2       0       0       0       0
  3262 ;;      Temps:          1       0       0       0       0
  3263 ;;      Totals:         5       0       0       0       0
  3264 ;;Total ram usage:        5 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; Hardware stack levels required when called:    1
  3267 ;; This function calls:
  3268 ;;		_rx_packet_clear
  3269 ;; This function is called by:
  3270 ;;		_main
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           
  3275                           ;psect for function _extract_receive_packet
  3276  0464                     _extract_receive_packet:	
  3277                           
  3278                           ;incstack = 0
  3279                           ; Regs used in _extract_receive_packet: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3280                           ;extract_receive_packet@p_data_type_buf stored from wreg
  3281  0464  00F5               	movwf	extract_receive_packet@p_data_type_buf
  3282                           
  3283                           ;protocol.c: 239: uint8_t i;
  3284                           ;protocol.c: 242: *p_data_type_buf = rx_packet.data_type;
  3285  0465  1683               	bsf	3,5	;RP0=1, select bank1
  3286  0466  1303               	bcf	3,6	;RP1=0, select bank1
  3287  0467  0841               	movf	_rx_packet^(0+128),w
  3288  0468  00F4               	movwf	??_extract_receive_packet
  3289  0469  0875               	movf	extract_receive_packet@p_data_type_buf,w
  3290  046A  0084               	movwf	4
  3291  046B  0874               	movf	??_extract_receive_packet,w
  3292  046C  1383               	bcf	3,7	;select IRP bank0
  3293  046D  0080               	movwf	0
  3294                           
  3295                           ;protocol.c: 245: for(i = 0; i < rx_packet.payload_len; i++)
  3296  046E  01F6               	clrf	extract_receive_packet@i
  3297  046F                     l1384:	
  3298  046F  0842               	movf	(_rx_packet^(0+128)+1),w
  3299  0470  0276               	subwf	extract_receive_packet@i,w
  3300  0471  1803               	btfsc	3,0
  3301  0472  2C85               	goto	l1386
  3302                           
  3303                           ;protocol.c: 246: {
  3304                           ;protocol.c: 247: *p_data_buf++ = rx_packet.payload[i];
  3305  0473  0876               	movf	extract_receive_packet@i,w
  3306  0474  3EC3               	addlw	(low ((_rx_packet| 0+2)))& (0+255)
  3307  0475  0084               	movwf	4
  3308  0476  0800               	movf	0,w
  3309  0477  00F4               	movwf	??_extract_receive_packet
  3310  0478  0872               	movf	extract_receive_packet@p_data_buf,w
  3311  0479  0084               	movwf	4
  3312  047A  0874               	movf	??_extract_receive_packet,w
  3313  047B  0080               	movwf	0
  3314  047C  3001               	movlw	1
  3315  047D  00F4               	movwf	??_extract_receive_packet
  3316  047E  0874               	movf	??_extract_receive_packet,w
  3317  047F  07F2               	addwf	extract_receive_packet@p_data_buf,f
  3318  0480  3001               	movlw	1
  3319  0481  00F4               	movwf	??_extract_receive_packet
  3320  0482  0874               	movf	??_extract_receive_packet,w
  3321  0483  07F6               	addwf	extract_receive_packet@i,f
  3322  0484  2C6F               	goto	l1384
  3323  0485                     l1386:	
  3324                           
  3325                           ;protocol.c: 248: }
  3326                           ;protocol.c: 251: *p_data_len_buf = rx_packet.payload_len;
  3327  0485  0842               	movf	(_rx_packet^(0+128)+1),w
  3328  0486  00F4               	movwf	??_extract_receive_packet
  3329  0487  0873               	movf	extract_receive_packet@p_data_len_buf,w
  3330  0488  0084               	movwf	4
  3331  0489  0874               	movf	??_extract_receive_packet,w
  3332  048A  0080               	movwf	0
  3333                           
  3334                           ;protocol.c: 254: rx_packet_clear();
  3335  048B  120A  118A  240E   	fcall	_rx_packet_clear
  3336                           
  3337                           ;protocol.c: 257: rx_packet_status = FALSE;
  3338  048E  1283               	bcf	3,5	;RP0=0, select bank0
  3339  048F  1303               	bcf	3,6	;RP1=0, select bank0
  3340  0490  01D2               	clrf	_rx_packet_status
  3341  0491  0008               	return
  3342  0492                     __end_of_extract_receive_packet:	
  3343                           
  3344                           	psect	text20
  3345  040E                     __ptext20:	
  3346 ;; *************** function _rx_packet_clear *****************
  3347 ;; Defined at:
  3348 ;;		line 302 in file "protocol.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;		None
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  i               2    0[COMMON] int 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;		None               void
  3355 ;; Registers used:
  3356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3362 ;;      Params:         0       0       0       0       0
  3363 ;;      Locals:         2       0       0       0       0
  3364 ;;      Temps:          0       0       0       0       0
  3365 ;;      Totals:         2       0       0       0       0
  3366 ;;Total ram usage:        2 bytes
  3367 ;; Hardware stack levels used:    1
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_extract_receive_packet
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           
  3376                           ;psect for function _rx_packet_clear
  3377  040E                     _rx_packet_clear:	
  3378                           
  3379                           ;protocol.c: 304: int i;
  3380                           ;protocol.c: 307: rx_packet.data_type = 0;
  3381                           
  3382                           ;incstack = 0
  3383                           ; Regs used in _rx_packet_clear: [wreg-fsr0h+status,2+status,0+btemp+1]
  3384  040E  1683               	bsf	3,5	;RP0=1, select bank1
  3385  040F  1303               	bcf	3,6	;RP1=0, select bank1
  3386  0410  01C1               	clrf	_rx_packet^(0+128)
  3387                           
  3388                           ;protocol.c: 310: rx_packet.payload_len = 0;
  3389  0411  01C2               	clrf	(_rx_packet^(0+128)+1)
  3390                           
  3391                           ;protocol.c: 313: for(i = 0; i < 30; i++)
  3392  0412  01F0               	clrf	rx_packet_clear@i
  3393  0413  01F1               	clrf	rx_packet_clear@i+1
  3394  0414  0871               	movf	rx_packet_clear@i+1,w
  3395  0415  3A80               	xorlw	128
  3396  0416  00FF               	movwf	127
  3397  0417  3080               	movlw	128
  3398  0418  027F               	subwf	127,w
  3399  0419  1D03               	skipz
  3400  041A  2C1D               	goto	u535
  3401  041B  301E               	movlw	30
  3402  041C  0270               	subwf	rx_packet_clear@i,w
  3403  041D                     u535:	
  3404  041D  1803               	btfsc	3,0
  3405  041E  2C35               	goto	l1254
  3406  041F                     l1248:	
  3407                           
  3408                           ;protocol.c: 314: {
  3409                           ;protocol.c: 315: rx_packet.payload[i] = 0;
  3410  041F  0870               	movf	rx_packet_clear@i,w
  3411  0420  3EC3               	addlw	(low ((_rx_packet| 0+2)))& (0+255)
  3412  0421  0084               	movwf	4
  3413  0422  1383               	bcf	3,7	;select IRP bank1
  3414  0423  0180               	clrf	0
  3415  0424  3001               	movlw	1
  3416  0425  07F0               	addwf	rx_packet_clear@i,f
  3417  0426  1803               	skipnc
  3418  0427  0AF1               	incf	rx_packet_clear@i+1,f
  3419  0428  3000               	movlw	0
  3420  0429  07F1               	addwf	rx_packet_clear@i+1,f
  3421  042A  0871               	movf	rx_packet_clear@i+1,w
  3422  042B  3A80               	xorlw	128
  3423  042C  00FF               	movwf	127
  3424  042D  3080               	movlw	128
  3425  042E  027F               	subwf	127,w
  3426  042F  1D03               	skipz
  3427  0430  2C33               	goto	u545
  3428  0431  301E               	movlw	30
  3429  0432  0270               	subwf	rx_packet_clear@i,w
  3430  0433                     u545:	
  3431  0433  1C03               	skipc
  3432  0434  2C1F               	goto	l1248
  3433  0435                     l1254:	
  3434                           
  3435                           ;protocol.c: 316: }
  3436                           ;protocol.c: 319: rx_packet.data_end_command = 0;
  3437  0435  1683               	bsf	3,5	;RP0=1, select bank1
  3438  0436  1303               	bcf	3,6	;RP1=0, select bank1
  3439  0437  01E1               	clrf	(_rx_packet^(0+128)+32)
  3440  0438  0008               	return
  3441  0439                     __end_of_rx_packet_clear:	
  3442  007E                     btemp	set	126	;btemp
  3443  007E                     wtemp	set	126
  3444  007E                     wtemp0	set	126
  3445  0080                     wtemp1	set	128
  3446  0082                     wtemp2	set	130
  3447  0084                     wtemp3	set	132
  3448  0086                     wtemp4	set	134
  3449  0088                     wtemp5	set	136
  3450  007F                     wtemp6	set	127
  3451  007E                     ttemp	set	126
  3452  007E                     ttemp0	set	126
  3453  0081                     ttemp1	set	129
  3454  0084                     ttemp2	set	132
  3455  0087                     ttemp3	set	135
  3456  007F                     ttemp4	set	127
  3457  007E                     ltemp	set	126
  3458  007E                     ltemp0	set	126
  3459  0082                     ltemp1	set	130
  3460  0086                     ltemp2	set	134
  3461  0080                     ltemp3	set	128


Data Sizes:
    Strings     24
    Constant    32
    Data        0
    BSS         67
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      51
    BANK1            80      0      66
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    double_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 5
		 -> double_data_set@buf(BANK0[5]), 

    double_to_byte_array@p_data	PTR  size(1) Largest target is 1
		 -> main@cmd(BANK0[1]), 

    uint16_to_byte_array@p_data	PTR unsigned int  size(1) Largest target is 1
		 -> main@cmd(BANK0[1]), 

    uint16_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 3
		 -> uint16_data_set@buf(COMMON[3]), 

    double_data_set@p_data	PTR  size(1) Largest target is 1
		 -> main@cmd(BANK0[1]), 

    uint16_data_set@p_data	PTR unsigned int  size(1) Largest target is 1
		 -> main@cmd(BANK0[1]), 

    uint8_data_set@p_data	PTR unsigned char  size(1) Largest target is 1
		 -> main@cmd(BANK0[1]), 

    extract_receive_packet@p_data_len_buf	PTR unsigned char  size(1) Largest target is 1
		 -> main@r_data_len(BANK0[1]), 

    extract_receive_packet@p_data_buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@r_data(BANK0[30]), 

    extract_receive_packet@p_data_type_buf	PTR unsigned char  size(1) Largest target is 1
		 -> main@r_data_type(BANK0[1]), 

    sent_data_set@p_data	PTR void  size(1) Largest target is 1
		 -> main@cmd(BANK0[1]), 

    spi_master_receive@p_get	PTR unsigned char  size(1) Largest target is 33
		 -> flag_check@flag(COMMON[1]), rx_packet.payload(BANK1[30]), rx_packet(BANK1[33]), 

    put_string@str	PTR unsigned char  size(1) Largest target is 24
		 -> STR_1(CODE[24]), 


Critical Paths under _main in COMMON

    _main->_sent_data_set
    _sent_data_set->_uint16_data_set
    _uint16_data_set->_uint16_to_byte_array
    _double_data_set->_double_to_byte_array
    _send_data_master->_spi_master_send
    _receive_data_master->_spi_master_receive
    _receive_data_master->_spi_master_send
    _put_string->_put_char
    _flag_check->_spi_master_receive
    _flag_check->_spi_master_send
    _extract_receive_packet->_rx_packet_clear

Critical Paths under _main in BANK0

    _main->_sent_data_set
    _sent_data_set->_double_data_set

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0    5358
                                             13 BANK0     37    37      0
             _extract_receive_packet
                         _flag_check
                      _pic_port_init
                           _put_char
                         _put_string
                _receive_data_master
                   _send_data_master
                      _sent_data_set
                   _spi_master_start
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_master_start                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sent_data_set                                        8     6      2    1593
                                             12 COMMON     2     0      2
                                              7 BANK0      6     6      0
                             ___wmul
                    _double_data_set
                    _uint16_data_set
                     _uint8_data_set
 ---------------------------------------------------------------------------------
 (2) _uint8_data_set                                       3     2      1     126
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _uint16_data_set                                      7     6      1     435
                                              5 COMMON     7     6      1
               _uint16_to_byte_array
 ---------------------------------------------------------------------------------
 (4) _uint16_to_byte_array                                 5     4      1     190
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (2) _double_data_set                                      9     8      1     503
                                              9 COMMON     2     1      1
                                              0 BANK0      7     7      0
               _double_to_byte_array
 ---------------------------------------------------------------------------------
 (3) _double_to_byte_array                                 9     8      1     260
                                              0 COMMON     9     8      1
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     198
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _send_data_master                                     7     5      2     994
                                              4 COMMON     7     5      2
                    _spi_master_send
                    _tx_packet_clear
 ---------------------------------------------------------------------------------
 (2) _tx_packet_clear                                      2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _receive_data_master                                  4     4      0    1108
                                              4 COMMON     4     4      0
                 _spi_master_receive
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (1) _put_string                                           2     2      0      94
                                              1 COMMON     2     2      0
                           _put_char
 ---------------------------------------------------------------------------------
 (2) _put_char                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pic_port_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _flag_check                                           5     5      0    1043
                                              4 COMMON     5     5      0
                 _spi_master_receive
                    _spi_master_send
 ---------------------------------------------------------------------------------
 (2) _spi_master_send                                      4     3      1     598
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _spi_master_receive                                   4     3      1     332
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _extract_receive_packet                               5     3      2     314
                                              2 COMMON     5     3      2
                    _rx_packet_clear
 ---------------------------------------------------------------------------------
 (2) _rx_packet_clear                                      2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _extract_receive_packet
     _rx_packet_clear
   _flag_check
     _spi_master_receive
     _spi_master_send
   _pic_port_init
   _put_char
   _put_string
     _put_char
   _receive_data_master
     _spi_master_receive
     _spi_master_send
   _send_data_master
     _spi_master_send
     _tx_packet_clear
   _sent_data_set
     ___wmul
     _double_data_set
       _double_to_byte_array
     _uint16_data_set
       _uint16_to_byte_array
     _uint8_data_set
   _spi_master_start
   _uart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      83       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     32      33       5       63.7%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      42       7       82.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      83      12        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Aug 31 14:58:57 2016

                                    pc 0002                            __CFG_CP$OFF 0000  
                          _SSPSTATbits 0094                                     l24 030F  
                                   l61 0519                                     l56 0506  
                                   l65 051E                                     l74 0540  
                                   l58 0508                                     l83 0558  
                                   l67 0521                                     l59 050A  
                                   l76 0542                                     l68 0524  
                                   l85 055B                                     l77 0544  
                                   l86 055E                                     l79 0553  
               ??_uint16_to_byte_array 0071                                     fsr 0004  
                  ___wmul@multiplicand 0072                                    l230 0493  
                                  l224 039C                                    l181 0614  
                                  l238 04C8                                    l370 0384  
                                  _RD6 0046                           __CFG_CPD$OFF 0000  
                                  u515 0448                                    u525 045E  
                                  u535 041D                                    u615 0700  
                                  u545 0433                                    u707 07B2  
                                  u565 0385                                    u717 07C2  
                                  u807 064A                                    u727 06B3  
                                  u575 038C                                    u817 065D  
                                  u737 06C4                                    u827 0678  
                                  u747 06D9                                    u837 0690  
                                  u757 06EE                                    u677 0747  
                                  u847 0588                                    u767 0714  
                                  u687 0757                                    u857 059B  
                                  u777 0730                                    u697 0776  
                                  u867 05B0                                    u787 0624  
                                  u797 0637                   uint8_data_set@p_data 0072  
                                  fsr0 0004                                    indf 0000  
          send_data_master@destination 007A                 ??_double_to_byte_array 0071  
                         __CFG_FOSC$HS 0000                           __CFG_LVP$OFF 0000  
                                 l1204 04C2                                   l1300 0609  
                                 l1160 0532                                   l1152 050C  
                                 l1240 0460                                   l1154 0517  
                                 l1234 044A                                   l1226 04FB  
                                 l1218 04E0                                   l1172 0561  
                                 l1324 06F5                                   l1420 07A9  
                                 l1254 0435                                   l1174 056C  
                                 l1166 0546                                   l1158 0527  
                                 l1326 0720                                   l1248 041F  
                                 l1168 0551                                   l1344 0577  
                                 l1280 035A                                   l1282 0375  
                                 l1258 037C                                   l1196 04A9  
                                 l1292 05E8                                   l1366 0663  
                                 l1294 05F3                                   l1438 07DF  
                                 l1384 046F                                   l1368 0682  
                                 l1296 05FE                                   l1386 0485  
                                 STR_1 0029                                   _RCIF 0065  
                                 _TXIF 0064                           __CFG_WRT$OFF 0000  
                                 _main 0739                       ??_uint8_data_set 0071  
                                 btemp 007E                          __CFG_BOREN$ON 0000  
                                 ltemp 007E                                   start 0000  
                                 ttemp 007E                                   wtemp 007E  
                     tx_packet_clear@i 0070                extract_receive_packet@i 0076  
        spi_master_receive@destination 0073                    _receive_data_master 0615  
                    ??_double_data_set 007A                                  ?_main 0070  
                        __CFG_WDTE$OFF 0000                 uint8_data_set@data_len 0070  
                                _RCREG 001A                                  _RCSTA 0018  
                                _SPBRG 0099                                  _PORTA 0005  
                                _PORTB 0006                                  _PORTC 0007  
                                _PORTD 0008                                  _PORTE 0009  
                                _TRISA 0085                                  _TRISB 0086  
                                _TRISC 0087                                  _TRISD 0088  
                                _TRISE 0089                                  _TXREG 0019  
                                _TXSTA 0098                      put_char@byte_data 0070  
                        __CFG_PWRTE$ON 0000                  spi_master_receive@buf 0072  
                 ?_receive_data_master 0070       double_to_byte_array@p_data_array 0070  
             __end_of_send_data_master 0739                                  main@i 0050  
                     ?_uint16_data_set 0075                                  pclath 000A  
                                ltemp0 007E                                  ltemp1 0082  
                                ltemp2 0086                                  ltemp3 0080  
                                ttemp0 007E                                  ttemp1 0081  
                                ttemp2 0084                                  ttemp3 0087  
                                ttemp4 007F                                  status 0003  
                                wtemp0 007E                                  wtemp1 0080  
                                wtemp2 0082                                  wtemp3 0084  
                                wtemp4 0086                                  wtemp5 0088  
                                wtemp6 007F            __size_of_spi_master_receive 003D  
              ?_extract_receive_packet 0072                        __initialization 07F4  
                uint16_data_set@p_data 007A                           __end_of_main 07F4  
                   spi_master_send@buf 0072                                 ??_main 002D  
     uint16_to_byte_array@p_data_array 0070                  ??_receive_data_master 0074  
                      _rx_packet_clear 040E                                 _TRISC6 043E  
                               _TRISC7 043F                                 _SSPBUF 0013  
       __end_of_extract_receive_packet 0492                                 ___wmul 037A  
                double_data_set@p_data 0025                       __end_of_put_char 0316  
            __size_of_spi_master_start 001F                __end_of__initialization 07FC  
                       __pcstackCOMMON 0070                  __end_of_sent_data_set 0615  
                  spi_master_send@data 0070                  flag_check@destination 0078  
              __end_of_rx_packet_clear 0439                             __pbssBANK0 0052  
                           __pbssBANK1 00A0             uint16_to_byte_array@p_data 0074  
             __size_of_spi_master_send 003A                 __size_of_pic_port_init 000F  
                      _double_data_set 04C5               __size_of_tx_packet_clear 002B  
                           __pmaintext 0739                                ?___wmul 0070  
                           _flag_check 0575          __size_of_uint16_to_byte_array 0026  
                   __size_of_uart_init 000D                         main@r_data_len 0051  
       receive_data_master@destination 0077          __size_of_double_to_byte_array 0029  
                           __stringtab 0003                      ?_send_data_master 0074  
                     _rx_packet_status 0052                     ??_send_data_master 0076  
                   uint16_data_set@buf 0077                        __size_of___wmul 0021  
                            ?_put_char 0070                spi_master_receive@p_get 0070  
                              __ptext1 031E                                __ptext2 033A  
                              __ptext3 05B8                                __ptext4 039B  
                              __ptext5 0492                                __ptext6 03BF  
                              __ptext7 04C5                                __ptext8 03E5  
                              __ptext9 037A                          _pic_port_init 032B  
                     ?_rx_packet_clear 0070                       _spi_master_start 033A  
                              main@cmd 004F                                clrloop0 0317  
                 end_of_initialization 07FC                __end_of_double_data_set 04FE  
           __end_of_spi_master_receive 0575                      __end_of_uart_init 032B  
            sent_data_set@byte_of_type 007D               __size_of_uint16_data_set 0033  
                    ??_spi_master_send 0071                       double_data_set@i 0026  
                           ??_put_char 0070                __size_of_uint8_data_set 0024  
                          ?_flag_check 0070                      ??_tx_packet_clear 0070  
          __end_of_receive_data_master 069A                              _PORTCbits 0007  
                       ?_pic_port_init 0070                  double_to_byte_array@i 0078  
                            _TRISCbits 0087                             _put_string 0359  
                           main@r_data 0030                             main@send_1 0009  
                           main@send_2 0018                uint16_data_set@data_len 0075  
                sent_data_set@data_len 007C                         __end_of___wmul 039B  
                        put_string@str 0072             spi_master_send@destination 0073  
                  start_initialization 07F4                       ?_double_data_set 0079  
 extract_receive_packet@p_data_len_buf 0073                    __size_of_flag_check 0043  
                     uint16_data_set@i 007B                               ??___wmul 0074  
                       flag_check@flag 0077                      ??_uint16_data_set 0076  
        double_to_byte_array@converter 0073                        ??_pic_port_init 0070  
                            ___latbits 0002                          __pcstackBANK0 0020  
                  sent_data_set@p_data 002C               ??_extract_receive_packet 0074  
               __size_of_sent_data_set 005D           __end_of_uint16_to_byte_array 03E5  
                          ?_put_string 0070           __end_of_double_to_byte_array 040E  
             __end_of_spi_master_start 0359                         _uint8_data_set 039B  
            __size_of_send_data_master 009F             double_to_byte_array@p_data 0077  
                            __pstrings 0003                      __size_of_put_char 0008  
            send_data_master@data_type 0074                        _spi_master_send 04FE  
                       ___wmul@product 0074                              clear_ram0 0316  
                      _tx_packet_clear 0439                 __end_of_uint8_data_set 03BF  
                            _uart_init 031E                        main@r_data_type 004E  
                         ??_flag_check 0074                          _sent_data_set 05B8  
                   _spi_master_receive 0538                            __stringbase 0008  
                            _rx_packet 00C1                      ___wmul@multiplier 0070  
                  __size_of_put_string 0021                              _tx_packet 00A0  
                  ?_spi_master_receive 0070        __size_of_extract_receive_packet 002E  
                   __end_of_flag_check 05B8               __size_of_rx_packet_clear 002B  
extract_receive_packet@p_data_type_buf 0075                   ??_spi_master_receive 0071  
                      ?_uint8_data_set 0070                             ?_uart_init 0070  
                       ?_sent_data_set 007C                     __end_of__stringtab 0009  
                    send_data_master@i 0078                   _uint16_to_byte_array 03BF  
              double_data_set@data_len 0079                __end_of_spi_master_send 0538  
                             __ptext10 069A                               __ptext11 0439  
                             __ptext20 040E                               __ptext12 0615  
                             __ptext13 0359                               __ptext14 030E  
                             __ptext15 032B                               __ptext16 0575  
                             __ptext17 04FE                               __ptext18 0538  
                             __ptext19 0464           __size_of_receive_data_master 0085  
                 _double_to_byte_array 03E5   __end_ofuint16_to_byte_array@bit_mask 0029  
         uint16_to_byte_array@bit_mask 0027                __end_of_tx_packet_clear 0464  
                        __size_of_main 00BB                   receive_data_master@i 0076  
                      _uint16_data_set 0492                       _send_data_master 069A  
                             _put_char 030E                 _extract_receive_packet 0464  
                ?_uint16_to_byte_array 0070                       rx_packet_clear@i 0070  
                   double_data_set@buf 0020                  ?_double_to_byte_array 0070  
                         ??_put_string 0071                              stringcode 0003  
             __size_of_double_data_set 0039                        ??_sent_data_set 0027  
                          ??_uart_init 0070                      ??_rx_packet_clear 0070  
                    ?_spi_master_start 0070                     ??_spi_master_start 0070  
                __end_of_pic_port_init 033A                     __end_of_put_string 037A  
                             stringdir 0003                               stringtab 0003  
                   __end_ofmain@send_1 0018                     __end_ofmain@send_2 0027  
     extract_receive_packet@p_data_buf 0072                       ?_spi_master_send 0070  
              __end_of_uint16_data_set 04C5                       ?_tx_packet_clear 0070  
     send_data_master@data_end_command 0075                             _SSPCONbits 0014  
