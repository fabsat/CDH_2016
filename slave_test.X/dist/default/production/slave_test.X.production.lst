

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Aug 31 15:01:40 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     	;# 
    43  0001                     	;# 
    44  0002                     	;# 
    45  0003                     	;# 
    46  0004                     	;# 
    47  0005                     	;# 
    48  0006                     	;# 
    49  0007                     	;# 
    50  0008                     	;# 
    51  0009                     	;# 
    52  000A                     	;# 
    53  000B                     	;# 
    54  000C                     	;# 
    55  000D                     	;# 
    56  000E                     	;# 
    57  000E                     	;# 
    58  000F                     	;# 
    59  0010                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0013                     	;# 
    63  0014                     	;# 
    64  0015                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001B                     	;# 
    72  001B                     	;# 
    73  001C                     	;# 
    74  001D                     	;# 
    75  001E                     	;# 
    76  001F                     	;# 
    77  0081                     	;# 
    78  0085                     	;# 
    79  0086                     	;# 
    80  0087                     	;# 
    81  0088                     	;# 
    82  0089                     	;# 
    83  008C                     	;# 
    84  008D                     	;# 
    85  008E                     	;# 
    86  0091                     	;# 
    87  0092                     	;# 
    88  0093                     	;# 
    89  0094                     	;# 
    90  0098                     	;# 
    91  0099                     	;# 
    92  009C                     	;# 
    93  009D                     	;# 
    94  009E                     	;# 
    95  009F                     	;# 
    96  010C                     	;# 
    97  010D                     	;# 
    98  010E                     	;# 
    99  010F                     	;# 
   100  018C                     	;# 
   101  018D                     	;# 
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  0006                     	;# 
   109  0007                     	;# 
   110  0008                     	;# 
   111  0009                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000D                     	;# 
   116  000E                     	;# 
   117  000E                     	;# 
   118  000F                     	;# 
   119  0010                     	;# 
   120  0011                     	;# 
   121  0012                     	;# 
   122  0013                     	;# 
   123  0014                     	;# 
   124  0015                     	;# 
   125  0015                     	;# 
   126  0016                     	;# 
   127  0017                     	;# 
   128  0018                     	;# 
   129  0019                     	;# 
   130  001A                     	;# 
   131  001B                     	;# 
   132  001B                     	;# 
   133  001C                     	;# 
   134  001D                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  0081                     	;# 
   138  0085                     	;# 
   139  0086                     	;# 
   140  0087                     	;# 
   141  0088                     	;# 
   142  0089                     	;# 
   143  008C                     	;# 
   144  008D                     	;# 
   145  008E                     	;# 
   146  0091                     	;# 
   147  0092                     	;# 
   148  0093                     	;# 
   149  0094                     	;# 
   150  0098                     	;# 
   151  0099                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  0007                     	;# 
   170  0008                     	;# 
   171  0009                     	;# 
   172  000A                     	;# 
   173  000B                     	;# 
   174  000C                     	;# 
   175  000D                     	;# 
   176  000E                     	;# 
   177  000E                     	;# 
   178  000F                     	;# 
   179  0010                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0015                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001B                     	;# 
   193  001C                     	;# 
   194  001D                     	;# 
   195  001E                     	;# 
   196  001F                     	;# 
   197  0081                     	;# 
   198  0085                     	;# 
   199  0086                     	;# 
   200  0087                     	;# 
   201  0088                     	;# 
   202  0089                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  0091                     	;# 
   207  0092                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0098                     	;# 
   211  0099                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  009F                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0000                     	;# 
   283  0001                     	;# 
   284  0002                     	;# 
   285  0003                     	;# 
   286  0004                     	;# 
   287  0005                     	;# 
   288  0006                     	;# 
   289  0007                     	;# 
   290  0008                     	;# 
   291  0009                     	;# 
   292  000A                     	;# 
   293  000B                     	;# 
   294  000C                     	;# 
   295  000D                     	;# 
   296  000E                     	;# 
   297  000E                     	;# 
   298  000F                     	;# 
   299  0010                     	;# 
   300  0011                     	;# 
   301  0012                     	;# 
   302  0013                     	;# 
   303  0014                     	;# 
   304  0015                     	;# 
   305  0015                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001B                     	;# 
   313  001C                     	;# 
   314  001D                     	;# 
   315  001E                     	;# 
   316  001F                     	;# 
   317  0081                     	;# 
   318  0085                     	;# 
   319  0086                     	;# 
   320  0087                     	;# 
   321  0088                     	;# 
   322  0089                     	;# 
   323  008C                     	;# 
   324  008D                     	;# 
   325  008E                     	;# 
   326  0091                     	;# 
   327  0092                     	;# 
   328  0093                     	;# 
   329  0094                     	;# 
   330  0098                     	;# 
   331  0099                     	;# 
   332  009C                     	;# 
   333  009D                     	;# 
   334  009E                     	;# 
   335  009F                     	;# 
   336  010C                     	;# 
   337  010D                     	;# 
   338  010E                     	;# 
   339  010F                     	;# 
   340  018C                     	;# 
   341  018D                     	;# 
   342                           
   343                           	psect	idataBANK1
   344  04F2                     __pidataBANK1:	
   345                           
   346                           ;initializer for main@F1167
   347  04F2  3461               	retlw	97
   348  04F3  3462               	retlw	98
   349  04F4  3463               	retlw	99
   350  04F5  3464               	retlw	100
   351  04F6  3465               	retlw	101
   352                           
   353                           	psect	strings
   354  045E                     __pstrings:	
   355  045E                     stringtab:	
   356  045E                     __stringtab:	
   357  045E                     stringcode:	
   358                           ;	String table - string pointers are 1 byte each
   359                           
   360  045E                     stringdir:	
   361  045E  3004               	movlw	high stringdir
   362  045F  008A               	movwf	10
   363  0460  0804               	movf	4,w
   364  0461  0A84               	incf	4,f
   365  0462  0782               	addwf	2,f
   366  0463                     __stringbase:	
   367  0463  3400               	retlw	0
   368  0464                     __end_of__stringtab:	
   369  0464                     uint16_to_byte_array@bit_mask:	
   370  0464  34FF               	retlw	255
   371  0465  3400               	retlw	0
   372  0466                     __end_ofuint16_to_byte_array@bit_mask:	
   373  001F                     _ADCON0bits	set	31
   374  000B                     _INTCONbits	set	11
   375  000C                     _PIR1bits	set	12
   376  0005                     _PORTA	set	5
   377  0006                     _PORTB	set	6
   378  0007                     _PORTC	set	7
   379  0008                     _PORTD	set	8
   380  0009                     _PORTE	set	9
   381  001A                     _RCREG	set	26
   382  0018                     _RCSTA	set	24
   383  0013                     _SSPBUF	set	19
   384  0014                     _SSPCONbits	set	20
   385  0019                     _TXREG	set	25
   386  0028                     _RA0	set	40
   387  0065                     _RCIF	set	101
   388  0064                     _TXIF	set	100
   389  009F                     _ADCON1bits	set	159
   390  008C                     _PIE1bits	set	140
   391  0099                     _SPBRG	set	153
   392  0094                     _SSPSTATbits	set	148
   393  0085                     _TRISA	set	133
   394  0086                     _TRISB	set	134
   395  0087                     _TRISC	set	135
   396  0088                     _TRISD	set	136
   397  0089                     _TRISE	set	137
   398  0098                     _TXSTA	set	152
   399  042D                     _TRISA5	set	1069
   400  043B                     _TRISC3	set	1083
   401  043C                     _TRISC4	set	1084
   402  043D                     _TRISC5	set	1085
   403  043E                     _TRISC6	set	1086
   404  043F                     _TRISC7	set	1087
   405  0466                     STR_1:	
   406  0466  3453               	retlw	83	;'S'
   407  0467  346C               	retlw	108	;'l'
   408  0468  3461               	retlw	97	;'a'
   409  0469  3476               	retlw	118	;'v'
   410  046A  3465               	retlw	101	;'e'
   411  046B  3420               	retlw	32	;' '
   412  046C  3450               	retlw	80	;'P'
   413  046D  3472               	retlw	114	;'r'
   414  046E  346F               	retlw	111	;'o'
   415  046F  3467               	retlw	103	;'g'
   416  0470  3472               	retlw	114	;'r'
   417  0471  3461               	retlw	97	;'a'
   418  0472  346D               	retlw	109	;'m'
   419  0473  3420               	retlw	32	;' '
   420  0474  3453               	retlw	83	;'S'
   421  0475  3474               	retlw	116	;'t'
   422  0476  3461               	retlw	97	;'a'
   423  0477  3472               	retlw	114	;'r'
   424  0478  3474               	retlw	116	;'t'
   425  0479  3421               	retlw	33	;'!'
   426  047A  340D               	retlw	13
   427  047B  340A               	retlw	10
   428  047C  3400               	retlw	0
   429                           
   430                           ; #config settings
   431  0000                     
   432                           	psect	cinit
   433  0015                     start_initialization:	
   434  0015                     __initialization:	
   435                           
   436                           ; Clear objects allocated to COMMON
   437  0015  01FC               	clrf	__pbssCOMMON& (0+127)
   438                           
   439                           ; Clear objects allocated to BANK0
   440  0016  1383               	bcf	3,7	;select IRP bank0
   441  0017  3042               	movlw	low __pbssBANK0
   442  0018  0084               	movwf	4
   443  0019  3063               	movlw	low (__pbssBANK0+33)
   444  001A  120A  118A  24EA  120A  118A  	fcall	clear_ram0
   445                           
   446                           ; Clear objects allocated to BANK1
   447  001F  1683               	bsf	3,5	;RP0=1, select bank1
   448  0020  1303               	bcf	3,6	;RP1=0, select bank1
   449  0021  01E7               	clrf	__pbssBANK1& (0+127)
   450                           
   451                           ; Clear objects allocated to BANK3
   452  0022  1783               	bsf	3,7	;select IRP bank2
   453  0023  3090               	movlw	low __pbssBANK3
   454  0024  0084               	movwf	4
   455  0025  30B1               	movlw	low (__pbssBANK3+33)
   456  0026  120A  118A  24EA  120A  118A  	fcall	clear_ram0
   457                           
   458                           ; Initialize objects allocated to BANK1
   459  002B  120A  118A  24F2  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   460  0030  00E2               	movwf	__pdataBANK1& (0+127)
   461  0031  120A  118A  24F3  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   462  0036  00E3               	movwf	(__pdataBANK1+1)& (0+127)
   463  0037  120A  118A  24F4  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   464  003C  00E4               	movwf	(__pdataBANK1+2)& (0+127)
   465  003D  120A  118A  24F5  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   466  0042  00E5               	movwf	(__pdataBANK1+3)& (0+127)
   467  0043  120A  118A  24F6   	fcall	__pidataBANK1+4	;fetch initializer
   468  0046  00E6               	movwf	(__pdataBANK1+4)& (0+127)
   469  0047                     end_of_initialization:	
   470                           ;End of C runtime variable initialization code
   471                           
   472  0047                     __end_of__initialization:	
   473  0047  0183               	clrf	3
   474  0048  120A  118A  284B   	ljmp	_main	;jump to C main() function
   475                           
   476                           	psect	bssCOMMON
   477  007C                     __pbssCOMMON:	
   478  007C                     _tx_packet_status:	
   479  007C                     	ds	1
   480                           
   481                           	psect	bssBANK0
   482  0042                     __pbssBANK0:	
   483  0042                     _tx_packet:	
   484  0042                     	ds	33
   485                           
   486                           	psect	bssBANK1
   487  00E7                     __pbssBANK1:	
   488  00E7                     _rx_packet_status:	
   489  00E7                     	ds	1
   490                           
   491                           	psect	dataBANK1
   492  00E2                     __pdataBANK1:	
   493  00E2                     main@F1167:	
   494  00E2                     	ds	5
   495                           
   496                           	psect	bssBANK3
   497  0190                     __pbssBANK3:	
   498  0190                     _rx_packet:	
   499  0190                     	ds	33
   500                           
   501                           	psect	clrtext
   502  04EA                     clear_ram0:	
   503                           ;	Called with FSR containing the base address, and
   504                           ;	W with the last address+1
   505                           
   506  04EA  0064               	clrwdt	;clear the watchdog before getting into this loop
   507  04EB                     clrloop0:	
   508  04EB  0180               	clrf	0	;clear RAM location pointed to by FSR
   509  04EC  0A84               	incf	4,f	;increment pointer
   510  04ED  0604               	xorwf	4,w	;XOR with final address
   511  04EE  1903               	btfsc	3,2	;have we reached the end yet?
   512  04EF  3400               	retlw	0	;all done for this memory range, return
   513  04F0  0604               	xorwf	4,w	;XOR again to restore value
   514  04F1  2CEB               	goto	clrloop0	;do the next byte
   515                           
   516                           	psect	cstackBANK1
   517  00A0                     __pcstackBANK1:	
   518  00A0                     ??_pic_port_init:	
   519  00A0                     ??_spi_slave_start:	
   520                           ; 0 bytes @ 0x0
   521                           
   522  00A0                     ?_send_data_slave:	
   523                           ; 0 bytes @ 0x0
   524                           
   525  00A0                     ?_uint8_data_set:	
   526                           ; 0 bytes @ 0x0
   527                           
   528  00A0                     ??_rx_packet_clear:	
   529                           ; 0 bytes @ 0x0
   530                           
   531  00A0                     ?_uint16_to_byte_array:	
   532                           ; 0 bytes @ 0x0
   533                           
   534  00A0                     ?_double_to_byte_array:	
   535                           ; 0 bytes @ 0x0
   536                           
   537  00A0                     ??_uart_init:	
   538                           ; 0 bytes @ 0x0
   539                           
   540  00A0                     ??_put_char:	
   541                           ; 0 bytes @ 0x0
   542                           
   543  00A0                     ?___wmul:	
   544                           ; 0 bytes @ 0x0
   545                           
   546  00A0                     put_char@byte_data:	
   547                           ; 2 bytes @ 0x0
   548                           
   549  00A0                     spi_slave_start@spi_isr:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  00A0                     send_data_slave@data_end_command:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  00A0                     uint8_data_set@data_len:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  00A0                     uint16_to_byte_array@p_data_array:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  00A0                     double_to_byte_array@p_data_array:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  00A0                     rx_packet_clear@i:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  00A0                     ___wmul@multiplier:	
   568                           ; 2 bytes @ 0x0
   569                           
   570                           
   571                           ; 2 bytes @ 0x0
   572  00A0                     	ds	1
   573  00A1                     ??_send_data_slave:	
   574  00A1                     ??_uint8_data_set:	
   575                           ; 0 bytes @ 0x1
   576                           
   577  00A1                     ??_uint16_to_byte_array:	
   578                           ; 0 bytes @ 0x1
   579                           
   580  00A1                     ??_double_to_byte_array:	
   581                           ; 0 bytes @ 0x1
   582                           
   583  00A1                     ??_put_string:	
   584                           ; 0 bytes @ 0x1
   585                           
   586                           
   587                           ; 0 bytes @ 0x1
   588  00A1                     	ds	1
   589  00A2                     ?_extract_receive_packet:	
   590  00A2                     put_string@str:	
   591                           ; 0 bytes @ 0x2
   592                           
   593  00A2                     send_data_slave@data_type:	
   594                           ; 1 bytes @ 0x2
   595                           
   596  00A2                     extract_receive_packet@p_data_buf:	
   597                           ; 1 bytes @ 0x2
   598                           
   599  00A2                     uint8_data_set@p_data:	
   600                           ; 1 bytes @ 0x2
   601                           
   602  00A2                     ___wmul@multiplicand:	
   603                           ; 1 bytes @ 0x2
   604                           
   605                           
   606                           ; 2 bytes @ 0x2
   607  00A2                     	ds	1
   608  00A3                     extract_receive_packet@p_data_len_buf:	
   609  00A3                     double_to_byte_array@converter:	
   610                           ; 1 bytes @ 0x3
   611                           
   612                           
   613                           ; 4 bytes @ 0x3
   614  00A3                     	ds	1
   615  00A4                     ??_extract_receive_packet:	
   616  00A4                     ??___wmul:	
   617                           ; 0 bytes @ 0x4
   618                           
   619  00A4                     uint16_to_byte_array@p_data:	
   620                           ; 0 bytes @ 0x4
   621                           
   622  00A4                     ___wmul@product:	
   623                           ; 1 bytes @ 0x4
   624                           
   625                           
   626                           ; 2 bytes @ 0x4
   627  00A4                     	ds	1
   628  00A5                     ?_uint16_data_set:	
   629  00A5                     extract_receive_packet@p_data_type_buf:	
   630                           ; 0 bytes @ 0x5
   631                           
   632  00A5                     uint16_data_set@data_len:	
   633                           ; 1 bytes @ 0x5
   634                           
   635                           
   636                           ; 1 bytes @ 0x5
   637  00A5                     	ds	1
   638  00A6                     ??_uint16_data_set:	
   639  00A6                     extract_receive_packet@i:	
   640                           ; 0 bytes @ 0x6
   641                           
   642                           
   643                           ; 1 bytes @ 0x6
   644  00A6                     	ds	1
   645  00A7                     double_to_byte_array@p_data:	
   646  00A7                     uint16_data_set@buf:	
   647                           ; 1 bytes @ 0x7
   648                           
   649                           
   650                           ; 3 bytes @ 0x7
   651  00A7                     	ds	1
   652  00A8                     double_to_byte_array@i:	
   653                           
   654                           ; 1 bytes @ 0x8
   655  00A8                     	ds	1
   656  00A9                     ?_double_data_set:	
   657  00A9                     double_data_set@data_len:	
   658                           ; 0 bytes @ 0x9
   659                           
   660                           
   661                           ; 1 bytes @ 0x9
   662  00A9                     	ds	1
   663  00AA                     ??_double_data_set:	
   664  00AA                     uint16_data_set@p_data:	
   665                           ; 0 bytes @ 0xA
   666                           
   667                           
   668                           ; 1 bytes @ 0xA
   669  00AA                     	ds	1
   670  00AB                     uint16_data_set@i:	
   671  00AB                     double_data_set@buf:	
   672                           ; 1 bytes @ 0xB
   673                           
   674                           
   675                           ; 5 bytes @ 0xB
   676  00AB                     	ds	5
   677  00B0                     double_data_set@p_data:	
   678                           
   679                           ; 1 bytes @ 0x10
   680  00B0                     	ds	1
   681  00B1                     double_data_set@i:	
   682                           
   683                           ; 1 bytes @ 0x11
   684  00B1                     	ds	1
   685  00B2                     ?_sent_data_set:	
   686  00B2                     sent_data_set@data_len:	
   687                           ; 1 bytes @ 0x12
   688                           
   689                           
   690                           ; 1 bytes @ 0x12
   691  00B2                     	ds	1
   692  00B3                     sent_data_set@byte_of_type:	
   693                           
   694                           ; 1 bytes @ 0x13
   695  00B3                     	ds	1
   696  00B4                     ??_sent_data_set:	
   697                           
   698                           ; 0 bytes @ 0x14
   699  00B4                     	ds	5
   700  00B9                     sent_data_set@p_data:	
   701                           
   702                           ; 1 bytes @ 0x19
   703  00B9                     	ds	1
   704  00BA                     ??_main:	
   705                           
   706                           ; 0 bytes @ 0x1A
   707  00BA                     	ds	3
   708  00BD                     main@r_data:	
   709                           
   710                           ; 30 bytes @ 0x1D
   711  00BD                     	ds	30
   712  00DB                     main@send_data:	
   713                           
   714                           ; 5 bytes @ 0x3B
   715  00DB                     	ds	5
   716  00E0                     main@r_data_type:	
   717                           
   718                           ; 1 bytes @ 0x40
   719  00E0                     	ds	1
   720  00E1                     main@r_data_len:	
   721                           
   722                           ; 1 bytes @ 0x41
   723  00E1                     	ds	1
   724                           
   725                           	psect	cstackCOMMON
   726  0070                     __pcstackCOMMON:	
   727  0070                     ?_pic_port_init:	
   728  0070                     ?_spi_slave_start:	
   729                           ; 0 bytes @ 0x0
   730                           
   731  0070                     ?_receive_packet:	
   732                           ; 0 bytes @ 0x0
   733                           
   734  0070                     ?_send_packet:	
   735                           ; 0 bytes @ 0x0
   736                           
   737  0070                     ?_check_flag:	
   738                           ; 0 bytes @ 0x0
   739                           
   740  0070                     ?_rx_packet_clear:	
   741                           ; 0 bytes @ 0x0
   742                           
   743  0070                     ?_buf_send:	
   744                           ; 0 bytes @ 0x0
   745                           
   746  0070                     ??_buf_send:	
   747                           ; 0 bytes @ 0x0
   748                           
   749  0070                     ?_uart_init:	
   750                           ; 0 bytes @ 0x0
   751                           
   752  0070                     ?_put_char:	
   753                           ; 0 bytes @ 0x0
   754                           
   755  0070                     ?_put_string:	
   756                           ; 0 bytes @ 0x0
   757                           
   758  0070                     ?_spi_slave_send:	
   759                           ; 0 bytes @ 0x0
   760                           
   761  0070                     ??_spi_slave_send:	
   762                           ; 0 bytes @ 0x0
   763                           
   764  0070                     ?_spi_slave_receive:	
   765                           ; 0 bytes @ 0x0
   766                           
   767  0070                     ??_spi_slave_receive:	
   768                           ; 0 bytes @ 0x0
   769                           
   770  0070                     ?_isr:	
   771                           ; 0 bytes @ 0x0
   772                           
   773  0070                     ?_tx_packet_clear:	
   774                           ; 0 bytes @ 0x0
   775                           
   776  0070                     ??_tx_packet_clear:	
   777                           ; 0 bytes @ 0x0
   778                           
   779  0070                     ?_main:	
   780                           ; 0 bytes @ 0x0
   781                           
   782  0070                     tx_packet_clear@i:	
   783                           ; 2 bytes @ 0x0
   784                           
   785                           
   786                           ; 2 bytes @ 0x0
   787  0070                     	ds	1
   788  0071                     spi_slave_send@buf:	
   789  0071                     spi_slave_receive@p_get:	
   790                           ; 1 bytes @ 0x1
   791                           
   792  0071                     buf_send@i:	
   793                           ; 1 bytes @ 0x1
   794                           
   795                           
   796                           ; 1 bytes @ 0x1
   797  0071                     	ds	1
   798  0072                     spi_slave_send@data:	
   799  0072                     buf_send@buf:	
   800                           ; 1 bytes @ 0x2
   801                           
   802                           
   803                           ; 1 bytes @ 0x2
   804  0072                     	ds	1
   805  0073                     ??_receive_packet:	
   806  0073                     ??_send_packet:	
   807                           ; 0 bytes @ 0x3
   808                           
   809  0073                     ??_check_flag:	
   810                           ; 0 bytes @ 0x3
   811                           
   812                           
   813                           ; 0 bytes @ 0x3
   814  0073                     	ds	1
   815  0074                     send_packet@i:	
   816                           
   817                           ; 1 bytes @ 0x4
   818  0074                     	ds	2
   819  0076                     ??_isr:	
   820                           
   821                           ; 0 bytes @ 0x6
   822  0076                     	ds	5
   823  007B                     isr@isr_spi_buf:	
   824                           
   825                           ; 1 bytes @ 0xB
   826  007B                     	ds	1
   827                           
   828                           	psect	cstackBANK0
   829  0020                     __pcstackBANK0:	
   830  0020                     receive_packet@receive_buf:	
   831                           
   832                           ; 33 bytes @ 0x0
   833  0020                     	ds	33
   834  0041                     receive_packet@i:	
   835                           
   836                           ; 1 bytes @ 0x21
   837  0041                     	ds	1
   838                           
   839                           	psect	maintext
   840  004B                     __pmaintext:	
   841 ;;
   842 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   843 ;;
   844 ;; *************** function _main *****************
   845 ;; Defined at:
   846 ;;		line 32 in file "main.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  r_data         30   29[BANK1 ] unsigned char [30]
   851 ;;  send_data       5   59[BANK1 ] unsigned char [5]
   852 ;;  r_data_len      1   65[BANK1 ] unsigned char 
   853 ;;  r_data_type     1   64[BANK1 ] unsigned char 
   854 ;; Return value:  Size  Location     Type
   855 ;;                  2   83[None  ] int 
   856 ;; Registers used:
   857 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : B00/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   863 ;;      Params:         0       0       0       0       0
   864 ;;      Locals:         0       0      37       0       0
   865 ;;      Temps:          0       0       3       0       0
   866 ;;      Totals:         0       0      40       0       0
   867 ;;Total ram usage:       40 bytes
   868 ;; Hardware stack levels required when called:    6
   869 ;; This function calls:
   870 ;;		_extract_receive_packet
   871 ;;		_pic_port_init
   872 ;;		_put_char
   873 ;;		_put_string
   874 ;;		_send_data_slave
   875 ;;		_sent_data_set
   876 ;;		_spi_slave_start
   877 ;;		_uart_init
   878 ;; This function is called by:
   879 ;;		Startup code after reset
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           
   884                           ;psect for function _main
   885  004B                     _main:	
   886                           
   887                           ;main.c: 35: uint8_t r_data_type;
   888                           ;main.c: 36: uint8_t r_data[30];
   889                           ;main.c: 37: uint8_t r_data_len;
   890                           ;main.c: 39: uint8_t send_data[] = {'a', 'b', 'c', 'd', 'e'};
   891                           
   892                           ;incstack = 0
   893                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   894  004B  30DB               	movlw	main@send_data& (0+255)
   895  004C  0084               	movwf	4
   896  004D  1683               	bsf	3,5	;RP0=1, select bank1
   897  004E  1303               	bcf	3,6	;RP1=0, select bank1
   898  004F  0862               	movf	main@F1167^(0+128),w
   899  0050  1383               	bcf	3,7	;select IRP bank1
   900  0051  0080               	movwf	0
   901  0052  0A84               	incf	4,f
   902  0053  0863               	movf	(main@F1167^(0+128)+1),w
   903  0054  0080               	movwf	0
   904  0055  0A84               	incf	4,f
   905  0056  0864               	movf	(main@F1167^(0+128)+2),w
   906  0057  0080               	movwf	0
   907  0058  0A84               	incf	4,f
   908  0059  0865               	movf	(main@F1167^(0+128)+3),w
   909  005A  0080               	movwf	0
   910  005B  0A84               	incf	4,f
   911  005C  0866               	movf	(main@F1167^(0+128)+4),w
   912  005D  0080               	movwf	0
   913                           
   914                           ;main.c: 41: pic_port_init();
   915  005E  120A  118A  24B4  120A  118A  	fcall	_pic_port_init
   916                           
   917                           ;main.c: 44: RA0 = 1;
   918  0063  1283               	bcf	3,5	;RP0=0, select bank0
   919  0064  1303               	bcf	3,6	;RP1=0, select bank0
   920  0065  1405               	bsf	5,0	;volatile
   921                           
   922                           ;main.c: 45: _delay((unsigned long)((500)*(20000000/4000.0)));
   923  0066  300D               	movlw	13
   924  0067  1683               	bsf	3,5	;RP0=1, select bank1
   925  0068  1303               	bcf	3,6	;RP1=0, select bank1
   926  0069  00BC               	movwf	(??_main^(0+128)+2)
   927  006A  30AF               	movlw	175
   928  006B  00BB               	movwf	(??_main^(0+128)+1)
   929  006C  30C1               	movlw	193
   930  006D  00BA               	movwf	??_main^(0+128)
   931  006E                     u857:	
   932  006E  0BBA               	decfsz	??_main^(0+128),f
   933  006F  286E               	goto	u857
   934  0070  0BBB               	decfsz	(??_main^(0+128)+1),f
   935  0071  286E               	goto	u857
   936  0072  0BBC               	decfsz	(??_main^(0+128)+2),f
   937  0073  286E               	goto	u857
   938  0074  0000               	nop
   939                           
   940                           ;main.c: 46: RA0 = 0;
   941  0075  1283               	bcf	3,5	;RP0=0, select bank0
   942  0076  1303               	bcf	3,6	;RP1=0, select bank0
   943  0077  1005               	bcf	5,0	;volatile
   944                           
   945                           ;main.c: 47: _delay((unsigned long)((500)*(20000000/4000.0)));
   946  0078  300D               	movlw	13
   947  0079  1683               	bsf	3,5	;RP0=1, select bank1
   948  007A  1303               	bcf	3,6	;RP1=0, select bank1
   949  007B  00BC               	movwf	(??_main^(0+128)+2)
   950  007C  30AF               	movlw	175
   951  007D  00BB               	movwf	(??_main^(0+128)+1)
   952  007E  30C1               	movlw	193
   953  007F  00BA               	movwf	??_main^(0+128)
   954  0080                     u867:	
   955  0080  0BBA               	decfsz	??_main^(0+128),f
   956  0081  2880               	goto	u867
   957  0082  0BBB               	decfsz	(??_main^(0+128)+1),f
   958  0083  2880               	goto	u867
   959  0084  0BBC               	decfsz	(??_main^(0+128)+2),f
   960  0085  2880               	goto	u867
   961  0086  0000               	nop
   962                           
   963                           ;main.c: 50: uart_init();
   964  0087  120A  118A  24C3  120A  118A  	fcall	_uart_init
   965                           
   966                           ;main.c: 51: spi_slave_start(SPI_ISR_ENABLE);
   967  008C  3000               	movlw	0
   968  008D  120A  118A  2306  120A  118A  	fcall	_spi_slave_start
   969                           
   970                           ;main.c: 54: put_string("Slave Program Start!\r\n");
   971  0092  3003               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   972  0093  120A  118A  2416  120A  118A  	fcall	_put_string
   973  0098                     l1486:	
   974                           ;main.c: 56: while(1)
   975                           
   976                           
   977                           ;main.c: 57: {
   978                           ;main.c: 58: RA0 = 1;
   979  0098  1283               	bcf	3,5	;RP0=0, select bank0
   980  0099  1303               	bcf	3,6	;RP1=0, select bank0
   981  009A  1405               	bsf	5,0	;volatile
   982                           
   983                           ;main.c: 59: _delay((unsigned long)((100)*(20000000/4000.0)));
   984  009B  3003               	movlw	3
   985  009C  1683               	bsf	3,5	;RP0=1, select bank1
   986  009D  1303               	bcf	3,6	;RP1=0, select bank1
   987  009E  00BC               	movwf	(??_main^(0+128)+2)
   988  009F  308A               	movlw	138
   989  00A0  00BB               	movwf	(??_main^(0+128)+1)
   990  00A1  3056               	movlw	86
   991  00A2  00BA               	movwf	??_main^(0+128)
   992  00A3                     u877:	
   993  00A3  0BBA               	decfsz	??_main^(0+128),f
   994  00A4  28A3               	goto	u877
   995  00A5  0BBB               	decfsz	(??_main^(0+128)+1),f
   996  00A6  28A3               	goto	u877
   997  00A7  0BBC               	decfsz	(??_main^(0+128)+2),f
   998  00A8  28A3               	goto	u877
   999  00A9  28AA               	nop2
  1000                           
  1001                           ;main.c: 60: RA0 = 0;
  1002  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1003  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1004  00AC  1005               	bcf	5,0	;volatile
  1005                           
  1006                           ;main.c: 61: _delay((unsigned long)((100)*(20000000/4000.0)));
  1007  00AD  3003               	movlw	3
  1008  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  1009  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  1010  00B0  00BC               	movwf	(??_main^(0+128)+2)
  1011  00B1  308A               	movlw	138
  1012  00B2  00BB               	movwf	(??_main^(0+128)+1)
  1013  00B3  3056               	movlw	86
  1014  00B4  00BA               	movwf	??_main^(0+128)
  1015  00B5                     u887:	
  1016  00B5  0BBA               	decfsz	??_main^(0+128),f
  1017  00B6  28B5               	goto	u887
  1018  00B7  0BBB               	decfsz	(??_main^(0+128)+1),f
  1019  00B8  28B5               	goto	u887
  1020  00B9  0BBC               	decfsz	(??_main^(0+128)+2),f
  1021  00BA  28B5               	goto	u887
  1022  00BB  28BC               	nop2
  1023                           
  1024                           ;main.c: 63: if (rx_packet_status == TRUE)
  1025  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  1026  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  1027  00BE  0367               	decf	_rx_packet_status^(0+128),w
  1028  00BF  1D03               	btfss	3,2
  1029  00C0  2898               	goto	l1486
  1030                           
  1031                           ;main.c: 64: {
  1032                           ;main.c: 65: extract_receive_packet(&r_data_type, r_data, &r_data_len);
  1033  00C1  30BD               	movlw	(low (main@r_data| 0))& (0+255)
  1034  00C2  00BA               	movwf	??_main^(0+128)
  1035  00C3  083A               	movf	??_main^(0+128),w
  1036  00C4  00A2               	movwf	extract_receive_packet@p_data_buf^(0+128)
  1037  00C5  30E1               	movlw	(low (main@r_data_len| 0))& (0+255)
  1038  00C6  00BB               	movwf	(??_main+1)^(0+128)
  1039  00C7  083B               	movf	(??_main+1)^(0+128),w
  1040  00C8  00A3               	movwf	extract_receive_packet@p_data_len_buf^(0+128)
  1041  00C9  30E0               	movlw	(low (main@r_data_type| 0))& (0+255)
  1042  00CA  120A  118A  2223  120A  118A  	fcall	_extract_receive_packet
  1043                           
  1044                           ;main.c: 66: put_char(r_data[0]);
  1045  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  1046  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  1047  00D1  083D               	movf	main@r_data^(0+128),w
  1048  00D2  120A  118A  24D0  120A  118A  	fcall	_put_char
  1049                           
  1050                           ;main.c: 67: put_char(r_data[1]);
  1051  00D7  1683               	bsf	3,5	;RP0=1, select bank1
  1052  00D8  1303               	bcf	3,6	;RP1=0, select bank1
  1053  00D9  083E               	movf	(main@r_data^(0+128)+1),w
  1054  00DA  120A  118A  24D0  120A  118A  	fcall	_put_char
  1055                           
  1056                           ;main.c: 69: if(r_data[1] == 0x02)
  1057  00DF  3002               	movlw	2
  1058  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  1059  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  1060  00E2  063E               	xorwf	(main@r_data^(0+128)+1),w
  1061  00E3  1D03               	btfss	3,2
  1062  00E4  2898               	goto	l1486
  1063                           
  1064                           ;main.c: 70: {
  1065                           ;main.c: 71: _delay((unsigned long)((5000)*(20000000/4000.0)));
  1066  00E5  307F               	movlw	127
  1067  00E6  00BC               	movwf	(??_main^(0+128)+2)
  1068  00E7  30D4               	movlw	212
  1069  00E8  00BB               	movwf	(??_main^(0+128)+1)
  1070  00E9  30AE               	movlw	174
  1071  00EA  00BA               	movwf	??_main^(0+128)
  1072  00EB                     u897:	
  1073  00EB  0BBA               	decfsz	??_main^(0+128),f
  1074  00EC  28EB               	goto	u897
  1075  00ED  0BBB               	decfsz	(??_main^(0+128)+1),f
  1076  00EE  28EB               	goto	u897
  1077  00EF  0BBC               	decfsz	(??_main^(0+128)+2),f
  1078  00F0  28EB               	goto	u897
  1079  00F1  28F2               	nop2
  1080                           
  1081                           ;main.c: 72: sent_data_set(send_data, sizeof(send_data), sizeof(uint8_t));
  1082  00F2  3005               	movlw	5
  1083  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  1084  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  1085  00F5  00BA               	movwf	??_main^(0+128)
  1086  00F6  083A               	movf	??_main^(0+128),w
  1087  00F7  00B2               	movwf	sent_data_set@data_len^(0+128)
  1088  00F8  01B3               	clrf	sent_data_set@byte_of_type^(0+128)
  1089  00F9  0AB3               	incf	sent_data_set@byte_of_type^(0+128),f
  1090  00FA  30DB               	movlw	(low (main@send_data| 0))& (0+255)
  1091  00FB  120A  118A  210D  120A  118A  	fcall	_sent_data_set
  1092                           
  1093                           ;main.c: 73: send_data_slave(DATA, DATA_END);
  1094  0100  3010               	movlw	16
  1095  0101  1683               	bsf	3,5	;RP0=1, select bank1
  1096  0102  1303               	bcf	3,6	;RP1=0, select bank1
  1097  0103  00BA               	movwf	??_main^(0+128)
  1098  0104  083A               	movf	??_main^(0+128),w
  1099  0105  00A0               	movwf	send_data_slave@data_end_command^(0+128)
  1100  0106  3002               	movlw	2
  1101  0107  120A  118A  247D  120A  118A  	fcall	_send_data_slave
  1102  010C  2898               	goto	l1486
  1103  010D                     __end_of_main:	
  1104                           ;main.c: 74: }
  1105                           ;main.c: 75: }
  1106                           ;main.c: 76: }
  1107                           ;main.c: 78: return 0;
  1108                           ;	Return value of _main is never used
  1109                           
  1110                           
  1111                           	psect	text1
  1112  04C3                     __ptext1:	
  1113 ;; *************** function _uart_init *****************
  1114 ;; Defined at:
  1115 ;;		line 38 in file "uart.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;		None
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;		None
  1120 ;; Return value:  Size  Location     Type
  1121 ;;		None               void
  1122 ;; Registers used:
  1123 ;;		wreg
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1129 ;;      Params:         0       0       0       0       0
  1130 ;;      Locals:         0       0       0       0       0
  1131 ;;      Temps:          0       0       0       0       0
  1132 ;;      Totals:         0       0       0       0       0
  1133 ;;Total ram usage:        0 bytes
  1134 ;; Hardware stack levels used:    1
  1135 ;; Hardware stack levels required when called:    3
  1136 ;; This function calls:
  1137 ;;		Nothing
  1138 ;; This function is called by:
  1139 ;;		_main
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           
  1144                           ;psect for function _uart_init
  1145  04C3                     _uart_init:	
  1146                           
  1147                           ;uart.c: 41: TRISC6 = 0;
  1148                           
  1149                           ;incstack = 0
  1150                           ; Regs used in _uart_init: [wreg]
  1151  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  1152  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  1153  04C5  1307               	bcf	7,6	;volatile
  1154                           
  1155                           ;uart.c: 42: TRISC7 = 1;
  1156  04C6  1787               	bsf	7,7	;volatile
  1157                           
  1158                           ;uart.c: 45: SPBRG = ((unsigned char)((20000000 / (9600) / 16) - 1));
  1159  04C7  3081               	movlw	129
  1160  04C8  0099               	movwf	25	;volatile
  1161                           
  1162                           ;uart.c: 46: TXSTA = ((1 << 5) | (1 << 2));
  1163  04C9  3024               	movlw	36
  1164  04CA  0098               	movwf	24	;volatile
  1165                           
  1166                           ;uart.c: 47: RCSTA = ((1 << 7) | (1 << 4));
  1167  04CB  3090               	movlw	144
  1168  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1169  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1170  04CE  0098               	movwf	24	;volatile
  1171  04CF  0008               	return
  1172  04D0                     __end_of_uart_init:	
  1173                           
  1174                           	psect	text2
  1175  0306                     __ptext2:	
  1176 ;; *************** function _spi_slave_start *****************
  1177 ;; Defined at:
  1178 ;;		line 38 in file "spi_slave.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  spi_isr         1    wreg     enum E1101
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  spi_isr         1    0[BANK1 ] enum E1101
  1183 ;; Return value:  Size  Location     Type
  1184 ;;		None               void
  1185 ;; Registers used:
  1186 ;;		wreg, status,2, status,0
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1192 ;;      Params:         0       0       0       0       0
  1193 ;;      Locals:         0       0       1       0       0
  1194 ;;      Temps:          0       0       0       0       0
  1195 ;;      Totals:         0       0       1       0       0
  1196 ;;Total ram usage:        1 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; Hardware stack levels required when called:    3
  1199 ;; This function calls:
  1200 ;;		Nothing
  1201 ;; This function is called by:
  1202 ;;		_main
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           
  1207                           ;psect for function _spi_slave_start
  1208  0306                     _spi_slave_start:	
  1209                           
  1210                           ;incstack = 0
  1211                           ; Regs used in _spi_slave_start: [wreg+status,2+status,0]
  1212                           ;spi_slave_start@spi_isr stored from wreg
  1213  0306  1683               	bsf	3,5	;RP0=1, select bank1
  1214  0307  1303               	bcf	3,6	;RP1=0, select bank1
  1215  0308  00A0               	movwf	spi_slave_start@spi_isr^(0+128)
  1216                           
  1217                           ;spi_slave.c: 41: TRISC3 = 1;
  1218  0309  1587               	bsf	7,3	;volatile
  1219                           
  1220                           ;spi_slave.c: 42: TRISC4 = 1;
  1221  030A  1607               	bsf	7,4	;volatile
  1222                           
  1223                           ;spi_slave.c: 43: TRISC5 = 0;
  1224  030B  1287               	bcf	7,5	;volatile
  1225                           
  1226                           ;spi_slave.c: 44: TRISA5 = 1;
  1227  030C  1685               	bsf	5,5	;volatile
  1228                           
  1229                           ;spi_slave.c: 45: ADCON0bits.ADON = 0;
  1230  030D  1283               	bcf	3,5	;RP0=0, select bank0
  1231  030E  1303               	bcf	3,6	;RP1=0, select bank0
  1232  030F  101F               	bcf	31,0	;volatile
  1233                           
  1234                           ;spi_slave.c: 46: ADCON1bits.PCFG3 = 0;
  1235  0310  1683               	bsf	3,5	;RP0=1, select bank1
  1236  0311  1303               	bcf	3,6	;RP1=0, select bank1
  1237  0312  119F               	bcf	31,3	;volatile
  1238                           
  1239                           ;spi_slave.c: 47: ADCON1bits.PCFG2 = 1;
  1240  0313  151F               	bsf	31,2	;volatile
  1241                           
  1242                           ;spi_slave.c: 48: ADCON1bits.PCFG1 = 1;
  1243  0314  149F               	bsf	31,1	;volatile
  1244                           
  1245                           ;spi_slave.c: 51: SSPCONbits.SSPEN = 0;
  1246  0315  1283               	bcf	3,5	;RP0=0, select bank0
  1247  0316  1303               	bcf	3,6	;RP1=0, select bank0
  1248  0317  1294               	bcf	20,5	;volatile
  1249                           
  1250                           ;spi_slave.c: 54: SSPSTATbits.SMP = 0;
  1251  0318  1683               	bsf	3,5	;RP0=1, select bank1
  1252  0319  1303               	bcf	3,6	;RP1=0, select bank1
  1253  031A  1394               	bcf	20,7	;volatile
  1254                           
  1255                           ;spi_slave.c: 55: SSPCONbits.CKP = 0;
  1256  031B  1283               	bcf	3,5	;RP0=0, select bank0
  1257  031C  1303               	bcf	3,6	;RP1=0, select bank0
  1258  031D  1214               	bcf	20,4	;volatile
  1259                           
  1260                           ;spi_slave.c: 56: SSPSTATbits.CKE = 0;
  1261  031E  1683               	bsf	3,5	;RP0=1, select bank1
  1262  031F  1303               	bcf	3,6	;RP1=0, select bank1
  1263  0320  1314               	bcf	20,6	;volatile
  1264                           
  1265                           ;spi_slave.c: 59: SSPCONbits.SSPM3 = 0;
  1266  0321  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0322  1303               	bcf	3,6	;RP1=0, select bank0
  1268  0323  1194               	bcf	20,3	;volatile
  1269                           
  1270                           ;spi_slave.c: 60: SSPCONbits.SSPM2 = 1;
  1271  0324  1514               	bsf	20,2	;volatile
  1272                           
  1273                           ;spi_slave.c: 61: SSPCONbits.SSPM1 = 0;
  1274  0325  1094               	bcf	20,1	;volatile
  1275                           
  1276                           ;spi_slave.c: 62: SSPCONbits.SSPM0 = 0;
  1277  0326  1014               	bcf	20,0	;volatile
  1278                           
  1279                           ;spi_slave.c: 65: if(spi_isr == SPI_ISR_ENABLE)
  1280  0327  1683               	bsf	3,5	;RP0=1, select bank1
  1281  0328  1303               	bcf	3,6	;RP1=0, select bank1
  1282  0329  0820               	movf	spi_slave_start@spi_isr^(0+128),w
  1283  032A  1D03               	btfss	3,2
  1284  032B  2B34               	goto	l121
  1285                           
  1286                           ;spi_slave.c: 66: {
  1287                           ;spi_slave.c: 67: PIR1bits.SSPIF = 0;
  1288  032C  1283               	bcf	3,5	;RP0=0, select bank0
  1289  032D  1303               	bcf	3,6	;RP1=0, select bank0
  1290  032E  118C               	bcf	12,3	;volatile
  1291                           
  1292                           ;spi_slave.c: 68: PIE1bits.SSPIE = 1;
  1293  032F  1683               	bsf	3,5	;RP0=1, select bank1
  1294  0330  1303               	bcf	3,6	;RP1=0, select bank1
  1295  0331  158C               	bsf	12,3	;volatile
  1296                           
  1297                           ;spi_slave.c: 69: INTCONbits.PEIE = 1;
  1298  0332  170B               	bsf	11,6	;volatile
  1299                           
  1300                           ;spi_slave.c: 70: INTCONbits.GIE = 1;
  1301  0333  178B               	bsf	11,7	;volatile
  1302  0334                     l121:	
  1303                           
  1304                           ;spi_slave.c: 71: }
  1305                           ;spi_slave.c: 74: SSPCONbits.SSPEN = 1;
  1306  0334  1283               	bcf	3,5	;RP0=0, select bank0
  1307  0335  1303               	bcf	3,6	;RP1=0, select bank0
  1308  0336  1694               	bsf	20,5	;volatile
  1309  0337  0008               	return
  1310  0338                     __end_of_spi_slave_start:	
  1311                           
  1312                           	psect	text3
  1313  010D                     __ptext3:	
  1314 ;; *************** function _sent_data_set *****************
  1315 ;; Defined at:
  1316 ;;		line 100 in file "protocol.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  p_data          1    wreg     PTR void 
  1319 ;;		 -> main@send_data(5), 
  1320 ;;  data_len        1   18[BANK1 ] unsigned char 
  1321 ;;  byte_of_type    1   19[BANK1 ] unsigned char 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  p_data          1   25[BANK1 ] PTR void 
  1324 ;;		 -> main@send_data(5), 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      unsigned char 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1334 ;;      Params:         0       0       2       0       0
  1335 ;;      Locals:         0       0       1       0       0
  1336 ;;      Temps:          0       0       5       0       0
  1337 ;;      Totals:         0       0       8       0       0
  1338 ;;Total ram usage:        8 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    5
  1341 ;; This function calls:
  1342 ;;		___wmul
  1343 ;;		_double_data_set
  1344 ;;		_uint16_data_set
  1345 ;;		_uint8_data_set
  1346 ;; This function is called by:
  1347 ;;		_main
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           
  1352                           ;psect for function _sent_data_set
  1353  010D                     _sent_data_set:	
  1354                           
  1355                           ;incstack = 0
  1356                           ; Regs used in _sent_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1357                           ;sent_data_set@p_data stored from wreg
  1358  010D  1683               	bsf	3,5	;RP0=1, select bank1
  1359  010E  1303               	bcf	3,6	;RP1=0, select bank1
  1360  010F  00B9               	movwf	sent_data_set@p_data^(0+128)
  1361                           
  1362                           ;protocol.c: 103: if((30 - tx_packet.payload_len) - (data_len * (byte_of_type + 1)) < 0)
  1363  0110  0833               	movf	sent_data_set@byte_of_type^(0+128),w
  1364  0111  3E01               	addlw	1
  1365  0112  00A0               	movwf	___wmul@multiplier^(0+128)
  1366  0113  3000               	movlw	0
  1367  0114  1803               	skipnc
  1368  0115  3001               	movlw	1
  1369  0116  00A1               	movwf	(___wmul@multiplier^(0+128)+1)
  1370  0117  0832               	movf	sent_data_set@data_len^(0+128),w
  1371  0118  00B4               	movwf	??_sent_data_set^(0+128)
  1372  0119  01B5               	clrf	(??_sent_data_set^(0+128)+1)
  1373  011A  0834               	movf	??_sent_data_set^(0+128),w
  1374  011B  00A2               	movwf	___wmul@multiplicand^(0+128)
  1375  011C  0835               	movf	(??_sent_data_set+1)^(0+128),w
  1376  011D  00A3               	movwf	(___wmul@multiplicand+1)^(0+128)
  1377  011E  120A  118A  243B  120A  118A  	fcall	___wmul
  1378  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1379  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1380  0125  0843               	movf	_tx_packet+1,w
  1381  0126  1683               	bsf	3,5	;RP0=1, select bank1
  1382  0127  1303               	bcf	3,6	;RP1=0, select bank1
  1383  0128  0720               	addwf	?___wmul^(0+128),w
  1384  0129  00B6               	movwf	(??_sent_data_set+2)^(0+128)
  1385  012A  0821               	movf	(?___wmul+1)^(0+128),w
  1386  012B  1803               	skipnc
  1387  012C  0A21               	incf	(?___wmul+1)^(0+128),w
  1388  012D  00B7               	movwf	((??_sent_data_set+2)^(0+128)+1)
  1389  012E  09B6               	comf	(??_sent_data_set+2)^(0+128),f
  1390  012F  09B7               	comf	((??_sent_data_set+2)^(0+128)+1),f
  1391  0130  0AB6               	incf	(??_sent_data_set+2)^(0+128),f
  1392  0131  1903               	skipnz
  1393  0132  0AB7               	incf	((??_sent_data_set+2)^(0+128)+1),f
  1394  0133  301E               	movlw	30
  1395  0134  0736               	addwf	(??_sent_data_set+2)^(0+128),w
  1396  0135  0837               	movf	(??_sent_data_set+3)^(0+128),w
  1397  0136  1803               	skipnc
  1398  0137  0A37               	incf	(??_sent_data_set+3)^(0+128),w
  1399  0138  3E00               	addlw	0
  1400  0139  00B8               	movwf	(??_sent_data_set+4)^(0+128)
  1401  013A  1BB8               	btfsc	(??_sent_data_set+4)^(0+128),7
  1402  013B  0008               	return
  1403  013C  295C               	goto	l1462
  1404  013D                     l1454:	
  1405                           ;protocol.c: 110: {
  1406                           ;protocol.c: 111: case 1:
  1407                           
  1408                           ;protocol.c: 106: }
  1409                           ;protocol.c: 109: switch(byte_of_type)
  1410                           
  1411                           ;protocol.c: 104: {
  1412                           ;protocol.c: 105: return 0xff;
  1413                           ;	Return value of _sent_data_set is never used
  1414                           
  1415                           
  1416                           ;protocol.c: 112: uint8_data_set((uint8_t *)p_data, data_len);
  1417  013D  0832               	movf	sent_data_set@data_len^(0+128),w
  1418  013E  00B4               	movwf	??_sent_data_set^(0+128)
  1419  013F  0834               	movf	??_sent_data_set^(0+128),w
  1420  0140  00A0               	movwf	uint8_data_set@data_len^(0+128)
  1421  0141  0839               	movf	sent_data_set@p_data^(0+128),w
  1422  0142  120A  118A  22D2   	fcall	_uint8_data_set
  1423                           
  1424                           ;protocol.c: 113: break;
  1425  0145  0008               	return
  1426  0146                     l1456:	
  1427                           ;protocol.c: 114: case 2:
  1428                           
  1429                           
  1430                           ;protocol.c: 115: uint16_data_set((uint16_t *)p_data, data_len);
  1431  0146  1683               	bsf	3,5	;RP0=1, select bank1
  1432  0147  1303               	bcf	3,6	;RP1=0, select bank1
  1433  0148  0832               	movf	sent_data_set@data_len^(0+128),w
  1434  0149  00B4               	movwf	??_sent_data_set^(0+128)
  1435  014A  0834               	movf	??_sent_data_set^(0+128),w
  1436  014B  00A5               	movwf	uint16_data_set@data_len^(0+128)
  1437  014C  0839               	movf	sent_data_set@p_data^(0+128),w
  1438  014D  120A  118A  21A9   	fcall	_uint16_data_set
  1439                           
  1440                           ;protocol.c: 116: break;
  1441  0150  0008               	return
  1442  0151                     l1458:	
  1443                           ;protocol.c: 117: case 4:
  1444                           
  1445                           
  1446                           ;protocol.c: 118: double_data_set((double *)p_data, data_len);
  1447  0151  1683               	bsf	3,5	;RP0=1, select bank1
  1448  0152  1303               	bcf	3,6	;RP1=0, select bank1
  1449  0153  0832               	movf	sent_data_set@data_len^(0+128),w
  1450  0154  00B4               	movwf	??_sent_data_set^(0+128)
  1451  0155  0834               	movf	??_sent_data_set^(0+128),w
  1452  0156  00A9               	movwf	double_data_set@data_len^(0+128)
  1453  0157  0839               	movf	sent_data_set@p_data^(0+128),w
  1454  0158  120A  118A  21E6   	fcall	_double_data_set
  1455                           
  1456                           ;protocol.c: 122: }
  1457                           
  1458                           ;protocol.c: 121: return 0xff;
  1459                           ;	Return value of _sent_data_set is never used
  1460                           
  1461                           ;protocol.c: 120: default:
  1462                           
  1463                           ;protocol.c: 119: break;
  1464  015B  0008               	return
  1465  015C                     l1462:	
  1466  015C  1683               	bsf	3,5	;RP0=1, select bank1
  1467  015D  1303               	bcf	3,6	;RP1=0, select bank1
  1468  015E  0833               	movf	sent_data_set@byte_of_type^(0+128),w
  1469                           
  1470                           ; Switch size 1, requested type "space"
  1471                           ; Number of cases is 3, Range of values is 1 to 4
  1472                           ; switch strategies available:
  1473                           ; Name         Instructions Cycles
  1474                           ; simple_byte           10     6 (average)
  1475                           ; direct_byte           23    11 (fixed)
  1476                           ; jumptable            263     9 (fixed)
  1477                           ;	Chosen strategy is simple_byte
  1478  015F  3A01               	xorlw	1	; case 1
  1479  0160  1903               	skipnz
  1480  0161  293D               	goto	l1454
  1481  0162  3A03               	xorlw	3	; case 2
  1482  0163  1903               	skipnz
  1483  0164  2946               	goto	l1456
  1484  0165  3A06               	xorlw	6	; case 4
  1485  0166  1903               	skipnz
  1486  0167  2951               	goto	l1458
  1487  0168  2969               	goto	l186
  1488  0169                     l186:	
  1489                           ;protocol.c: 125: return (uint8_t)(30 - tx_packet.payload_len);
  1490                           ;	Return value of _sent_data_set is never used
  1491                           
  1492  0169  0008               	return
  1493  016A                     __end_of_sent_data_set:	
  1494                           
  1495                           	psect	text4
  1496  02D2                     __ptext4:	
  1497 ;; *************** function _uint8_data_set *****************
  1498 ;; Defined at:
  1499 ;;		line 370 in file "protocol.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  p_data          1    wreg     PTR unsigned char 
  1502 ;;		 -> main@send_data(5), 
  1503 ;;  data_len        1    0[BANK1 ] unsigned char 
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  p_data          1    2[BANK1 ] PTR unsigned char 
  1506 ;;		 -> main@send_data(5), 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;		None               void
  1509 ;; Registers used:
  1510 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1516 ;;      Params:         0       0       1       0       0
  1517 ;;      Locals:         0       0       1       0       0
  1518 ;;      Temps:          0       0       1       0       0
  1519 ;;      Totals:         0       0       3       0       0
  1520 ;;Total ram usage:        3 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; Hardware stack levels required when called:    3
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_sent_data_set
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           
  1531                           ;psect for function _uint8_data_set
  1532  02D2                     _uint8_data_set:	
  1533                           
  1534                           ;incstack = 0
  1535                           ; Regs used in _uint8_data_set: [wreg-fsr0h+status,2+status,0]
  1536                           ;uint8_data_set@p_data stored from wreg
  1537  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  1538  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  1539  02D4  00A2               	movwf	uint8_data_set@p_data^(0+128)
  1540  02D5                     l233:	
  1541                           ;protocol.c: 372: while(data_len)
  1542                           
  1543  02D5  0820               	movf	uint8_data_set@data_len^(0+128),w
  1544  02D6  1903               	btfsc	3,2
  1545  02D7  0008               	return
  1546                           
  1547                           ;protocol.c: 373: {
  1548                           ;protocol.c: 374: tx_packet.payload[tx_packet.payload_len++] = 1;
  1549  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1550  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1551  02DA  0843               	movf	_tx_packet+1,w
  1552  02DB  3E44               	addlw	(low ((_tx_packet| 0+2)))& (0+255)
  1553  02DC  0084               	movwf	4
  1554  02DD  1383               	bcf	3,7	;select IRP bank0
  1555  02DE  0180               	clrf	0
  1556  02DF  0A80               	incf	0,f
  1557  02E0  3001               	movlw	1
  1558  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  1559  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  1560  02E3  00A1               	movwf	??_uint8_data_set^(0+128)
  1561  02E4  0821               	movf	??_uint8_data_set^(0+128),w
  1562  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  1563  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  1564  02E7  07C3               	addwf	_tx_packet+1,f
  1565                           
  1566                           ;protocol.c: 375: tx_packet.payload[tx_packet.payload_len++] = *p_data++;
  1567  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  1568  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  1569  02EA  0822               	movf	uint8_data_set@p_data^(0+128),w
  1570  02EB  0084               	movwf	4
  1571  02EC  0800               	movf	0,w
  1572  02ED  00A1               	movwf	??_uint8_data_set^(0+128)
  1573  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  1574  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  1575  02F0  0843               	movf	_tx_packet+1,w
  1576  02F1  3E44               	addlw	(low ((_tx_packet| 0+2)))& (0+255)
  1577  02F2  0084               	movwf	4
  1578  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  1579  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  1580  02F5  0821               	movf	??_uint8_data_set^(0+128),w
  1581  02F6  0080               	movwf	0
  1582  02F7  3001               	movlw	1
  1583  02F8  00A1               	movwf	??_uint8_data_set^(0+128)
  1584  02F9  0821               	movf	??_uint8_data_set^(0+128),w
  1585  02FA  07A2               	addwf	uint8_data_set@p_data^(0+128),f
  1586  02FB  3001               	movlw	1
  1587  02FC  00A1               	movwf	??_uint8_data_set^(0+128)
  1588  02FD  0821               	movf	??_uint8_data_set^(0+128),w
  1589  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  1590  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  1591  0300  07C3               	addwf	_tx_packet+1,f
  1592                           
  1593                           ;protocol.c: 376: data_len--;
  1594  0301  3001               	movlw	1
  1595  0302  1683               	bsf	3,5	;RP0=1, select bank1
  1596  0303  1303               	bcf	3,6	;RP1=0, select bank1
  1597  0304  02A0               	subwf	uint8_data_set@data_len^(0+128),f
  1598  0305  2AD5               	goto	l233
  1599  0306                     __end_of_uint8_data_set:	
  1600                           
  1601                           	psect	text5
  1602  01A9                     __ptext5:	
  1603 ;; *************** function _uint16_data_set *****************
  1604 ;; Defined at:
  1605 ;;		line 392 in file "protocol.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;  p_data          1    wreg     PTR unsigned int 
  1608 ;;		 -> main@send_data(5), 
  1609 ;;  data_len        1    5[BANK1 ] unsigned char 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  p_data          1   10[BANK1 ] PTR unsigned int 
  1612 ;;		 -> main@send_data(5), 
  1613 ;;  buf             3    7[BANK1 ] unsigned char [3]
  1614 ;;  i               1   11[BANK1 ] unsigned char 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;		None               void
  1617 ;; Registers used:
  1618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1624 ;;      Params:         0       0       1       0       0
  1625 ;;      Locals:         0       0       5       0       0
  1626 ;;      Temps:          0       0       1       0       0
  1627 ;;      Totals:         0       0       7       0       0
  1628 ;;Total ram usage:        7 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; Hardware stack levels required when called:    4
  1631 ;; This function calls:
  1632 ;;		_uint16_to_byte_array
  1633 ;; This function is called by:
  1634 ;;		_sent_data_set
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           
  1639                           ;psect for function _uint16_data_set
  1640  01A9                     _uint16_data_set:	
  1641                           
  1642                           ;incstack = 0
  1643                           ; Regs used in _uint16_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1644                           ;uint16_data_set@p_data stored from wreg
  1645  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  1646  01AA  1303               	bcf	3,6	;RP1=0, select bank1
  1647  01AB  00AA               	movwf	uint16_data_set@p_data^(0+128)
  1648  01AC                     l239:	
  1649                           ;protocol.c: 394: uint8_t buf[3];
  1650                           ;protocol.c: 395: uint8_t i;
  1651                           ;protocol.c: 397: while(data_len)
  1652                           
  1653  01AC  0825               	movf	uint16_data_set@data_len^(0+128),w
  1654  01AD  1903               	btfsc	3,2
  1655  01AE  0008               	return
  1656                           
  1657                           ;protocol.c: 398: {
  1658                           ;protocol.c: 399: uint16_to_byte_array(p_data++, buf);
  1659  01AF  30A7               	movlw	(low (uint16_data_set@buf| 0))& (0+255)
  1660  01B0  00A6               	movwf	??_uint16_data_set^(0+128)
  1661  01B1  0826               	movf	??_uint16_data_set^(0+128),w
  1662  01B2  00A0               	movwf	uint16_to_byte_array@p_data_array^(0+128)
  1663  01B3  082A               	movf	uint16_data_set@p_data^(0+128),w
  1664  01B4  120A  118A  23EE  120A  118A  	fcall	_uint16_to_byte_array
  1665  01B9  3002               	movlw	2
  1666  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  1667  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  1668  01BC  00A6               	movwf	??_uint16_data_set^(0+128)
  1669  01BD  0826               	movf	??_uint16_data_set^(0+128),w
  1670  01BE  07AA               	addwf	uint16_data_set@p_data^(0+128),f
  1671                           
  1672                           ;protocol.c: 401: for(i = 0; i < 3; i++)
  1673  01BF  01AB               	clrf	uint16_data_set@i^(0+128)
  1674  01C0  3003               	movlw	3
  1675  01C1  022B               	subwf	uint16_data_set@i^(0+128),w
  1676  01C2  1803               	btfsc	3,0
  1677  01C3  29E3               	goto	l1358
  1678  01C4                     l1350:	
  1679                           
  1680                           ;protocol.c: 402: {
  1681                           ;protocol.c: 403: tx_packet.payload[tx_packet.payload_len++] = buf[i];
  1682  01C4  082B               	movf	uint16_data_set@i^(0+128),w
  1683  01C5  3EA7               	addlw	(low (uint16_data_set@buf| 0))& (0+255)
  1684  01C6  0084               	movwf	4
  1685  01C7  1383               	bcf	3,7	;select IRP bank1
  1686  01C8  0800               	movf	0,w
  1687  01C9  00A6               	movwf	??_uint16_data_set^(0+128)
  1688  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1689  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1690  01CC  0843               	movf	_tx_packet+1,w
  1691  01CD  3E44               	addlw	(low ((_tx_packet| 0+2)))& (0+255)
  1692  01CE  0084               	movwf	4
  1693  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  1694  01D0  1303               	bcf	3,6	;RP1=0, select bank1
  1695  01D1  0826               	movf	??_uint16_data_set^(0+128),w
  1696  01D2  0080               	movwf	0
  1697  01D3  3001               	movlw	1
  1698  01D4  00A6               	movwf	??_uint16_data_set^(0+128)
  1699  01D5  0826               	movf	??_uint16_data_set^(0+128),w
  1700  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1701  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1702  01D8  07C3               	addwf	_tx_packet+1,f
  1703  01D9  3001               	movlw	1
  1704  01DA  1683               	bsf	3,5	;RP0=1, select bank1
  1705  01DB  1303               	bcf	3,6	;RP1=0, select bank1
  1706  01DC  00A6               	movwf	??_uint16_data_set^(0+128)
  1707  01DD  0826               	movf	??_uint16_data_set^(0+128),w
  1708  01DE  07AB               	addwf	uint16_data_set@i^(0+128),f
  1709  01DF  3003               	movlw	3
  1710  01E0  022B               	subwf	uint16_data_set@i^(0+128),w
  1711  01E1  1C03               	skipc
  1712  01E2  29C4               	goto	l1350
  1713  01E3                     l1358:	
  1714                           
  1715                           ;protocol.c: 404: }
  1716                           ;protocol.c: 405: data_len--;
  1717  01E3  3001               	movlw	1
  1718  01E4  02A5               	subwf	uint16_data_set@data_len^(0+128),f
  1719  01E5  29AC               	goto	l239
  1720  01E6                     __end_of_uint16_data_set:	
  1721                           
  1722                           	psect	text6
  1723  03EE                     __ptext6:	
  1724 ;; *************** function _uint16_to_byte_array *****************
  1725 ;; Defined at:
  1726 ;;		line 450 in file "protocol.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  p_data          1    wreg     PTR unsigned int 
  1729 ;;		 -> main@send_data(5), 
  1730 ;;  p_data_array    1    0[BANK1 ] PTR unsigned char 
  1731 ;;		 -> uint16_data_set@buf(3), 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  p_data          1    4[BANK1 ] PTR unsigned int 
  1734 ;;		 -> main@send_data(5), 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;		None               void
  1737 ;; Registers used:
  1738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1744 ;;      Params:         0       0       1       0       0
  1745 ;;      Locals:         0       0       1       0       0
  1746 ;;      Temps:          0       0       3       0       0
  1747 ;;      Totals:         0       0       5       0       0
  1748 ;;Total ram usage:        5 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    3
  1751 ;; This function calls:
  1752 ;;		Nothing
  1753 ;; This function is called by:
  1754 ;;		_uint16_data_set
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           
  1759                           ;psect for function _uint16_to_byte_array
  1760  03EE                     _uint16_to_byte_array:	
  1761                           
  1762                           ;incstack = 0
  1763                           ; Regs used in _uint16_to_byte_array: [wreg-fsr0h+status,2+status,0+pclath]
  1764                           ;uint16_to_byte_array@p_data stored from wreg
  1765  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  1766  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  1767  03F0  00A4               	movwf	uint16_to_byte_array@p_data^(0+128)
  1768                           
  1769                           ;protocol.c: 452: const uint16_t bit_mask = 0b0000000011111111;
  1770                           ;protocol.c: 455: p_data_array[0] = 2;
  1771  03F1  3002               	movlw	2
  1772  03F2  00A1               	movwf	??_uint16_to_byte_array^(0+128)
  1773  03F3  0820               	movf	uint16_to_byte_array@p_data_array^(0+128),w
  1774  03F4  0084               	movwf	4
  1775  03F5  0821               	movf	??_uint16_to_byte_array^(0+128),w
  1776  03F6  1383               	bcf	3,7	;select IRP bank0
  1777  03F7  0080               	movwf	0
  1778                           
  1779                           ;protocol.c: 456: p_data_array[1] = (uint8_t)(*p_data >> 8);
  1780  03F8  0824               	movf	uint16_to_byte_array@p_data^(0+128),w
  1781  03F9  0084               	movwf	4
  1782  03FA  0800               	movf	0,w
  1783  03FB  00A1               	movwf	??_uint16_to_byte_array^(0+128)
  1784  03FC  0A84               	incf	4,f
  1785  03FD  0800               	movf	0,w
  1786  03FE  00A2               	movwf	(??_uint16_to_byte_array^(0+128)+1)
  1787  03FF  0822               	movf	(??_uint16_to_byte_array+1)^(0+128),w
  1788  0400  00A3               	movwf	(??_uint16_to_byte_array+2)^(0+128)
  1789  0401  0A20               	incf	uint16_to_byte_array@p_data_array^(0+128),w
  1790  0402  0084               	movwf	4
  1791  0403  0823               	movf	(??_uint16_to_byte_array+2)^(0+128),w
  1792  0404  0080               	movwf	0
  1793                           
  1794                           ;protocol.c: 457: p_data_array[2] = (uint8_t)(*p_data & bit_mask);
  1795  0405  3001               	movlw	low (uint16_to_byte_array@bit_mask-__stringbase)
  1796  0406  0084               	movwf	4
  1797  0407  120A  118A  245E   	fcall	stringdir
  1798  040A  00A1               	movwf	??_uint16_to_byte_array^(0+128)
  1799  040B  0824               	movf	uint16_to_byte_array@p_data^(0+128),w
  1800  040C  0084               	movwf	4
  1801  040D  0800               	movf	0,w
  1802  040E  0521               	andwf	??_uint16_to_byte_array^(0+128),w
  1803  040F  00A2               	movwf	(??_uint16_to_byte_array+1)^(0+128)
  1804  0410  0820               	movf	uint16_to_byte_array@p_data_array^(0+128),w
  1805  0411  3E02               	addlw	2
  1806  0412  0084               	movwf	4
  1807  0413  0822               	movf	(??_uint16_to_byte_array+1)^(0+128),w
  1808  0414  0080               	movwf	0
  1809  0415  0008               	return
  1810  0416                     __end_of_uint16_to_byte_array:	
  1811                           
  1812                           	psect	text7
  1813  01E6                     __ptext7:	
  1814 ;; *************** function _double_data_set *****************
  1815 ;; Defined at:
  1816 ;;		line 421 in file "protocol.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;  p_data          1    wreg     PTR 
  1819 ;;		 -> main@send_data(5), 
  1820 ;;  data_len        1    9[BANK1 ] unsigned char 
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;  p_data          1   16[BANK1 ] PTR 
  1823 ;;		 -> main@send_data(5), 
  1824 ;;  buf             5   11[BANK1 ] unsigned char [5]
  1825 ;;  i               1   17[BANK1 ] unsigned char 
  1826 ;; Return value:  Size  Location     Type
  1827 ;;		None               void
  1828 ;; Registers used:
  1829 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1835 ;;      Params:         0       0       1       0       0
  1836 ;;      Locals:         0       0       7       0       0
  1837 ;;      Temps:          0       0       1       0       0
  1838 ;;      Totals:         0       0       9       0       0
  1839 ;;Total ram usage:        9 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; Hardware stack levels required when called:    4
  1842 ;; This function calls:
  1843 ;;		_double_to_byte_array
  1844 ;; This function is called by:
  1845 ;;		_sent_data_set
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           
  1850                           ;psect for function _double_data_set
  1851  01E6                     _double_data_set:	
  1852                           
  1853                           ;incstack = 0
  1854                           ; Regs used in _double_data_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1855                           ;double_data_set@p_data stored from wreg
  1856  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  1857  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  1858  01E8  00B0               	movwf	double_data_set@p_data^(0+128)
  1859  01E9                     l247:	
  1860                           ;protocol.c: 423: uint8_t buf[5];
  1861                           ;protocol.c: 424: uint8_t i;
  1862                           ;protocol.c: 426: while(data_len)
  1863                           
  1864  01E9  0829               	movf	double_data_set@data_len^(0+128),w
  1865  01EA  1903               	btfsc	3,2
  1866  01EB  0008               	return
  1867                           
  1868                           ;protocol.c: 427: {
  1869                           ;protocol.c: 428: double_to_byte_array(p_data++, buf);
  1870  01EC  30AB               	movlw	(low (double_data_set@buf| 0))& (0+255)
  1871  01ED  00AA               	movwf	??_double_data_set^(0+128)
  1872  01EE  082A               	movf	??_double_data_set^(0+128),w
  1873  01EF  00A0               	movwf	double_to_byte_array@p_data_array^(0+128)
  1874  01F0  0830               	movf	double_data_set@p_data^(0+128),w
  1875  01F1  120A  118A  2398  120A  118A  	fcall	_double_to_byte_array
  1876  01F6  3003               	movlw	3
  1877  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  1878  01F8  1303               	bcf	3,6	;RP1=0, select bank1
  1879  01F9  00AA               	movwf	??_double_data_set^(0+128)
  1880  01FA  082A               	movf	??_double_data_set^(0+128),w
  1881  01FB  07B0               	addwf	double_data_set@p_data^(0+128),f
  1882                           
  1883                           ;protocol.c: 430: for(i = 0; i < 5; i++)
  1884  01FC  01B1               	clrf	double_data_set@i^(0+128)
  1885  01FD  3005               	movlw	5
  1886  01FE  0231               	subwf	double_data_set@i^(0+128),w
  1887  01FF  1803               	btfsc	3,0
  1888  0200  2A20               	goto	l1380
  1889  0201                     l1372:	
  1890                           
  1891                           ;protocol.c: 431: {
  1892                           ;protocol.c: 432: tx_packet.payload[tx_packet.payload_len++] = buf[i];
  1893  0201  0831               	movf	double_data_set@i^(0+128),w
  1894  0202  3EAB               	addlw	(low (double_data_set@buf| 0))& (0+255)
  1895  0203  0084               	movwf	4
  1896  0204  1383               	bcf	3,7	;select IRP bank1
  1897  0205  0800               	movf	0,w
  1898  0206  00AA               	movwf	??_double_data_set^(0+128)
  1899  0207  1283               	bcf	3,5	;RP0=0, select bank0
  1900  0208  1303               	bcf	3,6	;RP1=0, select bank0
  1901  0209  0843               	movf	_tx_packet+1,w
  1902  020A  3E44               	addlw	(low ((_tx_packet| 0+2)))& (0+255)
  1903  020B  0084               	movwf	4
  1904  020C  1683               	bsf	3,5	;RP0=1, select bank1
  1905  020D  1303               	bcf	3,6	;RP1=0, select bank1
  1906  020E  082A               	movf	??_double_data_set^(0+128),w
  1907  020F  0080               	movwf	0
  1908  0210  3001               	movlw	1
  1909  0211  00AA               	movwf	??_double_data_set^(0+128)
  1910  0212  082A               	movf	??_double_data_set^(0+128),w
  1911  0213  1283               	bcf	3,5	;RP0=0, select bank0
  1912  0214  1303               	bcf	3,6	;RP1=0, select bank0
  1913  0215  07C3               	addwf	_tx_packet+1,f
  1914  0216  3001               	movlw	1
  1915  0217  1683               	bsf	3,5	;RP0=1, select bank1
  1916  0218  1303               	bcf	3,6	;RP1=0, select bank1
  1917  0219  00AA               	movwf	??_double_data_set^(0+128)
  1918  021A  082A               	movf	??_double_data_set^(0+128),w
  1919  021B  07B1               	addwf	double_data_set@i^(0+128),f
  1920  021C  3005               	movlw	5
  1921  021D  0231               	subwf	double_data_set@i^(0+128),w
  1922  021E  1C03               	skipc
  1923  021F  2A01               	goto	l1372
  1924  0220                     l1380:	
  1925                           
  1926                           ;protocol.c: 433: }
  1927                           ;protocol.c: 434: data_len--;
  1928  0220  3001               	movlw	1
  1929  0221  02A9               	subwf	double_data_set@data_len^(0+128),f
  1930  0222  29E9               	goto	l247
  1931  0223                     __end_of_double_data_set:	
  1932                           
  1933                           	psect	text8
  1934  0398                     __ptext8:	
  1935 ;; *************** function _double_to_byte_array *****************
  1936 ;; Defined at:
  1937 ;;		line 472 in file "protocol.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  p_data          1    wreg     PTR 
  1940 ;;		 -> main@send_data(5), 
  1941 ;;  p_data_array    1    0[BANK1 ] PTR unsigned char 
  1942 ;;		 -> double_data_set@buf(5), 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  p_data          1    7[BANK1 ] PTR 
  1945 ;;		 -> main@send_data(5), 
  1946 ;;  converter       4    3[BANK1 ] struct .
  1947 ;;  i               1    8[BANK1 ] unsigned char 
  1948 ;; Return value:  Size  Location     Type
  1949 ;;		None               void
  1950 ;; Registers used:
  1951 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1957 ;;      Params:         0       0       1       0       0
  1958 ;;      Locals:         0       0       6       0       0
  1959 ;;      Temps:          0       0       2       0       0
  1960 ;;      Totals:         0       0       9       0       0
  1961 ;;Total ram usage:        9 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; Hardware stack levels required when called:    3
  1964 ;; This function calls:
  1965 ;;		Nothing
  1966 ;; This function is called by:
  1967 ;;		_double_data_set
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           
  1972                           ;psect for function _double_to_byte_array
  1973  0398                     _double_to_byte_array:	
  1974                           
  1975                           ;incstack = 0
  1976                           ; Regs used in _double_to_byte_array: [wreg-fsr0h+status,2+status,0]
  1977                           ;double_to_byte_array@p_data stored from wreg
  1978  0398  1683               	bsf	3,5	;RP0=1, select bank1
  1979  0399  1303               	bcf	3,6	;RP1=0, select bank1
  1980  039A  00A7               	movwf	double_to_byte_array@p_data^(0+128)
  1981                           
  1982                           ;protocol.c: 474: uint8_t i;
  1983                           ;protocol.c: 475: union
  1984                           ;protocol.c: 476: {
  1985                           ;protocol.c: 477: double data;
  1986                           ;protocol.c: 478: uint8_t array[4];
  1987                           ;protocol.c: 479: } converter;
  1988                           ;protocol.c: 482: converter.data = *p_data;
  1989  039B  0827               	movf	double_to_byte_array@p_data^(0+128),w
  1990  039C  0084               	movwf	4
  1991  039D  1383               	bcf	3,7	;select IRP bank0
  1992  039E  0800               	movf	0,w
  1993  039F  00A3               	movwf	double_to_byte_array@converter^(0+128)
  1994  03A0  0A84               	incf	4,f
  1995  03A1  0800               	movf	0,w
  1996  03A2  00A4               	movwf	(double_to_byte_array@converter+1)^(0+128)
  1997  03A3  0A84               	incf	4,f
  1998  03A4  0800               	movf	0,w
  1999  03A5  00A5               	movwf	(double_to_byte_array@converter+2)^(0+128)
  2000                           
  2001                           ;protocol.c: 485: p_data_array[0] = 4;
  2002  03A6  3004               	movlw	4
  2003  03A7  00A1               	movwf	??_double_to_byte_array^(0+128)
  2004  03A8  0820               	movf	double_to_byte_array@p_data_array^(0+128),w
  2005  03A9  0084               	movwf	4
  2006  03AA  0821               	movf	??_double_to_byte_array^(0+128),w
  2007  03AB  0080               	movwf	0
  2008                           
  2009                           ;protocol.c: 488: for(i = 0; i < 4; i++)
  2010  03AC  01A8               	clrf	double_to_byte_array@i^(0+128)
  2011  03AD                     L1:	
  2012  03AD  3004               	movlw	4
  2013  03AE  0228               	subwf	double_to_byte_array@i^(0+128),w
  2014  03AF  1803               	btfsc	3,0
  2015  03B0  0008               	return
  2016                           
  2017                           ;protocol.c: 489: {
  2018                           ;protocol.c: 490: p_data_array[i + 1] = converter.array[i];
  2019  03B1  0828               	movf	double_to_byte_array@i^(0+128),w
  2020  03B2  3EA3               	addlw	(low (double_to_byte_array@converter| 0))& (0+255)
  2021  03B3  0084               	movwf	4
  2022  03B4  0800               	movf	0,w
  2023  03B5  00A1               	movwf	??_double_to_byte_array^(0+128)
  2024  03B6  0828               	movf	double_to_byte_array@i^(0+128),w
  2025  03B7  3E01               	addlw	1
  2026  03B8  0720               	addwf	double_to_byte_array@p_data_array^(0+128),w
  2027  03B9  00A2               	movwf	(??_double_to_byte_array+1)^(0+128)
  2028  03BA  0822               	movf	(??_double_to_byte_array+1)^(0+128),w
  2029  03BB  0084               	movwf	4
  2030  03BC  0821               	movf	??_double_to_byte_array^(0+128),w
  2031  03BD  0080               	movwf	0
  2032  03BE  3001               	movlw	1
  2033  03BF  00A1               	movwf	??_double_to_byte_array^(0+128)
  2034  03C0  0821               	movf	??_double_to_byte_array^(0+128),w
  2035  03C1  07A8               	addwf	double_to_byte_array@i^(0+128),f
  2036  03C2  2BAD               	goto	L1
  2037  03C3                     __end_of_double_to_byte_array:	
  2038                           
  2039                           	psect	text9
  2040  043B                     __ptext9:	
  2041 ;; *************** function ___wmul *****************
  2042 ;; Defined at:
  2043 ;;		line 15 in file "/Applications/microchip/xc8/v1.35/sources/common/Umul16.c"
  2044 ;; Parameters:    Size  Location     Type
  2045 ;;  multiplier      2    0[BANK1 ] unsigned int 
  2046 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;  product         2    4[BANK1 ] unsigned int 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  2    0[BANK1 ] unsigned int 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2, status,0
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2058 ;;      Params:         0       0       4       0       0
  2059 ;;      Locals:         0       0       2       0       0
  2060 ;;      Temps:          0       0       0       0       0
  2061 ;;      Totals:         0       0       6       0       0
  2062 ;;Total ram usage:        6 bytes
  2063 ;; Hardware stack levels used:    1
  2064 ;; Hardware stack levels required when called:    3
  2065 ;; This function calls:
  2066 ;;		Nothing
  2067 ;; This function is called by:
  2068 ;;		_sent_data_set
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           
  2073                           ;psect for function ___wmul
  2074  043B                     ___wmul:	
  2075                           
  2076                           ;incstack = 0
  2077                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2078  043B  1683               	bsf	3,5	;RP0=1, select bank1
  2079  043C  1303               	bcf	3,6	;RP1=0, select bank1
  2080  043D  01A4               	clrf	___wmul@product^(0+128)
  2081  043E  01A5               	clrf	(___wmul@product+1)^(0+128)
  2082  043F                     l1398:	
  2083  043F  1C20               	btfss	___wmul@multiplier^(0+128),0
  2084  0440  2C47               	goto	l352
  2085  0441  0822               	movf	___wmul@multiplicand^(0+128),w
  2086  0442  07A4               	addwf	___wmul@product^(0+128),f
  2087  0443  1803               	skipnc
  2088  0444  0AA5               	incf	(___wmul@product+1)^(0+128),f
  2089  0445  0823               	movf	(___wmul@multiplicand+1)^(0+128),w
  2090  0446  07A5               	addwf	(___wmul@product+1)^(0+128),f
  2091  0447                     l352:	
  2092  0447  3001               	movlw	1
  2093  0448                     u765:	
  2094  0448  1003               	clrc
  2095  0449  0DA2               	rlf	___wmul@multiplicand^(0+128),f
  2096  044A  0DA3               	rlf	(___wmul@multiplicand+1)^(0+128),f
  2097  044B  3EFF               	addlw	-1
  2098  044C  1D03               	skipz
  2099  044D  2C48               	goto	u765
  2100  044E  3001               	movlw	1
  2101  044F                     u775:	
  2102  044F  1003               	clrc
  2103  0450  0CA1               	rrf	(___wmul@multiplier+1)^(0+128),f
  2104  0451  0CA0               	rrf	___wmul@multiplier^(0+128),f
  2105  0452  3EFF               	addlw	-1
  2106  0453  1D03               	skipz
  2107  0454  2C4F               	goto	u775
  2108  0455  0820               	movf	___wmul@multiplier^(0+128),w
  2109  0456  0421               	iorwf	(___wmul@multiplier+1)^(0+128),w
  2110  0457  1D03               	btfss	3,2
  2111  0458  2C3F               	goto	l1398
  2112  0459  0825               	movf	(___wmul@product+1)^(0+128),w
  2113  045A  00A1               	movwf	(?___wmul+1)^(0+128)
  2114  045B  0824               	movf	___wmul@product^(0+128),w
  2115  045C  00A0               	movwf	?___wmul^(0+128)
  2116  045D  0008               	return
  2117  045E                     __end_of___wmul:	
  2118                           
  2119                           	psect	text10
  2120  047D                     __ptext10:	
  2121 ;; *************** function _send_data_slave *****************
  2122 ;; Defined at:
  2123 ;;		line 141 in file "protocol.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  data_type       1    wreg     enum E1107
  2126 ;;  data_end_com    1    0[BANK1 ] enum E1112
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  data_type       1    2[BANK1 ] enum E1107
  2129 ;; Return value:  Size  Location     Type
  2130 ;;		None               void
  2131 ;; Registers used:
  2132 ;;		wreg
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2138 ;;      Params:         0       0       1       0       0
  2139 ;;      Locals:         0       0       1       0       0
  2140 ;;      Temps:          0       0       1       0       0
  2141 ;;      Totals:         0       0       3       0       0
  2142 ;;Total ram usage:        3 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:    3
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_main
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           
  2153                           ;psect for function _send_data_slave
  2154  047D                     _send_data_slave:	
  2155                           
  2156                           ;incstack = 0
  2157                           ; Regs used in _send_data_slave: [wreg]
  2158                           ;send_data_slave@data_type stored from wreg
  2159  047D  1683               	bsf	3,5	;RP0=1, select bank1
  2160  047E  1303               	bcf	3,6	;RP1=0, select bank1
  2161  047F  00A2               	movwf	send_data_slave@data_type^(0+128)
  2162                           
  2163                           ;protocol.c: 144: tx_packet.data_type = (uint8_t)data_type;
  2164  0480  0822               	movf	send_data_slave@data_type^(0+128),w
  2165  0481  00A1               	movwf	??_send_data_slave^(0+128)
  2166  0482  0821               	movf	??_send_data_slave^(0+128),w
  2167  0483  1283               	bcf	3,5	;RP0=0, select bank0
  2168  0484  1303               	bcf	3,6	;RP1=0, select bank0
  2169  0485  00C2               	movwf	_tx_packet
  2170                           
  2171                           ;protocol.c: 145: tx_packet.data_end_command = (uint8_t)data_end_command;
  2172  0486  1683               	bsf	3,5	;RP0=1, select bank1
  2173  0487  1303               	bcf	3,6	;RP1=0, select bank1
  2174  0488  0820               	movf	send_data_slave@data_end_command^(0+128),w
  2175  0489  00A1               	movwf	??_send_data_slave^(0+128)
  2176  048A  0821               	movf	??_send_data_slave^(0+128),w
  2177  048B  1283               	bcf	3,5	;RP0=0, select bank0
  2178  048C  1303               	bcf	3,6	;RP1=0, select bank0
  2179  048D  00E2               	movwf	_tx_packet+32
  2180                           
  2181                           ;protocol.c: 148: tx_packet_status = TRUE;
  2182  048E  01FC               	clrf	_tx_packet_status
  2183  048F  0AFC               	incf	_tx_packet_status,f
  2184  0490  0008               	return
  2185  0491                     __end_of_send_data_slave:	
  2186                           
  2187                           	psect	text11
  2188  0416                     __ptext11:	
  2189 ;; *************** function _put_string *****************
  2190 ;; Defined at:
  2191 ;;		line 77 in file "uart.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  str             1    wreg     PTR unsigned char 
  2194 ;;		 -> STR_1(23), 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  str             1    2[BANK1 ] PTR unsigned char 
  2197 ;;		 -> STR_1(23), 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;		None               void
  2200 ;; Registers used:
  2201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2207 ;;      Params:         0       0       0       0       0
  2208 ;;      Locals:         0       0       1       0       0
  2209 ;;      Temps:          0       0       1       0       0
  2210 ;;      Totals:         0       0       2       0       0
  2211 ;;Total ram usage:        2 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; Hardware stack levels required when called:    4
  2214 ;; This function calls:
  2215 ;;		_put_char
  2216 ;; This function is called by:
  2217 ;;		_main
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           
  2222                           ;psect for function _put_string
  2223  0416                     _put_string:	
  2224                           
  2225                           ;incstack = 0
  2226                           ; Regs used in _put_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2227                           ;put_string@str stored from wreg
  2228  0416  1683               	bsf	3,5	;RP0=1, select bank1
  2229  0417  1303               	bcf	3,6	;RP1=0, select bank1
  2230  0418  00A2               	movwf	put_string@str^(0+128)
  2231  0419                     l1420:	
  2232                           ;uart.c: 79: while(*str != '\0')
  2233                           
  2234  0419  0822               	movf	put_string@str^(0+128),w
  2235  041A  0084               	movwf	4
  2236  041B  120A  118A  245E  120A  118A  	fcall	stringdir
  2237  0420  3A00               	xorlw	0
  2238  0421  1903               	btfsc	3,2
  2239  0422  2C36               	goto	l1422
  2240                           
  2241                           ;uart.c: 80: {
  2242                           ;uart.c: 81: put_char(*str);
  2243  0423  0822               	movf	put_string@str^(0+128),w
  2244  0424  0084               	movwf	4
  2245  0425  120A  118A  245E  120A  118A  	fcall	stringdir
  2246  042A  120A  118A  24D0  120A  118A  	fcall	_put_char
  2247                           
  2248                           ;uart.c: 82: str++;
  2249  042F  3001               	movlw	1
  2250  0430  1683               	bsf	3,5	;RP0=1, select bank1
  2251  0431  1303               	bcf	3,6	;RP1=0, select bank1
  2252  0432  00A1               	movwf	??_put_string^(0+128)
  2253  0433  0821               	movf	??_put_string^(0+128),w
  2254  0434  07A2               	addwf	put_string@str^(0+128),f
  2255  0435  2C19               	goto	l1420
  2256  0436                     l1422:	
  2257                           
  2258                           ;uart.c: 83: }
  2259                           ;uart.c: 85: put_char('\0');
  2260  0436  3000               	movlw	0
  2261  0437  120A  118A  24D0   	fcall	_put_char
  2262  043A  0008               	return
  2263  043B                     __end_of_put_string:	
  2264                           
  2265                           	psect	text12
  2266  04D0                     __ptext12:	
  2267 ;; *************** function _put_char *****************
  2268 ;; Defined at:
  2269 ;;		line 61 in file "uart.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  byte_data       1    wreg     unsigned char 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  byte_data       1    0[BANK1 ] unsigned char 
  2274 ;; Return value:  Size  Location     Type
  2275 ;;		None               void
  2276 ;; Registers used:
  2277 ;;		wreg
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2283 ;;      Params:         0       0       0       0       0
  2284 ;;      Locals:         0       0       1       0       0
  2285 ;;      Temps:          0       0       0       0       0
  2286 ;;      Totals:         0       0       1       0       0
  2287 ;;Total ram usage:        1 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:    3
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_put_string
  2294 ;;		_main
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           
  2299                           ;psect for function _put_char
  2300  04D0                     _put_char:	
  2301                           
  2302                           ;incstack = 0
  2303                           ; Regs used in _put_char: [wreg]
  2304                           ;put_char@byte_data stored from wreg
  2305  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  2306  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  2307  04D2  00A0               	movwf	put_char@byte_data^(0+128)
  2308  04D3                     l24:	
  2309                           ;uart.c: 65: {
  2310                           ;uart.c: 66: ;
  2311                           
  2312                           ;uart.c: 64: while(TXIF == 0)
  2313                           
  2314  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  2315  04D4  1E0C               	btfss	12,4	;volatile
  2316  04D5  2CD3               	goto	l24
  2317                           
  2318                           ;uart.c: 67: }
  2319                           ;uart.c: 70: TXREG = byte_data;
  2320  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  2321  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  2322  04D8  0820               	movf	put_char@byte_data^(0+128),w
  2323  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  2324  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  2325  04DB  0099               	movwf	25	;volatile
  2326  04DC  0008               	return
  2327  04DD                     __end_of_put_char:	
  2328                           
  2329                           	psect	text13
  2330  04B4                     __ptext13:	
  2331 ;; *************** function _pic_port_init *****************
  2332 ;; Defined at:
  2333 ;;		line 92 in file "main.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;		None
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;		None
  2338 ;; Return value:  Size  Location     Type
  2339 ;;		None               void
  2340 ;; Registers used:
  2341 ;;		status,2
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2347 ;;      Params:         0       0       0       0       0
  2348 ;;      Locals:         0       0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0
  2350 ;;      Totals:         0       0       0       0       0
  2351 ;;Total ram usage:        0 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; Hardware stack levels required when called:    3
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_main
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           
  2362                           ;psect for function _pic_port_init
  2363  04B4                     _pic_port_init:	
  2364                           
  2365                           ;main.c: 95: TRISA = 0x00;
  2366                           
  2367                           ;incstack = 0
  2368                           ; Regs used in _pic_port_init: [status,2]
  2369  04B4  1683               	bsf	3,5	;RP0=1, select bank1
  2370  04B5  1303               	bcf	3,6	;RP1=0, select bank1
  2371  04B6  0185               	clrf	5	;volatile
  2372                           
  2373                           ;main.c: 96: TRISB = 0x00;
  2374  04B7  0186               	clrf	6	;volatile
  2375                           
  2376                           ;main.c: 97: TRISC = 0x00;
  2377  04B8  0187               	clrf	7	;volatile
  2378                           
  2379                           ;main.c: 98: TRISD = 0x00;
  2380  04B9  0188               	clrf	8	;volatile
  2381                           
  2382                           ;main.c: 99: TRISE = 0x00;
  2383  04BA  0189               	clrf	9	;volatile
  2384                           
  2385                           ;main.c: 102: PORTA = 0x00;
  2386  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  2387  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  2388  04BD  0185               	clrf	5	;volatile
  2389                           
  2390                           ;main.c: 103: PORTB = 0x00;
  2391  04BE  0186               	clrf	6	;volatile
  2392                           
  2393                           ;main.c: 104: PORTC = 0x00;
  2394  04BF  0187               	clrf	7	;volatile
  2395                           
  2396                           ;main.c: 105: PORTD = 0x00;
  2397  04C0  0188               	clrf	8	;volatile
  2398                           
  2399                           ;main.c: 106: PORTE = 0x00;
  2400  04C1  0189               	clrf	9	;volatile
  2401  04C2  0008               	return
  2402  04C3                     __end_of_pic_port_init:	
  2403                           
  2404                           	psect	text14
  2405  0223                     __ptext14:	
  2406 ;; *************** function _extract_receive_packet *****************
  2407 ;; Defined at:
  2408 ;;		line 166 in file "protocol.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  p_data_type_    1    wreg     PTR unsigned char 
  2411 ;;		 -> main@r_data_type(1), 
  2412 ;;  p_data_buf      1    2[BANK1 ] PTR unsigned char 
  2413 ;;		 -> main@r_data(30), 
  2414 ;;  p_data_len_b    1    3[BANK1 ] PTR unsigned char 
  2415 ;;		 -> main@r_data_len(1), 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  p_data_type_    1    5[BANK1 ] PTR unsigned char 
  2418 ;;		 -> main@r_data_type(1), 
  2419 ;;  i               1    6[BANK1 ] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;		None               void
  2422 ;; Registers used:
  2423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2429 ;;      Params:         0       0       2       0       0
  2430 ;;      Locals:         0       0       2       0       0
  2431 ;;      Temps:          0       0       1       0       0
  2432 ;;      Totals:         0       0       5       0       0
  2433 ;;Total ram usage:        5 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    4
  2436 ;; This function calls:
  2437 ;;		_rx_packet_clear
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           
  2444                           ;psect for function _extract_receive_packet
  2445  0223                     _extract_receive_packet:	
  2446                           
  2447                           ;incstack = 0
  2448                           ; Regs used in _extract_receive_packet: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2449                           ;extract_receive_packet@p_data_type_buf stored from wreg
  2450  0223  1683               	bsf	3,5	;RP0=1, select bank1
  2451  0224  1303               	bcf	3,6	;RP1=0, select bank1
  2452  0225  00A5               	movwf	extract_receive_packet@p_data_type_buf^(0+128)
  2453                           
  2454                           ;protocol.c: 168: uint8_t i;
  2455                           ;protocol.c: 171: *p_data_type_buf = rx_packet.data_type;
  2456  0226  1683               	bsf	3,5	;RP0=1, select bank3
  2457  0227  1703               	bsf	3,6	;RP1=1, select bank3
  2458  0228  0810               	movf	_rx_packet^(0+384),w
  2459  0229  1683               	bsf	3,5	;RP0=1, select bank1
  2460  022A  1303               	bcf	3,6	;RP1=0, select bank1
  2461  022B  00A4               	movwf	??_extract_receive_packet^(0+128)
  2462  022C  0825               	movf	extract_receive_packet@p_data_type_buf^(0+128),w
  2463  022D  0084               	movwf	4
  2464  022E  0824               	movf	??_extract_receive_packet^(0+128),w
  2465  022F  1383               	bcf	3,7	;select IRP bank0
  2466  0230  0080               	movwf	0
  2467                           
  2468                           ;protocol.c: 174: for(i = 0; i < rx_packet.payload_len; i++)
  2469  0231  01A6               	clrf	extract_receive_packet@i^(0+128)
  2470  0232                     l1442:	
  2471  0232  1683               	bsf	3,5	;RP0=1, select bank3
  2472  0233  1703               	bsf	3,6	;RP1=1, select bank3
  2473  0234  0811               	movf	(_rx_packet^(0+384)+1),w
  2474  0235  1683               	bsf	3,5	;RP0=1, select bank1
  2475  0236  1303               	bcf	3,6	;RP1=0, select bank1
  2476  0237  0226               	subwf	extract_receive_packet@i^(0+128),w
  2477  0238  1803               	btfsc	3,0
  2478  0239  2A4E               	goto	l1444
  2479                           
  2480                           ;protocol.c: 175: {
  2481                           ;protocol.c: 176: *p_data_buf++ = rx_packet.payload[i];
  2482  023A  0826               	movf	extract_receive_packet@i^(0+128),w
  2483  023B  3E92               	addlw	(low ((_rx_packet| (0+256)+2)))& (0+255)
  2484  023C  0084               	movwf	4
  2485  023D  1783               	bsf	3,7	;select IRP bank3
  2486  023E  0800               	movf	0,w
  2487  023F  00A4               	movwf	??_extract_receive_packet^(0+128)
  2488  0240  0822               	movf	extract_receive_packet@p_data_buf^(0+128),w
  2489  0241  0084               	movwf	4
  2490  0242  0824               	movf	??_extract_receive_packet^(0+128),w
  2491  0243  1383               	bcf	3,7	;select IRP bank0
  2492  0244  0080               	movwf	0
  2493  0245  3001               	movlw	1
  2494  0246  00A4               	movwf	??_extract_receive_packet^(0+128)
  2495  0247  0824               	movf	??_extract_receive_packet^(0+128),w
  2496  0248  07A2               	addwf	extract_receive_packet@p_data_buf^(0+128),f
  2497  0249  3001               	movlw	1
  2498  024A  00A4               	movwf	??_extract_receive_packet^(0+128)
  2499  024B  0824               	movf	??_extract_receive_packet^(0+128),w
  2500  024C  07A6               	addwf	extract_receive_packet@i^(0+128),f
  2501  024D  2A32               	goto	l1442
  2502  024E                     l1444:	
  2503                           
  2504                           ;protocol.c: 177: }
  2505                           ;protocol.c: 180: *p_data_len_buf = rx_packet.payload_len;
  2506  024E  1683               	bsf	3,5	;RP0=1, select bank3
  2507  024F  1703               	bsf	3,6	;RP1=1, select bank3
  2508  0250  0811               	movf	(_rx_packet^(0+384)+1),w
  2509  0251  1683               	bsf	3,5	;RP0=1, select bank1
  2510  0252  1303               	bcf	3,6	;RP1=0, select bank1
  2511  0253  00A4               	movwf	??_extract_receive_packet^(0+128)
  2512  0254  0823               	movf	extract_receive_packet@p_data_len_buf^(0+128),w
  2513  0255  0084               	movwf	4
  2514  0256  0824               	movf	??_extract_receive_packet^(0+128),w
  2515  0257  0080               	movwf	0
  2516                           
  2517                           ;protocol.c: 183: rx_packet_clear();
  2518  0258  120A  118A  2369   	fcall	_rx_packet_clear
  2519                           
  2520                           ;protocol.c: 186: rx_packet_status = FALSE;
  2521  025B  1683               	bsf	3,5	;RP0=1, select bank1
  2522  025C  1303               	bcf	3,6	;RP1=0, select bank1
  2523  025D  01E7               	clrf	_rx_packet_status^(0+128)
  2524  025E  0008               	return
  2525  025F                     __end_of_extract_receive_packet:	
  2526                           
  2527                           	psect	text15
  2528  0369                     __ptext15:	
  2529 ;; *************** function _rx_packet_clear *****************
  2530 ;; Defined at:
  2531 ;;		line 231 in file "protocol.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  i               2    0[BANK1 ] int 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;		None               void
  2538 ;; Registers used:
  2539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2545 ;;      Params:         0       0       0       0       0
  2546 ;;      Locals:         0       0       2       0       0
  2547 ;;      Temps:          0       0       0       0       0
  2548 ;;      Totals:         0       0       2       0       0
  2549 ;;Total ram usage:        2 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:    3
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_extract_receive_packet
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           
  2560                           ;psect for function _rx_packet_clear
  2561  0369                     _rx_packet_clear:	
  2562                           
  2563                           ;protocol.c: 233: int i;
  2564                           ;protocol.c: 236: rx_packet.data_type = 0;
  2565                           
  2566                           ;incstack = 0
  2567                           ; Regs used in _rx_packet_clear: [wreg-fsr0h+status,2+status,0+btemp+1]
  2568  0369  1683               	bsf	3,5	;RP0=1, select bank3
  2569  036A  1703               	bsf	3,6	;RP1=1, select bank3
  2570  036B  0190               	clrf	_rx_packet^(0+384)
  2571                           
  2572                           ;protocol.c: 239: rx_packet.payload_len = 0;
  2573  036C  0191               	clrf	(_rx_packet^(0+384)+1)
  2574                           
  2575                           ;protocol.c: 242: for(i = 0; i < 30; i++)
  2576  036D  1683               	bsf	3,5	;RP0=1, select bank1
  2577  036E  1303               	bcf	3,6	;RP1=0, select bank1
  2578  036F  01A0               	clrf	rx_packet_clear@i^(0+128)
  2579  0370  01A1               	clrf	(rx_packet_clear@i+1)^(0+128)
  2580  0371  0821               	movf	(rx_packet_clear@i+1)^(0+128),w
  2581  0372  3A80               	xorlw	128
  2582  0373  00FF               	movwf	127
  2583  0374  3080               	movlw	128
  2584  0375  027F               	subwf	127,w
  2585  0376  1D03               	skipz
  2586  0377  2B7A               	goto	u735
  2587  0378  301E               	movlw	30
  2588  0379  0220               	subwf	rx_packet_clear@i^(0+128),w
  2589  037A                     u735:	
  2590  037A  1803               	btfsc	3,0
  2591  037B  2B94               	goto	l1394
  2592  037C                     l1388:	
  2593                           
  2594                           ;protocol.c: 243: {
  2595                           ;protocol.c: 244: rx_packet.payload[i] = 0;
  2596  037C  1683               	bsf	3,5	;RP0=1, select bank1
  2597  037D  1303               	bcf	3,6	;RP1=0, select bank1
  2598  037E  0820               	movf	rx_packet_clear@i^(0+128),w
  2599  037F  3E92               	addlw	(low ((_rx_packet| (0+256)+2)))& (0+255)
  2600  0380  0084               	movwf	4
  2601  0381  1783               	bsf	3,7	;select IRP bank3
  2602  0382  0180               	clrf	0
  2603  0383  3001               	movlw	1
  2604  0384  07A0               	addwf	rx_packet_clear@i^(0+128),f
  2605  0385  1803               	skipnc
  2606  0386  0AA1               	incf	(rx_packet_clear@i+1)^(0+128),f
  2607  0387  3000               	movlw	0
  2608  0388  07A1               	addwf	(rx_packet_clear@i+1)^(0+128),f
  2609  0389  0821               	movf	(rx_packet_clear@i+1)^(0+128),w
  2610  038A  3A80               	xorlw	128
  2611  038B  00FF               	movwf	127
  2612  038C  3080               	movlw	128
  2613  038D  027F               	subwf	127,w
  2614  038E  1D03               	skipz
  2615  038F  2B92               	goto	u745
  2616  0390  301E               	movlw	30
  2617  0391  0220               	subwf	rx_packet_clear@i^(0+128),w
  2618  0392                     u745:	
  2619  0392  1C03               	skipc
  2620  0393  2B7C               	goto	l1388
  2621  0394                     l1394:	
  2622                           
  2623                           ;protocol.c: 245: }
  2624                           ;protocol.c: 248: rx_packet.data_end_command = 0;
  2625  0394  1683               	bsf	3,5	;RP0=1, select bank3
  2626  0395  1703               	bsf	3,6	;RP1=1, select bank3
  2627  0396  01B0               	clrf	(_rx_packet^(0+384)+32)
  2628  0397  0008               	return
  2629  0398                     __end_of_rx_packet_clear:	
  2630                           
  2631                           	psect	text16
  2632  025F                     __ptext16:	
  2633 ;; *************** function _isr *****************
  2634 ;; Defined at:
  2635 ;;		line 30 in file "isr.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  isr_spi_buf     1   11[COMMON] unsigned char 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;		None               void
  2642 ;; Registers used:
  2643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2649 ;;      Params:         0       0       0       0       0
  2650 ;;      Locals:         1       0       0       0       0
  2651 ;;      Temps:          5       0       0       0       0
  2652 ;;      Totals:         6       0       0       0       0
  2653 ;;Total ram usage:        6 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    2
  2656 ;; This function calls:
  2657 ;;		_check_flag
  2658 ;;		_receive_packet
  2659 ;;		_send_packet
  2660 ;;		_spi_slave_receive
  2661 ;; This function is called by:
  2662 ;;		Interrupt level 1
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           
  2667                           ;psect for function _isr
  2668  025F                     _isr:	
  2669                           
  2670                           ;isr.c: 32: uint8_t isr_spi_buf;
  2671                           ;isr.c: 35: if (PIR1bits.SSPIF == 1)
  2672  025F  1D8C               	btfss	12,3	;volatile
  2673  0260  2A8E               	goto	i1l156
  2674                           
  2675                           ;isr.c: 36: {
  2676                           ;isr.c: 37: isr_spi_buf = SSPBUF;
  2677  0261  0813               	movf	19,w	;volatile
  2678  0262  00F6               	movwf	??_isr
  2679  0263  0876               	movf	??_isr,w
  2680  0264  00FB               	movwf	isr@isr_spi_buf
  2681                           
  2682                           ;isr.c: 38: SSPBUF = 0xff;
  2683  0265  30FF               	movlw	255
  2684  0266  0093               	movwf	19	;volatile
  2685                           
  2686                           ;isr.c: 41: spi_slave_receive(&isr_spi_buf);
  2687  0267  307B               	movlw	(low (isr@isr_spi_buf| 0))& (0+255)
  2688  0268  120A  118A  24A3  120A  118A  	fcall	_spi_slave_receive
  2689                           
  2690                           ;isr.c: 44: switch(isr_spi_buf)
  2691  026D  2A80               	goto	i1l1304
  2692  026E                     i1l1296:	
  2693                           ;isr.c: 45: {
  2694                           ;isr.c: 46: case 0x01:
  2695                           
  2696                           
  2697                           ;isr.c: 47: receive_packet();
  2698  026E  120A  118A  216A  120A  118A  	fcall	_receive_packet
  2699                           
  2700                           ;isr.c: 48: break;
  2701  0273  2A8B               	goto	i1l152
  2702  0274                     i1l1298:	
  2703                           ;isr.c: 49: case 0x02:
  2704                           
  2705                           
  2706                           ;isr.c: 50: send_packet();
  2707  0274  120A  118A  2338  120A  118A  	fcall	_send_packet
  2708                           
  2709                           ;isr.c: 51: break;
  2710  0279  2A8B               	goto	i1l152
  2711  027A                     i1l1300:	
  2712                           ;isr.c: 52: case 0x03:
  2713                           
  2714                           
  2715                           ;isr.c: 53: check_flag();
  2716  027A  120A  118A  24DD  120A  118A  	fcall	_check_flag
  2717                           
  2718                           ;isr.c: 57: }
  2719                           
  2720                           ;isr.c: 56: break;
  2721                           
  2722                           ;isr.c: 55: default:
  2723                           
  2724                           ;isr.c: 54: break;
  2725  027F  2A8B               	goto	i1l152
  2726  0280                     i1l1304:	
  2727  0280  087B               	movf	isr@isr_spi_buf,w
  2728                           
  2729                           ; Switch size 1, requested type "space"
  2730                           ; Number of cases is 3, Range of values is 1 to 3
  2731                           ; switch strategies available:
  2732                           ; Name         Instructions Cycles
  2733                           ; simple_byte           10     6 (average)
  2734                           ; direct_byte           20    11 (fixed)
  2735                           ; jumptable            263     9 (fixed)
  2736                           ;	Chosen strategy is simple_byte
  2737  0281  3A01               	xorlw	1	; case 1
  2738  0282  1903               	skipnz
  2739  0283  2A6E               	goto	i1l1296
  2740  0284  3A03               	xorlw	3	; case 2
  2741  0285  1903               	skipnz
  2742  0286  2A74               	goto	i1l1298
  2743  0287  3A01               	xorlw	1	; case 3
  2744  0288  1903               	skipnz
  2745  0289  2A7A               	goto	i1l1300
  2746  028A  2A8B               	goto	i1l152
  2747  028B                     i1l152:	
  2748                           
  2749                           ;isr.c: 60: PIR1bits.SSPIF = 0;
  2750  028B  1283               	bcf	3,5	;RP0=0, select bank0
  2751  028C  1303               	bcf	3,6	;RP1=0, select bank0
  2752  028D  118C               	bcf	12,3	;volatile
  2753  028E                     i1l156:	
  2754  028E  087A               	movf	??_isr+4,w
  2755  028F  00FF               	movwf	127
  2756  0290  0879               	movf	??_isr+3,w
  2757  0291  008A               	movwf	10
  2758  0292  0878               	movf	??_isr+2,w
  2759  0293  0084               	movwf	4
  2760  0294  0E77               	swapf	(??_isr+1)^(0+-128),w
  2761  0295  0083               	movwf	3
  2762  0296  0EFE               	swapf	126,f
  2763  0297  0E7E               	swapf	126,w
  2764  0298  0009               	retfie
  2765  0299                     __end_of_isr:	
  2766                           
  2767                           	psect	intentry
  2768  0004                     __pintentry:	
  2769                           ;incstack = 0
  2770                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2771                           
  2772  0004                     interrupt_function:	
  2773  007E                     saved_w	set	btemp
  2774  0004  00FE               	movwf	btemp
  2775  0005  0E03               	swapf	3,w
  2776  0006  00F7               	movwf	??_isr+1
  2777  0007  0804               	movf	4,w
  2778  0008  00F8               	movwf	??_isr+2
  2779  0009  080A               	movf	10,w
  2780  000A  00F9               	movwf	??_isr+3
  2781  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2782  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2783  000D  087F               	movf	btemp+1,w
  2784  000E  00FA               	movwf	??_isr+4
  2785  000F  120A  118A  2A5F   	ljmp	_isr
  2786                           
  2787                           	psect	text17
  2788  0338                     __ptext17:	
  2789 ;; *************** function _send_packet *****************
  2790 ;; Defined at:
  2791 ;;		line 266 in file "protocol.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;		None
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  i               1    4[COMMON] unsigned char 
  2796 ;;  buf             1    0        unsigned char 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;		None               void
  2799 ;; Registers used:
  2800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2806 ;;      Params:         0       0       0       0       0
  2807 ;;      Locals:         1       0       0       0       0
  2808 ;;      Temps:          1       0       0       0       0
  2809 ;;      Totals:         2       0       0       0       0
  2810 ;;Total ram usage:        2 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    1
  2813 ;; This function calls:
  2814 ;;		_spi_slave_send
  2815 ;;		_tx_packet_clear
  2816 ;; This function is called by:
  2817 ;;		_isr
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           
  2822                           ;psect for function _send_packet
  2823  0338                     _send_packet:	
  2824                           
  2825                           ;protocol.c: 268: uint8_t buf;
  2826                           ;protocol.c: 269: uint8_t i;
  2827                           ;protocol.c: 272: spi_slave_send(tx_packet.data_type);
  2828                           
  2829                           ;incstack = 0
  2830                           ; Regs used in _send_packet: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2831  0338  1283               	bcf	3,5	;RP0=0, select bank0
  2832  0339  1303               	bcf	3,6	;RP1=0, select bank0
  2833  033A  0842               	movf	_tx_packet,w
  2834  033B  120A  118A  2491  120A  118A  	fcall	_spi_slave_send
  2835                           
  2836                           ;protocol.c: 275: spi_slave_send(tx_packet.payload_len);
  2837  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2838  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2839  0342  0843               	movf	_tx_packet+1,w
  2840  0343  120A  118A  2491  120A  118A  	fcall	_spi_slave_send
  2841                           
  2842                           ;protocol.c: 278: for(i = 0; i < tx_packet.payload_len; i++)
  2843  0348  01F4               	clrf	send_packet@i
  2844  0349                     i1l962:	
  2845  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2846  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2847  034B  0843               	movf	_tx_packet+1,w
  2848  034C  0274               	subwf	send_packet@i,w
  2849  034D  1803               	btfsc	3,0
  2850  034E  2B5E               	goto	i1l964
  2851                           
  2852                           ;protocol.c: 279: {
  2853                           ;protocol.c: 280: spi_slave_send(tx_packet.payload[i]);
  2854  034F  0874               	movf	send_packet@i,w
  2855  0350  3E44               	addlw	(low ((_tx_packet| 0+2)))& (0+255)
  2856  0351  0084               	movwf	4
  2857  0352  1383               	bcf	3,7	;select IRP bank0
  2858  0353  0800               	movf	0,w
  2859  0354  120A  118A  2491  120A  118A  	fcall	_spi_slave_send
  2860  0359  3001               	movlw	1
  2861  035A  00F3               	movwf	??_send_packet
  2862  035B  0873               	movf	??_send_packet,w
  2863  035C  07F4               	addwf	send_packet@i,f
  2864  035D  2B49               	goto	i1l962
  2865  035E                     i1l964:	
  2866                           
  2867                           ;protocol.c: 281: }
  2868                           ;protocol.c: 284: spi_slave_send(tx_packet.data_end_command);
  2869  035E  0862               	movf	_tx_packet+32,w
  2870  035F  120A  118A  2491  120A  118A  	fcall	_spi_slave_send
  2871                           
  2872                           ;protocol.c: 287: tx_packet_clear();
  2873  0364  120A  118A  23C3   	fcall	_tx_packet_clear
  2874                           
  2875                           ;protocol.c: 290: tx_packet_status = FALSE;
  2876  0367  01FC               	clrf	_tx_packet_status
  2877  0368  0008               	return
  2878  0369                     __end_of_send_packet:	
  2879                           
  2880                           	psect	text18
  2881  03C3                     __ptext18:	
  2882 ;; *************** function _tx_packet_clear *****************
  2883 ;; Defined at:
  2884 ;;		line 200 in file "protocol.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;		None
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;  i               2    0[COMMON] int 
  2889 ;; Return value:  Size  Location     Type
  2890 ;;		None               void
  2891 ;; Registers used:
  2892 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2898 ;;      Params:         0       0       0       0       0
  2899 ;;      Locals:         2       0       0       0       0
  2900 ;;      Temps:          0       0       0       0       0
  2901 ;;      Totals:         2       0       0       0       0
  2902 ;;Total ram usage:        2 bytes
  2903 ;; Hardware stack levels used:    1
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_send_packet
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           
  2912                           ;psect for function _tx_packet_clear
  2913  03C3                     _tx_packet_clear:	
  2914                           
  2915                           ;protocol.c: 202: int i;
  2916                           ;protocol.c: 205: tx_packet.data_type = 0;
  2917                           
  2918                           ;incstack = 0
  2919                           ; Regs used in _tx_packet_clear: [wreg-fsr0h+status,2+status,0+btemp+1]
  2920  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2921  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2922  03C5  01C2               	clrf	_tx_packet
  2923                           
  2924                           ;protocol.c: 208: tx_packet.payload_len = 0;
  2925  03C6  01C3               	clrf	_tx_packet+1
  2926                           
  2927                           ;protocol.c: 211: for(i = 0; i < 30; i++)
  2928  03C7  01F0               	clrf	tx_packet_clear@i
  2929  03C8  01F1               	clrf	tx_packet_clear@i+1
  2930  03C9  0871               	movf	tx_packet_clear@i+1,w
  2931  03CA  3A80               	xorlw	128
  2932  03CB  00FF               	movwf	127
  2933  03CC  3080               	movlw	128
  2934  03CD  027F               	subwf	127,w
  2935  03CE  1D03               	skipz
  2936  03CF  2BD2               	goto	u15_25
  2937  03D0  301E               	movlw	30
  2938  03D1  0270               	subwf	tx_packet_clear@i,w
  2939  03D2                     u15_25:	
  2940  03D2  1803               	btfsc	3,0
  2941  03D3  2BEA               	goto	i1l840
  2942  03D4                     i1l834:	
  2943                           
  2944                           ;protocol.c: 212: {
  2945                           ;protocol.c: 213: tx_packet.payload[i] = 0;
  2946  03D4  0870               	movf	tx_packet_clear@i,w
  2947  03D5  3E44               	addlw	(low ((_tx_packet| 0+2)))& (0+255)
  2948  03D6  0084               	movwf	4
  2949  03D7  1383               	bcf	3,7	;select IRP bank0
  2950  03D8  0180               	clrf	0
  2951  03D9  3001               	movlw	1
  2952  03DA  07F0               	addwf	tx_packet_clear@i,f
  2953  03DB  1803               	skipnc
  2954  03DC  0AF1               	incf	tx_packet_clear@i+1,f
  2955  03DD  3000               	movlw	0
  2956  03DE  07F1               	addwf	tx_packet_clear@i+1,f
  2957  03DF  0871               	movf	tx_packet_clear@i+1,w
  2958  03E0  3A80               	xorlw	128
  2959  03E1  00FF               	movwf	127
  2960  03E2  3080               	movlw	128
  2961  03E3  027F               	subwf	127,w
  2962  03E4  1D03               	skipz
  2963  03E5  2BE8               	goto	u16_25
  2964  03E6  301E               	movlw	30
  2965  03E7  0270               	subwf	tx_packet_clear@i,w
  2966  03E8                     u16_25:	
  2967  03E8  1C03               	skipc
  2968  03E9  2BD4               	goto	i1l834
  2969  03EA                     i1l840:	
  2970                           
  2971                           ;protocol.c: 214: }
  2972                           ;protocol.c: 217: tx_packet.data_end_command = 0;
  2973  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2974  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2975  03EC  01E2               	clrf	_tx_packet+32
  2976  03ED  0008               	return
  2977  03EE                     __end_of_tx_packet_clear:	
  2978                           
  2979                           	psect	text19
  2980  016A                     __ptext19:	
  2981 ;; *************** function _receive_packet *****************
  2982 ;; Defined at:
  2983 ;;		line 305 in file "protocol.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;		None
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  receive_buf    33    0[BANK0 ] unsigned char [33]
  2988 ;;  i               1   33[BANK0 ] unsigned char 
  2989 ;; Return value:  Size  Location     Type
  2990 ;;		None               void
  2991 ;; Registers used:
  2992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2998 ;;      Params:         0       0       0       0       0
  2999 ;;      Locals:         0      34       0       0       0
  3000 ;;      Temps:          3       0       0       0       0
  3001 ;;      Totals:         3      34       0       0       0
  3002 ;;Total ram usage:       37 bytes
  3003 ;; Hardware stack levels used:    1
  3004 ;; Hardware stack levels required when called:    1
  3005 ;; This function calls:
  3006 ;;		_buf_send
  3007 ;;		_spi_slave_receive
  3008 ;; This function is called by:
  3009 ;;		_isr
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           
  3014                           ;psect for function _receive_packet
  3015  016A                     _receive_packet:	
  3016                           
  3017                           ;protocol.c: 307: uint8_t receive_buf[33];
  3018                           ;protocol.c: 308: uint8_t i;
  3019                           ;protocol.c: 311: for(i = 0; i < 2; i++)
  3020                           
  3021                           ;incstack = 0
  3022                           ; Regs used in _receive_packet: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3023  016A  1283               	bcf	3,5	;RP0=0, select bank0
  3024  016B  1303               	bcf	3,6	;RP1=0, select bank0
  3025  016C  01C1               	clrf	receive_packet@i
  3026  016D                     L2:	
  3027  016D  3002               	movlw	2
  3028  016E  0241               	subwf	receive_packet@i,w
  3029  016F  1803               	btfsc	3,0
  3030  0170  298E               	goto	i1l1242
  3031                           
  3032                           ;protocol.c: 312: {
  3033                           ;protocol.c: 313: spi_slave_receive(&receive_buf[i]);
  3034  0171  0841               	movf	receive_packet@i,w
  3035  0172  3E20               	addlw	(low (receive_packet@receive_buf| 0))& (0+255)
  3036  0173  120A  118A  24A3  120A  118A  	fcall	_spi_slave_receive
  3037  0178  3001               	movlw	1
  3038  0179  00F3               	movwf	??_receive_packet
  3039  017A  0873               	movf	??_receive_packet,w
  3040  017B  1283               	bcf	3,5	;RP0=0, select bank0
  3041  017C  1303               	bcf	3,6	;RP1=0, select bank0
  3042  017D  07C1               	addwf	receive_packet@i,f
  3043  017E  296D               	goto	L2
  3044  017F                     i1l1238:	
  3045                           ;protocol.c: 314: }
  3046                           ;protocol.c: 317: for(; i <= (receive_buf[1] + 2); i++)
  3047                           
  3048                           
  3049                           ;protocol.c: 318: {
  3050                           ;protocol.c: 319: spi_slave_receive(&receive_buf[i]);
  3051  017F  1283               	bcf	3,5	;RP0=0, select bank0
  3052  0180  1303               	bcf	3,6	;RP1=0, select bank0
  3053  0181  0841               	movf	receive_packet@i,w
  3054  0182  3E20               	addlw	(low (receive_packet@receive_buf| 0))& (0+255)
  3055  0183  120A  118A  24A3  120A  118A  	fcall	_spi_slave_receive
  3056  0188  3001               	movlw	1
  3057  0189  00F3               	movwf	??_receive_packet
  3058  018A  0873               	movf	??_receive_packet,w
  3059  018B  1283               	bcf	3,5	;RP0=0, select bank0
  3060  018C  1303               	bcf	3,6	;RP1=0, select bank0
  3061  018D  07C1               	addwf	receive_packet@i,f
  3062  018E                     i1l1242:	
  3063  018E  0821               	movf	receive_packet@receive_buf+1,w
  3064  018F  3E02               	addlw	2
  3065  0190  00F3               	movwf	??_receive_packet
  3066  0191  3000               	movlw	0
  3067  0192  1803               	skipnc
  3068  0193  3001               	movlw	1
  3069  0194  00F4               	movwf	??_receive_packet+1
  3070  0195  0874               	movf	??_receive_packet+1,w
  3071  0196  3A80               	xorlw	128
  3072  0197  00F5               	movwf	??_receive_packet+2
  3073  0198  3080               	movlw	128
  3074  0199  0275               	subwf	??_receive_packet+2,w
  3075  019A  1D03               	skipz
  3076  019B  299E               	goto	u59_25
  3077  019C  0841               	movf	receive_packet@i,w
  3078  019D  0273               	subwf	??_receive_packet,w
  3079  019E                     u59_25:	
  3080  019E  1803               	skipnc
  3081  019F  297F               	goto	i1l1238
  3082                           
  3083                           ;protocol.c: 320: }
  3084                           ;protocol.c: 323: buf_send(receive_buf);
  3085  01A0  3020               	movlw	(low (receive_packet@receive_buf| 0))& (0+255)
  3086  01A1  120A  118A  2299   	fcall	_buf_send
  3087                           
  3088                           ;protocol.c: 326: rx_packet_status = TRUE;
  3089  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  3090  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  3091  01A6  01E7               	clrf	_rx_packet_status^(0+128)
  3092  01A7  0AE7               	incf	_rx_packet_status^(0+128),f
  3093  01A8  0008               	return
  3094  01A9                     __end_of_receive_packet:	
  3095                           
  3096                           	psect	text20
  3097  04A3                     __ptext20:	
  3098 ;; *************** function _spi_slave_receive *****************
  3099 ;; Defined at:
  3100 ;;		line 119 in file "spi_slave.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  p_get           1    wreg     PTR unsigned char 
  3103 ;;		 -> receive_packet@receive_buf(33), isr@isr_spi_buf(1), 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  p_get           1    1[COMMON] PTR unsigned char 
  3106 ;;		 -> receive_packet@receive_buf(33), isr@isr_spi_buf(1), 
  3107 ;; Return value:  Size  Location     Type
  3108 ;;		None               void
  3109 ;; Registers used:
  3110 ;;		wreg, fsr0l, fsr0h
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3116 ;;      Params:         0       0       0       0       0
  3117 ;;      Locals:         1       0       0       0       0
  3118 ;;      Temps:          1       0       0       0       0
  3119 ;;      Totals:         2       0       0       0       0
  3120 ;;Total ram usage:        2 bytes
  3121 ;; Hardware stack levels used:    1
  3122 ;; This function calls:
  3123 ;;		Nothing
  3124 ;; This function is called by:
  3125 ;;		_isr
  3126 ;;		_receive_packet
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           
  3131                           ;psect for function _spi_slave_receive
  3132  04A3                     _spi_slave_receive:	
  3133                           
  3134                           ;incstack = 0
  3135                           ; Regs used in _spi_slave_receive: [wregfsr0]
  3136                           ;spi_slave_receive@p_get stored from wreg
  3137  04A3  00F1               	movwf	spi_slave_receive@p_get
  3138  04A4                     i1l131:	
  3139                           ;spi_slave.c: 123: {
  3140                           ;spi_slave.c: 124: ;
  3141                           
  3142                           ;spi_slave.c: 122: while(SSPSTATbits.BF == 0)
  3143                           
  3144  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  3145  04A5  1303               	bcf	3,6	;RP1=0, select bank1
  3146  04A6  1C14               	btfss	20,0	;volatile
  3147  04A7  2CA4               	goto	i1l131
  3148                           
  3149                           ;spi_slave.c: 125: }
  3150                           ;spi_slave.c: 128: *p_get = SSPBUF;
  3151  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  3152  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  3153  04AA  0813               	movf	19,w	;volatile
  3154  04AB  00F0               	movwf	??_spi_slave_receive
  3155  04AC  0871               	movf	spi_slave_receive@p_get,w
  3156  04AD  0084               	movwf	4
  3157  04AE  0870               	movf	??_spi_slave_receive,w
  3158  04AF  1383               	bcf	3,7	;select IRP bank0
  3159  04B0  0080               	movwf	0
  3160                           
  3161                           ;spi_slave.c: 131: SSPBUF = 0xff;
  3162  04B1  30FF               	movlw	255
  3163  04B2  0093               	movwf	19	;volatile
  3164  04B3  0008               	return
  3165  04B4                     __end_of_spi_slave_receive:	
  3166                           
  3167                           	psect	text21
  3168  0299                     __ptext21:	
  3169 ;; *************** function _buf_send *****************
  3170 ;; Defined at:
  3171 ;;		line 505 in file "protocol.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  buf             1    wreg     PTR unsigned char 
  3174 ;;		 -> receive_packet@receive_buf(33), 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  buf             1    2[COMMON] PTR unsigned char 
  3177 ;;		 -> receive_packet@receive_buf(33), 
  3178 ;;  i               1    1[COMMON] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;		None               void
  3181 ;; Registers used:
  3182 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3188 ;;      Params:         0       0       0       0       0
  3189 ;;      Locals:         2       0       0       0       0
  3190 ;;      Temps:          1       0       0       0       0
  3191 ;;      Totals:         3       0       0       0       0
  3192 ;;Total ram usage:        3 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; This function calls:
  3195 ;;		Nothing
  3196 ;; This function is called by:
  3197 ;;		_receive_packet
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           
  3202                           ;psect for function _buf_send
  3203  0299                     _buf_send:	
  3204                           
  3205                           ;incstack = 0
  3206                           ; Regs used in _buf_send: [wreg-fsr0h+status,2+status,0]
  3207                           ;buf_send@buf stored from wreg
  3208  0299  00F2               	movwf	buf_send@buf
  3209                           
  3210                           ;protocol.c: 507: uint8_t i;
  3211                           ;protocol.c: 510: rx_packet.data_type = *buf++;
  3212  029A  0872               	movf	buf_send@buf,w
  3213  029B  0084               	movwf	4
  3214  029C  1383               	bcf	3,7	;select IRP bank0
  3215  029D  0800               	movf	0,w
  3216  029E  00F0               	movwf	??_buf_send
  3217  029F  0870               	movf	??_buf_send,w
  3218  02A0  1683               	bsf	3,5	;RP0=1, select bank3
  3219  02A1  1703               	bsf	3,6	;RP1=1, select bank3
  3220  02A2  0090               	movwf	_rx_packet^(0+384)
  3221  02A3  3001               	movlw	1
  3222  02A4  00F0               	movwf	??_buf_send
  3223  02A5  0870               	movf	??_buf_send,w
  3224  02A6  07F2               	addwf	buf_send@buf,f
  3225                           
  3226                           ;protocol.c: 513: rx_packet.payload_len = *buf++;
  3227  02A7  0872               	movf	buf_send@buf,w
  3228  02A8  0084               	movwf	4
  3229  02A9  0800               	movf	0,w
  3230  02AA  00F0               	movwf	??_buf_send
  3231  02AB  0870               	movf	??_buf_send,w
  3232  02AC  0091               	movwf	(_rx_packet^(0+384)+1)
  3233  02AD  3001               	movlw	1
  3234  02AE  00F0               	movwf	??_buf_send
  3235  02AF  0870               	movf	??_buf_send,w
  3236  02B0  07F2               	addwf	buf_send@buf,f
  3237                           
  3238                           ;protocol.c: 516: for(i = 0; i < rx_packet.payload_len; i++)
  3239  02B1  01F1               	clrf	buf_send@i
  3240  02B2                     i1l1150:	
  3241  02B2  0811               	movf	(_rx_packet^(0+384)+1),w
  3242  02B3  0271               	subwf	buf_send@i,w
  3243  02B4  1803               	btfsc	3,0
  3244  02B5  2ACA               	goto	i1l1152
  3245                           
  3246                           ;protocol.c: 517: {
  3247                           ;protocol.c: 518: rx_packet.payload[i] = *buf++;
  3248  02B6  0872               	movf	buf_send@buf,w
  3249  02B7  0084               	movwf	4
  3250  02B8  1383               	bcf	3,7	;select IRP bank0
  3251  02B9  0800               	movf	0,w
  3252  02BA  00F0               	movwf	??_buf_send
  3253  02BB  0871               	movf	buf_send@i,w
  3254  02BC  3E92               	addlw	(low ((_rx_packet| (0+256)+2)))& (0+255)
  3255  02BD  0084               	movwf	4
  3256  02BE  0870               	movf	??_buf_send,w
  3257  02BF  1783               	bsf	3,7	;select IRP bank3
  3258  02C0  0080               	movwf	0
  3259  02C1  3001               	movlw	1
  3260  02C2  00F0               	movwf	??_buf_send
  3261  02C3  0870               	movf	??_buf_send,w
  3262  02C4  07F2               	addwf	buf_send@buf,f
  3263  02C5  3001               	movlw	1
  3264  02C6  00F0               	movwf	??_buf_send
  3265  02C7  0870               	movf	??_buf_send,w
  3266  02C8  07F1               	addwf	buf_send@i,f
  3267  02C9  2AB2               	goto	i1l1150
  3268  02CA                     i1l1152:	
  3269                           
  3270                           ;protocol.c: 519: }
  3271                           ;protocol.c: 522: rx_packet.data_end_command = *buf;
  3272  02CA  0872               	movf	buf_send@buf,w
  3273  02CB  0084               	movwf	4
  3274  02CC  1383               	bcf	3,7	;select IRP bank0
  3275  02CD  0800               	movf	0,w
  3276  02CE  00F0               	movwf	??_buf_send
  3277  02CF  0870               	movf	??_buf_send,w
  3278  02D0  00B0               	movwf	(_rx_packet^(0+384)+32)
  3279  02D1  0008               	return
  3280  02D2                     __end_of_buf_send:	
  3281                           
  3282                           	psect	text22
  3283  04DD                     __ptext22:	
  3284 ;; *************** function _check_flag *****************
  3285 ;; Defined at:
  3286 ;;		line 341 in file "protocol.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;		None
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;		None               void
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0, pclath, cstack
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3300 ;;      Params:         0       0       0       0       0
  3301 ;;      Locals:         0       0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0
  3303 ;;      Totals:         0       0       0       0       0
  3304 ;;Total ram usage:        0 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; Hardware stack levels required when called:    1
  3307 ;; This function calls:
  3308 ;;		_spi_slave_send
  3309 ;; This function is called by:
  3310 ;;		_isr
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314                           
  3315                           ;psect for function _check_flag
  3316  04DD                     _check_flag:	
  3317                           
  3318                           ;protocol.c: 344: if(tx_packet_status)
  3319                           
  3320                           ;incstack = 0
  3321                           ; Regs used in _check_flag: [wreg+status,2+status,0+pclath+cstack]
  3322  04DD  087C               	movf	_tx_packet_status,w
  3323  04DE  1903               	btfsc	3,2
  3324  04DF  2CE5               	goto	i1l974
  3325                           
  3326                           ;protocol.c: 345: {
  3327                           ;protocol.c: 346: spi_slave_send((uint8_t)TRUE);
  3328  04E0  3001               	movlw	1
  3329  04E1  120A  118A  2491   	fcall	_spi_slave_send
  3330                           
  3331                           ;protocol.c: 347: }
  3332  04E4  0008               	return
  3333  04E5                     i1l974:	
  3334                           
  3335                           ;protocol.c: 348: else
  3336                           ;protocol.c: 349: {
  3337                           ;protocol.c: 350: spi_slave_send((uint8_t)FALSE);
  3338  04E5  3000               	movlw	0
  3339  04E6  120A  118A  2491   	fcall	_spi_slave_send
  3340  04E9  0008               	return
  3341  04EA                     __end_of_check_flag:	
  3342                           
  3343                           	psect	text23
  3344  0491                     __ptext23:	
  3345 ;; *************** function _spi_slave_send *****************
  3346 ;; Defined at:
  3347 ;;		line 88 in file "spi_slave.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  data            1    wreg     unsigned char 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;  data            1    2[COMMON] unsigned char 
  3352 ;;  buf             1    1[COMMON] unsigned char 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;		None               void
  3355 ;; Registers used:
  3356 ;;		wreg
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3362 ;;      Params:         0       0       0       0       0
  3363 ;;      Locals:         2       0       0       0       0
  3364 ;;      Temps:          1       0       0       0       0
  3365 ;;      Totals:         3       0       0       0       0
  3366 ;;Total ram usage:        3 bytes
  3367 ;; Hardware stack levels used:    1
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_send_packet
  3372 ;;		_check_flag
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           
  3377                           ;psect for function _spi_slave_send
  3378  0491                     _spi_slave_send:	
  3379                           
  3380                           ;incstack = 0
  3381                           ; Regs used in _spi_slave_send: [wreg]
  3382                           ;spi_slave_send@data stored from wreg
  3383  0491  00F2               	movwf	spi_slave_send@data
  3384                           
  3385                           ;spi_slave.c: 90: uint8_t buf;
  3386                           ;spi_slave.c: 93: SSPBUF = data;
  3387  0492  0872               	movf	spi_slave_send@data,w
  3388  0493  1283               	bcf	3,5	;RP0=0, select bank0
  3389  0494  1303               	bcf	3,6	;RP1=0, select bank0
  3390  0495  0093               	movwf	19	;volatile
  3391  0496                     i1l125:	
  3392                           ;spi_slave.c: 97: {
  3393                           ;spi_slave.c: 98: ;
  3394                           
  3395                           ;spi_slave.c: 96: while(SSPSTATbits.BF == 0)
  3396                           
  3397  0496  1683               	bsf	3,5	;RP0=1, select bank1
  3398  0497  1303               	bcf	3,6	;RP1=0, select bank1
  3399  0498  1C14               	btfss	20,0	;volatile
  3400  0499  2C96               	goto	i1l125
  3401                           
  3402                           ;spi_slave.c: 99: }
  3403                           ;spi_slave.c: 102: buf = SSPBUF;
  3404  049A  1283               	bcf	3,5	;RP0=0, select bank0
  3405  049B  1303               	bcf	3,6	;RP1=0, select bank0
  3406  049C  0813               	movf	19,w	;volatile
  3407  049D  00F0               	movwf	??_spi_slave_send
  3408  049E  0870               	movf	??_spi_slave_send,w
  3409  049F  00F1               	movwf	spi_slave_send@buf
  3410                           
  3411                           ;spi_slave.c: 105: SSPBUF = 0xff;
  3412  04A0  30FF               	movlw	255
  3413  04A1  0093               	movwf	19	;volatile
  3414  04A2  0008               	return
  3415  04A3                     __end_of_spi_slave_send:	
  3416  007E                     btemp	set	126	;btemp
  3417  007E                     wtemp	set	126
  3418  007E                     wtemp0	set	126
  3419  0080                     wtemp1	set	128
  3420  0082                     wtemp2	set	130
  3421  0084                     wtemp3	set	132
  3422  0086                     wtemp4	set	134
  3423  0088                     wtemp5	set	136
  3424  007F                     wtemp6	set	127
  3425  007E                     ttemp	set	126
  3426  007E                     ttemp0	set	126
  3427  0081                     ttemp1	set	129
  3428  0084                     ttemp2	set	132
  3429  0087                     ttemp3	set	135
  3430  007F                     ttemp4	set	127
  3431  007E                     ltemp	set	126
  3432  007E                     ltemp0	set	126
  3433  0082                     ltemp1	set	130
  3434  0086                     ltemp2	set	134
  3435  0080                     ltemp3	set	128


Data Sizes:
    Strings     23
    Constant    2
    Data        5
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     34      67
    BANK1            80     66      72
    BANK3            96      0      33
    BANK2            96      0       0

Pointer List with Targets:

    buf_send@buf	PTR unsigned char  size(1) Largest target is 33
		 -> receive_packet@receive_buf(BANK0[33]), 

    double_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 5
		 -> double_data_set@buf(BANK1[5]), 

    double_to_byte_array@p_data	PTR  size(1) Largest target is 5
		 -> main@send_data(BANK1[5]), 

    uint16_to_byte_array@p_data	PTR unsigned int  size(1) Largest target is 5
		 -> main@send_data(BANK1[5]), 

    uint16_to_byte_array@p_data_array	PTR unsigned char  size(1) Largest target is 3
		 -> uint16_data_set@buf(BANK1[3]), 

    double_data_set@p_data	PTR  size(1) Largest target is 5
		 -> main@send_data(BANK1[5]), 

    uint16_data_set@p_data	PTR unsigned int  size(1) Largest target is 5
		 -> main@send_data(BANK1[5]), 

    uint8_data_set@p_data	PTR unsigned char  size(1) Largest target is 5
		 -> main@send_data(BANK1[5]), 

    extract_receive_packet@p_data_len_buf	PTR unsigned char  size(1) Largest target is 1
		 -> main@r_data_len(BANK1[1]), 

    extract_receive_packet@p_data_buf	PTR unsigned char  size(1) Largest target is 30
		 -> main@r_data(BANK1[30]), 

    extract_receive_packet@p_data_type_buf	PTR unsigned char  size(1) Largest target is 1
		 -> main@r_data_type(BANK1[1]), 

    sent_data_set@p_data	PTR void  size(1) Largest target is 5
		 -> main@send_data(BANK1[5]), 

    spi_slave_receive@p_get	PTR unsigned char  size(1) Largest target is 33
		 -> receive_packet@receive_buf(BANK0[33]), isr@isr_spi_buf(COMMON[1]), 

    put_string@str	PTR unsigned char  size(1) Largest target is 23
		 -> STR_1(CODE[23]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_receive_packet
    _send_packet->_spi_slave_send
    _receive_packet->_buf_send
    _check_flag->_spi_slave_send

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_receive_packet

Critical Paths under _main in BANK1

    _main->_sent_data_set
    _sent_data_set->_double_data_set
    _uint16_data_set->_uint16_to_byte_array
    _double_data_set->_double_to_byte_array
    _put_string->_put_char
    _extract_receive_packet->_rx_packet_clear

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0    3151
                                             26 BANK1     40    40      0
             _extract_receive_packet
                      _pic_port_init
                           _put_char
                         _put_string
                    _send_data_slave
                      _sent_data_set
                    _spi_slave_start
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_slave_start                                      1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _sent_data_set                                        8     6      2    2157
                                             18 BANK1      8     6      2
                             ___wmul
                    _double_data_set
                    _uint16_data_set
                     _uint8_data_set
 ---------------------------------------------------------------------------------
 (2) _uint8_data_set                                       3     2      1     163
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (2) _uint16_data_set                                      7     6      1     595
                                              5 BANK1      7     6      1
               _uint16_to_byte_array
 ---------------------------------------------------------------------------------
 (3) _uint16_to_byte_array                                 5     4      1     250
                                              0 BANK1      5     4      1
 ---------------------------------------------------------------------------------
 (2) _double_data_set                                      9     8      1     694
                                              9 BANK1      9     8      1
               _double_to_byte_array
 ---------------------------------------------------------------------------------
 (3) _double_to_byte_array                                 9     8      1     355
                                              0 BANK1      9     8      1
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     266
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _send_data_slave                                      3     2      1     127
                                              0 BANK1      3     2      1
 ---------------------------------------------------------------------------------
 (1) _put_string                                           2     2      0     126
                                              1 BANK1      2     2      0
                           _put_char
 ---------------------------------------------------------------------------------
 (2) _put_char                                             1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _pic_port_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _extract_receive_packet                               5     3      2     423
                                              2 BANK1      5     3      2
                    _rx_packet_clear
 ---------------------------------------------------------------------------------
 (2) _rx_packet_clear                                      2     2      0      99
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  6     6      0     730
                                              6 COMMON     6     6      0
                         _check_flag
                     _receive_packet
                        _send_packet
                  _spi_slave_receive
 ---------------------------------------------------------------------------------
 (5) _send_packet                                          3     3      0      90
                                              3 COMMON     2     2      0
                     _spi_slave_send
                    _tx_packet_clear
 ---------------------------------------------------------------------------------
 (6) _tx_packet_clear                                      2     2      0      45
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _receive_packet                                      37    37      0     475
                                              3 COMMON     3     3      0
                                              0 BANK0     34    34      0
                           _buf_send
                  _spi_slave_receive
 ---------------------------------------------------------------------------------
 (5) _spi_slave_receive                                    2     2      0     103
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _buf_send                                             3     3      0     164
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _check_flag                                           0     0      0      15
                     _spi_slave_send
 ---------------------------------------------------------------------------------
 (6) _spi_slave_send                                       3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _extract_receive_packet
     _rx_packet_clear
   _pic_port_init
   _put_char
   _put_string
     _put_char
   _send_data_slave
   _sent_data_set
     ___wmul
     _double_data_set
       _double_to_byte_array
     _uint16_data_set
       _uint16_to_byte_array
     _uint8_data_set
   _spi_slave_start
   _uart_init

 _isr (ROOT)
   _check_flag
     _spi_slave_send
   _receive_packet
     _buf_send
     _spi_slave_receive
   _send_packet
     _spi_slave_send
     _tx_packet_clear
   _spi_slave_receive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      21       9       34.4%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     42      48       7       90.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     22      43       5       83.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B9      12        0.0%
ABS                  0      0      B9       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Aug 31 15:01:40 2016

                                    pc 0002                        ?_receive_packet 0070  
                          __CFG_CP$OFF 0000                            _SSPSTATbits 0094  
                                   l24 04D3                 ??_uint16_to_byte_array 00A1  
                                   fsr 0004                    ___wmul@multiplicand 00A2  
                          buf_send@buf 0072                                    l121 0334  
                                  l233 02D5                                    l247 01E9  
                                  l239 01AC                                    l352 0447  
                                  l186 0169                                    _RA0 0028  
                         __CFG_CPD$OFF 0000                                    u735 037A  
                                  u745 0392                                    u765 0448  
                                  u775 044F                                    u857 006E  
                                  u867 0080                                    u877 00A3  
                                  u887 00B5                                    u897 00EB  
                                  _isr 025F                   uint8_data_set@p_data 00A2  
                                  fsr0 0004                                    indf 0000  
               ??_double_to_byte_array 00A1                           __CFG_FOSC$HS 0000  
                         __CFG_LVP$OFF 0000                                   l1420 0419  
                                 l1422 0436                                   l1350 01C4  
                                 l1442 0232                                   l1444 024E  
                                 l1380 0220                                   l1372 0201  
                                 l1358 01E3                                   l1454 013D  
                                 l1462 015C                                   l1456 0146  
                                 l1394 0394                                   l1458 0151  
                                 l1388 037C                                   l1398 043F  
                                 l1486 0098                                   ?_isr 0070  
                      ?_spi_slave_send 0070                                   STR_1 0466  
             __size_of_send_data_slave 0014                                   _RCIF 0065  
                                 _TXIF 0064                           __CFG_WRT$OFF 0000  
                                 _main 004B                       ??_uint8_data_set 00A1  
                                 btemp 007E                          __CFG_BOREN$ON 0000  
                                 ltemp 007E                                   start 0012  
                                 ttemp 007E                                   wtemp 007E  
                     tx_packet_clear@i 0070                extract_receive_packet@i 00A6  
                                ??_isr 0076                      ??_double_data_set 00AA  
                                ?_main 0070                          __CFG_WDTE$OFF 0000  
                     ?_spi_slave_start 0070                                  i1l131 04A4  
                                i1l125 0496                                  i1l152 028B  
                                i1l156 028E                                  i1l840 03EA  
                                i1l834 03D4                                  i1l962 0349  
                                i1l964 035E                                  i1l974 04E5  
               uint8_data_set@data_len 00A0                                  _RCREG 001A  
                                _RCSTA 0018                                  u15_25 03D2  
                                u16_25 03E8                                  _SPBRG 0099  
                                _PORTA 0005                                  _PORTB 0006  
                                _PORTC 0007                                  _PORTD 0008  
                                _PORTE 0009                                  _TRISA 0085  
                                _TRISB 0086                                  _TRISC 0087  
                                _TRISD 0088                                  _TRISE 0089  
                                u59_25 019E                                  _TXREG 0019  
                                _TXSTA 0098                      put_char@byte_data 00A0  
                        __CFG_PWRTE$ON 0000       double_to_byte_array@p_data_array 00A0  
                     ?_uint16_data_set 00A5                                  pclath 000A  
                                ltemp0 007E                                  ltemp1 0082  
                                ltemp2 0086                                  ltemp3 0080  
                                ttemp0 007E                                  ttemp1 0081  
                                ttemp2 0084                                  ttemp3 0087  
                                ttemp4 007F                                  status 0003  
                                wtemp0 007E                                  wtemp1 0080  
                                wtemp2 0082                                  wtemp3 0084  
                                wtemp4 0086                                  wtemp5 0088  
                                wtemp6 007F                ?_extract_receive_packet 00A2  
                      __initialization 0015                  uint16_data_set@p_data 00AA  
                         __end_of_main 010D                                 ??_main 00BA  
     uint16_to_byte_array@p_data_array 00A0                           ?_send_packet 0070  
                               i1l1300 027A                                 i1l1150 02B2  
                               i1l1152 02CA                                 i1l1304 0280  
                               i1l1242 018E                                 i1l1238 017F  
                               i1l1296 026E                                 i1l1298 0274  
                      _rx_packet_clear 0369                                 _TRISA5 042D  
                               _TRISC3 043B                                 _TRISC4 043C  
                               _TRISC5 043D                                 _TRISC6 043E  
                               _TRISC7 043F                                 _SSPBUF 0013  
       __end_of_extract_receive_packet 025F                      ??_send_data_slave 00A1  
                     __end_of_buf_send 02D2                                 ___wmul 043B  
                        main@send_data 00DB                  double_data_set@p_data 00B0  
                               saved_w 007E                       __end_of_put_char 04DD  
              __end_of__initialization 0047                       ??_receive_packet 0073  
                       __pcstackCOMMON 0070                           __pidataBANK1 04F2  
                __end_of_sent_data_set 016A                       ??_spi_slave_send 0070  
              __end_of_rx_packet_clear 0398                             __pbssBANK0 0042  
                           __pbssBANK1 00E7                             __pbssBANK3 0190  
                           _check_flag 04DD             uint16_to_byte_array@p_data 00A4  
               __size_of_pic_port_init 000F                        _double_data_set 01E6  
             __size_of_tx_packet_clear 002B                             __pmaintext 004B  
                    _spi_slave_receive 04A3                                ?___wmul 00A0  
                           __pintentry 0004                     ?_spi_slave_receive 0070  
        __size_of_uint16_to_byte_array 0028                     __size_of_uart_init 000D  
                  ??_spi_slave_receive 0070                         main@r_data_len 00E1  
        __size_of_double_to_byte_array 002B                              ?_buf_send 0070  
                           __stringtab 045E                       _rx_packet_status 00E7  
                 __size_of_send_packet 0031                     uint16_data_set@buf 00A7  
            __end_of_spi_slave_receive 04B4                        __size_of___wmul 0023  
                            ?_put_char 0070        send_data_slave@data_end_command 00A0  
                              __ptext1 04C3                                __ptext2 0306  
                              __ptext3 010D                                __ptext4 02D2  
                              __ptext5 01A9                                __ptext6 03EE  
                              __ptext7 01E6                                __ptext8 0398  
                              __ptext9 043B                           __size_of_isr 003A  
                        _pic_port_init 04B4                       ?_rx_packet_clear 0070  
                      _send_data_slave 047D                             ??_buf_send 0070  
                              clrloop0 04EB               __size_of_spi_slave_start 0032  
                 end_of_initialization 0047              receive_packet@receive_buf 0020  
              __end_of_double_data_set 0223                            ?_check_flag 0070  
                    __end_of_uart_init 04D0              sent_data_set@byte_of_type 00B3  
                     _tx_packet_status 007C               __size_of_uint16_data_set 003D  
                     double_data_set@i 00B1                             ??_put_char 00A0  
              __size_of_uint8_data_set 0034                      ??_tx_packet_clear 0070  
                       ?_pic_port_init 0070                  double_to_byte_array@i 00A8  
                           _put_string 0416                 spi_slave_start@spi_isr 00A0  
                           main@r_data 00BD             __size_of_spi_slave_receive 0011  
              uint16_data_set@data_len 00A5                  sent_data_set@data_len 00B2  
                       __end_of___wmul 045E                          put_string@str 00A2  
                  __size_of_check_flag 000D                __end_of_send_data_slave 0491  
                  start_initialization 0015                         isr@isr_spi_buf 007B  
                          __end_of_isr 0299                       ?_double_data_set 00A9  
 extract_receive_packet@p_data_len_buf 00A3                      ??_spi_slave_start 00A0  
                     uint16_data_set@i 00AB                               ??___wmul 00A4  
                      receive_packet@i 0041                            __pdataBANK1 00E2  
                    ??_uint16_data_set 00A6          double_to_byte_array@converter 00A3  
                      ??_pic_port_init 00A0                            __pbssCOMMON 007C  
                            ___latbits 0002                          __pcstackBANK0 0020  
                        __pcstackBANK1 00A0                    sent_data_set@p_data 00B9  
             ??_extract_receive_packet 00A4                 __size_of_sent_data_set 005D  
         __end_of_uint16_to_byte_array 0416                      __size_of_buf_send 0039  
                          ?_put_string 0070           __end_of_double_to_byte_array 03C3  
                       _uint8_data_set 02D2             double_to_byte_array@p_data 00A7  
                            __pstrings 045E                __size_of_receive_packet 003F  
                    __size_of_put_char 000D                       ?_send_data_slave 00A0  
                        ??_send_packet 0073                           ??_check_flag 0073  
                    interrupt_function 0004                         ___wmul@product 00A4  
              __size_of_spi_slave_send 0012                              clear_ram0 04EA  
                             _PIE1bits 008C                        _tx_packet_clear 03C3  
                             _PIR1bits 000C                 __end_of_uint8_data_set 0306  
                            main@F1167 00E2                              _uart_init 04C3  
                      main@r_data_type 00E0                          _sent_data_set 010D  
             send_data_slave@data_type 00A2                             _ADCON0bits 001F  
                          __stringbase 0463                             _ADCON1bits 009F  
                            _rx_packet 0190                      ___wmul@multiplier 00A0  
                   __end_of_check_flag 04EA                              buf_send@i 0071  
                  __size_of_put_string 0025                              _tx_packet 0042  
                         send_packet@i 0074        __size_of_extract_receive_packet 003C  
             __size_of_rx_packet_clear 002F                    __end_of_send_packet 0369  
extract_receive_packet@p_data_type_buf 00A5                        ?_uint8_data_set 00A0  
                           ?_uart_init 0070                         ?_sent_data_set 00B2  
                   __end_of__stringtab 0464                   _uint16_to_byte_array 03EE  
              double_data_set@data_len 00A9                        _spi_slave_start 0306  
                             __ptext10 047D                               __ptext11 0416  
                             __ptext20 04A3                               __ptext12 04D0  
                             __ptext21 0299                               __ptext13 04B4  
                             __ptext22 04DD                               __ptext14 0223  
                             __ptext23 0491                               __ptext15 0369  
                             __ptext16 025F                               __ptext17 0338  
                             __ptext18 03C3                               __ptext19 016A  
                 _double_to_byte_array 0398                               _buf_send 0299  
 __end_ofuint16_to_byte_array@bit_mask 0466           uint16_to_byte_array@bit_mask 0464  
              __end_of_tx_packet_clear 03EE                          __size_of_main 00C2  
                      _uint16_data_set 01A9                               _put_char 04D0  
               _extract_receive_packet 0223                         _receive_packet 016A  
                ?_uint16_to_byte_array 00A0                             _INTCONbits 000B  
                     rx_packet_clear@i 00A0                 spi_slave_receive@p_get 0071  
                   double_data_set@buf 00AB                  ?_double_to_byte_array 00A0  
                          _send_packet 0338                               intlevel1 0000  
                         ??_put_string 00A1                         _spi_slave_send 0491  
                            stringcode 045E               __size_of_double_data_set 003D  
                      ??_sent_data_set 00B4                            ??_uart_init 00A0  
                    ??_rx_packet_clear 00A0                 __end_of_receive_packet 01A9  
              __end_of_spi_slave_start 0338                  __end_of_pic_port_init 04C3  
                   __end_of_put_string 043B                               stringdir 045E  
                             stringtab 045E       extract_receive_packet@p_data_buf 00A2  
               __end_of_spi_slave_send 04A3                __end_of_uint16_data_set 01E6  
                     ?_tx_packet_clear 0070                             _SSPCONbits 0014  
                   spi_slave_send@data 0072                      spi_slave_send@buf 0071  
