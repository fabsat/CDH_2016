Microchip MPLAB XC8 Compiler V1.35 ()

Linker command line:

-W-3 --edf=/Applications/microchip/xc8/v1.35/dat/en_msgs.txt -cs \
  -h+dist/default/production/slave_test.X.production.sym \
  --cmf=dist/default/production/slave_test.X.production.cmf -z -Q16F877A \
  -o/tmp/xc3KUVns1 -Mdist/default/production/slave_test.X.production.map \
  -E1 -ver=XC8 -ASTACK=0110h-016fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k /tmp/xcx7YxHf9.obj \
  dist/default/production/slave_test.X.production.obj 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
/tmp/xcx7YxHf9.obj
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        1     400E       0
dist/default/production/slave_test.X.production.obj
                cinit                                15       15       36        8       0
                intentry                              4        4        E        8       0
                text23                              491      491       12      8FA       0
                text22                              4DD      4DD        D      8FA       0
                text21                              299      299       39        8       0
                text20                              4A3      4A3       11      8FA       0
                text19                              16A      16A       3F        8       0
                text18                              3C3      3C3       2B        8       0
                text17                              338      338       31        8       0
                text16                              25F      25F       3A        8       0
                text15                              369      369       2F        8       0
                text14                              223      223       3C        8       0
                text13                              4B4      4B4        F      8FA       0
                text12                              4D0      4D0        D      8FA       0
                text11                              416      416       25        8       0
                text10                              47D      47D       14      8FA       0
                text9                               43B      43B       23        8       0
                text8                               398      398       2B        8       0
                text7                               1E6      1E6       3D        8       0
                text6                               3EE      3EE       28        8       0
                text5                               1A9      1A9       3D        8       0
                text4                               2D2      2D2       34        8       0
                text3                               10D      10D       5D        8       0
                text2                               306      306       32        8       0
                text1                               4C3      4C3        D      8FA       0
                maintext                             4B       4B       C2        8       0
                cstackBANK0                          20       20       22       20       1
                cstackCOMMON                         70       70        C       70       1
                cstackBANK1                          A0       A0       42       A0       1
                clrtext                             4EA      4EA        8      8FA       0
                bssBANK3                            190      190       21      190       1
                dataBANK1                            E2       E2        5       A0       1
                bssBANK1                             E7       E7        1       A0       1
                bssBANK0                             42       42       21       20       1
                bssCOMMON                            7C       7C        1       70       1
                strings                             45E      45E       1F      8BC       0
                idataBANK1                          4F2      4F2        5      8FA       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       36         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text23                              491      491       12         0
                text22                              4DD      4DD        D         0
                text21                              299      299       39         0
                text20                              4A3      4A3       11         0
                text19                              16A      16A       3F         0
                text18                              3C3      3C3       2B         0
                text17                              338      338       31         0
                text16                              25F      25F       3A         0
                text15                              369      369       2F         0
                text14                              223      223       3C         0
                text13                              4B4      4B4        F         0
                text12                              4D0      4D0        D         0
                text11                              416      416       25         0
                text10                              47D      47D       14         0
                text9                               43B      43B       23         0
                text8                               398      398       2B         0
                text7                               1E6      1E6       3D         0
                text6                               3EE      3EE       28         0
                text5                               1A9      1A9       3D         0
                text4                               2D2      2D2       34         0
                text3                               10D      10D       5D         0
                text2                               306      306       32         0
                text1                               4C3      4C3        D         0
                maintext                             4B       4B       C2         0
                clrtext                             4EA      4EA        8         0
                idataBANK1                          4F2      4F2        5         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             45E      45E       1F         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        C         1
                bssCOMMON                            7C       7C        1         1

        CLASS   BANK0          
                cstackBANK0                          20       20       22         1
                bssBANK0                             42       42       21         1

        CLASS   BANK1          
                cstackBANK1                          A0       A0       42         1
                dataBANK1                            E2       E2        5         1
                bssBANK1                             E7       E7        1         1

        CLASS   BANK2          

        CLASS   BANK3          
                bssBANK3                            190      190       21         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  00045A  00045E         8       0  CODE        2
                cstackBANK0                    000020  000043  000063        20       1  BANK0       1
                cstackCOMMON                   000070  00000D  00007D        70       1  COMMON      1
                cstackBANK1                    0000A0  000048  0000E8        A0       1  BANK1       1
                bssBANK3                       000190  000021  0001B1       190       1  BANK3       1
                strings                        00045E  00001F  00047D       8BC       0  STRING      2
                text10                         00047D  00007A  0004F7       8FA       0  CODE        2
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0063-006F              D           1
        BANK1            00E8-00EF              8           1
        BANK2            0110-016F             60           1
        BANK3            01B1-01EF             3F           1
        CODE             0003-0003              1           2
                         04F7-1FFF            800
        COMMON           007D-007D              1           1
        CONST            0003-0003              1           2
                         04F7-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         04F7-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0063-006F              D           1
                         00E8-00EF              8
                         0110-016F             60
                         01B1-01EF             3F
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         04F7-1FFF           1B09
        STRING           0003-0003              1           2
                         04F7-1FFF            100

                                  Symbol Table

?___wmul                               cstackBANK1  00A0
_ADCON0bits                            (abs)        001F
_ADCON1bits                            (abs)        009F
_INTCONbits                            (abs)        000B
_PIE1bits                              (abs)        008C
_PIR1bits                              (abs)        000C
_PORTA                                 (abs)        0005
_PORTB                                 (abs)        0006
_PORTC                                 (abs)        0007
_PORTD                                 (abs)        0008
_PORTE                                 (abs)        0009
_RA0                                   (abs)        0028
_RCIF                                  (abs)        0065
_RCREG                                 (abs)        001A
_RCSTA                                 (abs)        0018
_SPBRG                                 (abs)        0099
_SSPBUF                                (abs)        0013
_SSPCONbits                            (abs)        0014
_SSPSTATbits                           (abs)        0094
_TRISA                                 (abs)        0085
_TRISA5                                (abs)        042D
_TRISB                                 (abs)        0086
_TRISC                                 (abs)        0087
_TRISC3                                (abs)        043B
_TRISC4                                (abs)        043C
_TRISC5                                (abs)        043D
_TRISC6                                (abs)        043E
_TRISC7                                (abs)        043F
_TRISD                                 (abs)        0088
_TRISE                                 (abs)        0089
_TXIF                                  (abs)        0064
_TXREG                                 (abs)        0019
_TXSTA                                 (abs)        0098
__CFG_BOREN$ON                         (abs)        0000
__CFG_CP$OFF                           (abs)        0000
__CFG_CPD$OFF                          (abs)        0000
__CFG_FOSC$HS                          (abs)        0000
__CFG_LVP$OFF                          (abs)        0000
__CFG_PWRTE$ON                         (abs)        0000
__CFG_WDTE$OFF                         (abs)        0000
__CFG_WRT$OFF                          (abs)        0000
__Habs1                                abs1         0000
__Hbank0                               bank0        0000
__Hbank1                               bank1        0000
__Hbank2                               bank2        0000
__Hbank3                               bank3        0000
__HbssBANK0                            bssBANK0     0000
__HbssBANK1                            bssBANK1     0000
__HbssBANK3                            bssBANK3     0000
__HbssCOMMON                           bssCOMMON    0000
__Hcinit                               cinit        004B
__Hclrtext                             clrtext      0000
__Hcode                                code         0000
__Hcommon                              common       0000
__Hconfig                              config       2008
__HcstackBANK0                         cstackBANK0  0000
__HcstackBANK1                         cstackBANK1  0000
__HcstackCOMMON                        cstackCOMMON 0000
__HdataBANK1                           dataBANK1    0000
__Heeprom_data                         eeprom_data  0000
__Hend_init                            end_init     0015
__Hfunctab                             functab      0000
__HidataBANK1                          idataBANK1   0000
__Hidloc                               idloc        0000
__Hinit                                init         0012
__Hintentry                            intentry     0012
__Hmaintext                            maintext     0000
__Hpowerup                             powerup      0000
__Hram                                 ram          0000
__Hreset_vec                           reset_vec    0003
__Hsfr0                                sfr0         0000
__Hsfr1                                sfr1         0000
__Hsfr2                                sfr2         0000
__Hsfr3                                sfr3         0000
__Hspace_0                             (abs)        2008
__Hspace_1                             (abs)        01B1
__Hspace_2                             (abs)        0000
__Hspace_3                             (abs)        0000
__Hstack                               stack        0000
__Hstrings                             strings      0000
__Htext                                text         0000
__Labs1                                abs1         0000
__Lbank0                               bank0        0000
__Lbank1                               bank1        0000
__Lbank2                               bank2        0000
__Lbank3                               bank3        0000
__LbssBANK0                            bssBANK0     0000
__LbssBANK1                            bssBANK1     0000
__LbssBANK3                            bssBANK3     0000
__LbssCOMMON                           bssCOMMON    0000
__Lcinit                               cinit        0015
__Lclrtext                             clrtext      0000
__Lcode                                code         0000
__Lcommon                              common       0000
__Lconfig                              config       2007
__LcstackBANK0                         cstackBANK0  0000
__LcstackBANK1                         cstackBANK1  0000
__LcstackCOMMON                        cstackCOMMON 0000
__LdataBANK1                           dataBANK1    0000
__Leeprom_data                         eeprom_data  0000
__Lend_init                            end_init     0012
__Lfunctab                             functab      0000
__LidataBANK1                          idataBANK1   0000
__Lidloc                               idloc        0000
__Linit                                init         0012
__Lintentry                            intentry     0004
__Lmaintext                            maintext     0000
__Lpowerup                             powerup      0000
__Lram                                 ram          0000
__Lreset_vec                           reset_vec    0000
__Lsfr0                                sfr0         0000
__Lsfr1                                sfr1         0000
__Lsfr2                                sfr2         0000
__Lsfr3                                sfr3         0000
__Lspace_0                             (abs)        0000
__Lspace_1                             (abs)        0000
__Lspace_2                             (abs)        0000
__Lspace_3                             (abs)        0000
__Lstack                               stack        0000
__Lstrings                             strings      0000
__Ltext                                text         0000
__S0                                   (abs)        2008
__S1                                   (abs)        01B1
__S2                                   (abs)        0000
__S3                                   (abs)        0000
___int_sp                              stack        0000
___latbits                             (abs)        0002
___sp                                  stack        0000
___wmul                                text9        043B
___wmul@multiplicand                   cstackBANK1  00A2
___wmul@multiplier                     cstackBANK1  00A0
___wmul@product                        cstackBANK1  00A4
__end_of___wmul                        text9        045E
__end_of__initialization               cinit        0047
__end_of__stringtab                    strings      0464
__end_of_buf_send                      text21       02D2
__end_of_check_flag                    text22       04EA
__end_of_double_data_set               text7        0223
__end_of_double_to_byte_array          text8        03C3
__end_of_extract_receive_packet        text14       025F
__end_of_isr                           text16       0299
__end_of_main                          maintext     010D
__end_of_pic_port_init                 text13       04C3
__end_of_put_char                      text12       04DD
__end_of_put_string                    text11       043B
__end_of_receive_packet                text19       01A9
__end_of_rx_packet_clear               text15       0398
__end_of_send_data_slave               text10       0491
__end_of_send_packet                   text17       0369
__end_of_sent_data_set                 text3        016A
__end_of_spi_slave_receive             text20       04B4
__end_of_spi_slave_send                text23       04A3
__end_of_spi_slave_start               text2        0338
__end_of_tx_packet_clear               text18       03EE
__end_of_uart_init                     text1        04D0
__end_of_uint16_data_set               text5        01E6
__end_of_uint16_to_byte_array          text6        0416
__end_of_uint8_data_set                text4        0306
__end_ofuint16_to_byte_array@bit_mask  strings      0466
__initialization                       cinit        0015
__pbssBANK0                            bssBANK0     0042
__pbssBANK1                            bssBANK1     00E7
__pbssBANK3                            bssBANK3     0190
__pbssCOMMON                           bssCOMMON    007C
__pcstackBANK0                         cstackBANK0  0020
__pcstackBANK1                         cstackBANK1  00A0
__pcstackCOMMON                        cstackCOMMON 0070
__pdataBANK1                           dataBANK1    00E2
__pidataBANK1                          idataBANK1   04F2
__pintentry                            intentry     0004
__pmaintext                            maintext     004B
__pstrings                             strings      045E
__ptext1                               text1        04C3
__ptext10                              text10       047D
__ptext11                              text11       0416
__ptext12                              text12       04D0
__ptext13                              text13       04B4
__ptext14                              text14       0223
__ptext15                              text15       0369
__ptext16                              text16       025F
__ptext17                              text17       0338
__ptext18                              text18       03C3
__ptext19                              text19       016A
__ptext2                               text2        0306
__ptext20                              text20       04A3
__ptext21                              text21       0299
__ptext22                              text22       04DD
__ptext23                              text23       0491
__ptext3                               text3        010D
__ptext4                               text4        02D2
__ptext5                               text5        01A9
__ptext6                               text6        03EE
__ptext7                               text7        01E6
__ptext8                               text8        0398
__ptext9                               text9        043B
__size_of___wmul                       (abs)        0000
__size_of_buf_send                     (abs)        0000
__size_of_check_flag                   (abs)        0000
__size_of_double_data_set              (abs)        0000
__size_of_double_to_byte_array         (abs)        0000
__size_of_extract_receive_packet       (abs)        0000
__size_of_isr                          (abs)        0000
__size_of_main                         (abs)        0000
__size_of_pic_port_init                (abs)        0000
__size_of_put_char                     (abs)        0000
__size_of_put_string                   (abs)        0000
__size_of_receive_packet               (abs)        0000
__size_of_rx_packet_clear              (abs)        0000
__size_of_send_data_slave              (abs)        0000
__size_of_send_packet                  (abs)        0000
__size_of_sent_data_set                (abs)        0000
__size_of_spi_slave_receive            (abs)        0000
__size_of_spi_slave_send               (abs)        0000
__size_of_spi_slave_start              (abs)        0000
__size_of_tx_packet_clear              (abs)        0000
__size_of_uart_init                    (abs)        0000
__size_of_uint16_data_set              (abs)        0000
__size_of_uint16_to_byte_array         (abs)        0000
__size_of_uint8_data_set               (abs)        0000
__stringbase                           strings      0463
__stringtab                            strings      045E
_buf_send                              text21       0299
_check_flag                            text22       04DD
_double_data_set                       text7        01E6
_double_to_byte_array                  text8        0398
_extract_receive_packet                text14       0223
_isr                                   text16       025F
_main                                  maintext     004B
_pic_port_init                         text13       04B4
_put_char                              text12       04D0
_put_string                            text11       0416
_receive_packet                        text19       016A
_rx_packet                             bssBANK3     0190
_rx_packet_clear                       text15       0369
_rx_packet_status                      bssBANK1     00E7
_send_data_slave                       text10       047D
_send_packet                           text17       0338
_sent_data_set                         text3        010D
_spi_slave_receive                     text20       04A3
_spi_slave_send                        text23       0491
_spi_slave_start                       text2        0306
_tx_packet                             bssBANK0     0042
_tx_packet_clear                       text18       03C3
_tx_packet_status                      bssCOMMON    007C
_uart_init                             text1        04C3
_uint16_data_set                       text5        01A9
_uint16_to_byte_array                  text6        03EE
_uint8_data_set                        text4        02D2
btemp                                  (abs)        007E
buf_send@buf                           cstackCOMMON 0072
buf_send@i                             cstackCOMMON 0071
clear_ram0                             clrtext      04EA
double_data_set@buf                    cstackBANK1  00AB
double_data_set@data_len               cstackBANK1  00A9
double_data_set@i                      cstackBANK1  00B1
double_data_set@p_data                 cstackBANK1  00B0
double_to_byte_array@converter         cstackBANK1  00A3
double_to_byte_array@i                 cstackBANK1  00A8
double_to_byte_array@p_data            cstackBANK1  00A7
double_to_byte_array@p_data_array      cstackBANK1  00A0
end_of_initialization                  cinit        0047
extract_receive_packet@i               cstackBANK1  00A6
extract_receive_packet@p_data_buf      cstackBANK1  00A2
extract_receive_packet@p_data_len_buf  cstackBANK1  00A3
extract_receive_packet@p_data_type_buf cstackBANK1  00A5
interrupt_function                     intentry     0004
intlevel0                              functab      0000
intlevel1                              functab      0000
intlevel2                              functab      0000
intlevel3                              functab      0000
intlevel4                              functab      0000
intlevel5                              functab      0000
isr@isr_spi_buf                        cstackCOMMON 007B
ltemp                                  (abs)        007E
ltemp0                                 (abs)        007E
ltemp1                                 (abs)        0082
ltemp2                                 (abs)        0086
ltemp3                                 (abs)        0080
main@F1167                             dataBANK1    00E2
main@r_data                            cstackBANK1  00BD
main@r_data_len                        cstackBANK1  00E1
main@r_data_type                       cstackBANK1  00E0
main@send_data                         cstackBANK1  00DB
put_char@byte_data                     cstackBANK1  00A0
put_string@str                         cstackBANK1  00A2
receive_packet@i                       cstackBANK0  0041
receive_packet@receive_buf             cstackBANK0  0020
reset_vec                              reset_vec    0000
rx_packet_clear@i                      cstackBANK1  00A0
saved_w                                (abs)        007E
send_data_slave@data_end_command       cstackBANK1  00A0
send_data_slave@data_type              cstackBANK1  00A2
send_packet@i                          cstackCOMMON 0074
sent_data_set@byte_of_type             cstackBANK1  00B3
sent_data_set@data_len                 cstackBANK1  00B2
sent_data_set@p_data                   cstackBANK1  00B9
spi_slave_receive@p_get                cstackCOMMON 0071
spi_slave_send@buf                     cstackCOMMON 0071
spi_slave_send@data                    cstackCOMMON 0072
spi_slave_start@spi_isr                cstackBANK1  00A0
stackhi                                (abs)        0000
stacklo                                (abs)        0000
start                                  init         0012
start_initialization                   cinit        0015
ttemp                                  (abs)        007E
ttemp0                                 (abs)        007E
ttemp1                                 (abs)        0081
ttemp2                                 (abs)        0084
ttemp3                                 (abs)        0087
ttemp4                                 (abs)        007F
tx_packet_clear@i                      cstackCOMMON 0070
uint16_data_set@buf                    cstackBANK1  00A7
uint16_data_set@data_len               cstackBANK1  00A5
uint16_data_set@i                      cstackBANK1  00AB
uint16_data_set@p_data                 cstackBANK1  00AA
uint16_to_byte_array@bit_mask          strings      0464
uint16_to_byte_array@p_data            cstackBANK1  00A4
uint16_to_byte_array@p_data_array      cstackBANK1  00A0
uint8_data_set@data_len                cstackBANK1  00A0
uint8_data_set@p_data                  cstackBANK1  00A2
wtemp                                  (abs)        007E
wtemp0                                 (abs)        007E
wtemp1                                 (abs)        0080
wtemp2                                 (abs)        0082
wtemp3                                 (abs)        0084
wtemp4                                 (abs)        0086
wtemp5                                 (abs)        0088
wtemp6                                 (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 32 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  r_data         30   29[BANK1 ] unsigned char [30]
  send_data       5   59[BANK1 ] unsigned char [5]
  r_data_len      1   65[BANK1 ] unsigned char 
  r_data_type     1   64[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  2   83[None  ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0      37       0       0
      Temps:          0       0       3       0       0
      Totals:         0       0      40       0       0
Total ram usage:       40 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_extract_receive_packet
		_pic_port_init
		_put_char
		_put_string
		_send_data_slave
		_sent_data_set
		_spi_slave_start
		_uart_init
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _uart_init *****************
 Defined at:
		line 38 in file "uart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _spi_slave_start *****************
 Defined at:
		line 38 in file "spi_slave.c"
 Parameters:    Size  Location     Type
  spi_isr         1    wreg     enum E1101
 Auto vars:     Size  Location     Type
  spi_isr         1    0[BANK1 ] enum E1101
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       1       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _sent_data_set *****************
 Defined at:
		line 100 in file "protocol.c"
 Parameters:    Size  Location     Type
  p_data          1    wreg     PTR void 
		 -> main@send_data(5), 
  data_len        1   18[BANK1 ] unsigned char 
  byte_of_type    1   19[BANK1 ] unsigned char 
 Auto vars:     Size  Location     Type
  p_data          1   25[BANK1 ] PTR void 
		 -> main@send_data(5), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       2       0       0
      Locals:         0       0       1       0       0
      Temps:          0       0       5       0       0
      Totals:         0       0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___wmul
		_double_data_set
		_uint16_data_set
		_uint8_data_set
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _uint8_data_set *****************
 Defined at:
		line 370 in file "protocol.c"
 Parameters:    Size  Location     Type
  p_data          1    wreg     PTR unsigned char 
		 -> main@send_data(5), 
  data_len        1    0[BANK1 ] unsigned char 
 Auto vars:     Size  Location     Type
  p_data          1    2[BANK1 ] PTR unsigned char 
		 -> main@send_data(5), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       1       0       0
      Locals:         0       0       1       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_sent_data_set
 This function uses a non-reentrant model


 *************** function _uint16_data_set *****************
 Defined at:
		line 392 in file "protocol.c"
 Parameters:    Size  Location     Type
  p_data          1    wreg     PTR unsigned int 
		 -> main@send_data(5), 
  data_len        1    5[BANK1 ] unsigned char 
 Auto vars:     Size  Location     Type
  p_data          1   10[BANK1 ] PTR unsigned int 
		 -> main@send_data(5), 
  buf             3    7[BANK1 ] unsigned char [3]
  i               1   11[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       1       0       0
      Locals:         0       0       5       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_uint16_to_byte_array
 This function is called by:
		_sent_data_set
 This function uses a non-reentrant model


 *************** function _uint16_to_byte_array *****************
 Defined at:
		line 450 in file "protocol.c"
 Parameters:    Size  Location     Type
  p_data          1    wreg     PTR unsigned int 
		 -> main@send_data(5), 
  p_data_array    1    0[BANK1 ] PTR unsigned char 
		 -> uint16_data_set@buf(3), 
 Auto vars:     Size  Location     Type
  p_data          1    4[BANK1 ] PTR unsigned int 
		 -> main@send_data(5), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       1       0       0
      Locals:         0       0       1       0       0
      Temps:          0       0       3       0       0
      Totals:         0       0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_uint16_data_set
 This function uses a non-reentrant model


 *************** function _double_data_set *****************
 Defined at:
		line 421 in file "protocol.c"
 Parameters:    Size  Location     Type
  p_data          1    wreg     PTR 
		 -> main@send_data(5), 
  data_len        1    9[BANK1 ] unsigned char 
 Auto vars:     Size  Location     Type
  p_data          1   16[BANK1 ] PTR 
		 -> main@send_data(5), 
  buf             5   11[BANK1 ] unsigned char [5]
  i               1   17[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       1       0       0
      Locals:         0       0       7       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0       9       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_double_to_byte_array
 This function is called by:
		_sent_data_set
 This function uses a non-reentrant model


 *************** function _double_to_byte_array *****************
 Defined at:
		line 472 in file "protocol.c"
 Parameters:    Size  Location     Type
  p_data          1    wreg     PTR 
		 -> main@send_data(5), 
  p_data_array    1    0[BANK1 ] PTR unsigned char 
		 -> double_data_set@buf(5), 
 Auto vars:     Size  Location     Type
  p_data          1    7[BANK1 ] PTR 
		 -> main@send_data(5), 
  converter       4    3[BANK1 ] struct .
  i               1    8[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       1       0       0
      Locals:         0       0       6       0       0
      Temps:          0       0       2       0       0
      Totals:         0       0       9       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_double_data_set
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "/Applications/microchip/xc8/v1.35/sources/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[BANK1 ] unsigned int 
  multiplicand    2    2[BANK1 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[BANK1 ] unsigned int 
 Return value:  Size  Location     Type
                  2    0[BANK1 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       4       0       0
      Locals:         0       0       2       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_sent_data_set
 This function uses a non-reentrant model


 *************** function _send_data_slave *****************
 Defined at:
		line 141 in file "protocol.c"
 Parameters:    Size  Location     Type
  data_type       1    wreg     enum E1107
  data_end_com    1    0[BANK1 ] enum E1112
 Auto vars:     Size  Location     Type
  data_type       1    2[BANK1 ] enum E1107
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       1       0       0
      Locals:         0       0       1       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _put_string *****************
 Defined at:
		line 77 in file "uart.c"
 Parameters:    Size  Location     Type
  str             1    wreg     PTR unsigned char 
		 -> STR_1(23), 
 Auto vars:     Size  Location     Type
  str             1    2[BANK1 ] PTR unsigned char 
		 -> STR_1(23), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       1       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_put_char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _put_char *****************
 Defined at:
		line 61 in file "uart.c"
 Parameters:    Size  Location     Type
  byte_data       1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  byte_data       1    0[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       1       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_put_string
		_main
 This function uses a non-reentrant model


 *************** function _pic_port_init *****************
 Defined at:
		line 92 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _extract_receive_packet *****************
 Defined at:
		line 166 in file "protocol.c"
 Parameters:    Size  Location     Type
  p_data_type_    1    wreg     PTR unsigned char 
		 -> main@r_data_type(1), 
  p_data_buf      1    2[BANK1 ] PTR unsigned char 
		 -> main@r_data(30), 
  p_data_len_b    1    3[BANK1 ] PTR unsigned char 
		 -> main@r_data_len(1), 
 Auto vars:     Size  Location     Type
  p_data_type_    1    5[BANK1 ] PTR unsigned char 
		 -> main@r_data_type(1), 
  i               1    6[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       2       0       0
      Locals:         0       0       2       0       0
      Temps:          0       0       1       0       0
      Totals:         0       0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_rx_packet_clear
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rx_packet_clear *****************
 Defined at:
		line 231 in file "protocol.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2    0[BANK1 ] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       2       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_extract_receive_packet
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 30 in file "isr.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  isr_spi_buf     1   11[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          5       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_check_flag
		_receive_packet
		_send_packet
		_spi_slave_receive
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _send_packet *****************
 Defined at:
		line 266 in file "protocol.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    4[COMMON] unsigned char 
  buf             1    0        unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_spi_slave_send
		_tx_packet_clear
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function _tx_packet_clear *****************
 Defined at:
		line 200 in file "protocol.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2    0[COMMON] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_send_packet
 This function uses a non-reentrant model


 *************** function _receive_packet *****************
 Defined at:
		line 305 in file "protocol.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  receive_buf    33    0[BANK0 ] unsigned char [33]
  i               1   33[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      34       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3      34       0       0       0
Total ram usage:       37 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_buf_send
		_spi_slave_receive
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function _spi_slave_receive *****************
 Defined at:
		line 119 in file "spi_slave.c"
 Parameters:    Size  Location     Type
  p_get           1    wreg     PTR unsigned char 
		 -> receive_packet@receive_buf(33), isr@isr_spi_buf(1), 
 Auto vars:     Size  Location     Type
  p_get           1    1[COMMON] PTR unsigned char 
		 -> receive_packet@receive_buf(33), isr@isr_spi_buf(1), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_isr
		_receive_packet
 This function uses a non-reentrant model


 *************** function _buf_send *****************
 Defined at:
		line 505 in file "protocol.c"
 Parameters:    Size  Location     Type
  buf             1    wreg     PTR unsigned char 
		 -> receive_packet@receive_buf(33), 
 Auto vars:     Size  Location     Type
  buf             1    2[COMMON] PTR unsigned char 
		 -> receive_packet@receive_buf(33), 
  i               1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_receive_packet
 This function uses a non-reentrant model


 *************** function _check_flag *****************
 Defined at:
		line 341 in file "protocol.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_spi_slave_send
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function _spi_slave_send *****************
 Defined at:
		line 88 in file "spi_slave.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    2[COMMON] unsigned char 
  buf             1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_send_packet
		_check_flag
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
uart.c
		_put_string    		CODE           	0416	0000	38
		_uart_init     		CODE           	04C3	0000	14
		_put_char      		CODE           	04D0	0000	14

uart.c estimated size: 66

spi_slave.c
		_spi_slave_receive		CODE           	04A3	0000	18
		_spi_slave_send		CODE           	0491	0000	19
		_spi_slave_start		CODE           	0306	0000	51

spi_slave.c estimated size: 88

isr.c
		_isr           		CODE           	025F	0000	59

isr.c estimated size: 59

protocol.c
		_extract_receive_packet		CODE           	0223	0000	61
		_uint16_data_set		CODE           	01A9	0000	62
		_double_data_set		CODE           	01E6	0000	62
		_buf_send      		CODE           	0299	0000	58
		_send_packet   		CODE           	0338	0000	50
		_check_flag    		CODE           	04DD	0000	14
		_rx_packet_clear		CODE           	0369	0000	48
		_tx_packet_clear		CODE           	03C3	0000	44
		_uint8_data_set		CODE           	02D2	0000	53
		_sent_data_set 		CODE           	010D	0000	94
		_receive_packet		CODE           	016A	0000	64
		_send_data_slave		CODE           	047D	0000	21
		_uint16_to_byte_array		CODE           	03EE	0000	41
		_double_to_byte_array		CODE           	0398	0000	44

protocol.c estimated size: 716

shared
		__stringtab    		STRING         	045E	0000	7
		__initialization		CODE           	0015	0000	51
		uint16_to_byte_array@bit_mask		STRING         	0464	0000	3

shared estimated size: 61

main.c
		_main          		CODE           	004B	0000	195
		_pic_port_init 		CODE           	04B4	0000	16

main.c estimated size: 211

/Applications/microchip/xc8/v1.35/sources/common/Umul16.c
		___wmul        		CODE           	043B	0000	36

/Applications/microchip/xc8/v1.35/sources/common/Umul16.c estimated size: 36

